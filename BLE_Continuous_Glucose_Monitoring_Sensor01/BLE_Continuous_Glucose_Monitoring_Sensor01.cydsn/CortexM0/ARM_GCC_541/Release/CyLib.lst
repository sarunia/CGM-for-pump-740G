ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 6.10
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2021, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  75:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_6_REV            (6u)
  76:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_9_REV            (9u)
  77:Generated_Source\PSoC4/CyLib.c ****     #define CYSFLASH_CRI_testpgm_rev_MASK   (0x0000003Fu)
  78:Generated_Source\PSoC4/CyLib.c **** 
  79:Generated_Source\PSoC4/CyLib.c ****     /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  80:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  81:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void);
  84:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void);
  85:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  86:Generated_Source\PSoC4/CyLib.c **** 
  87:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog
  98:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in
  99:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 105:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 106:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 106 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 107 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** 
 116:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 117:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 118:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 119:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 120:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c **** }
  38              		.loc 1 122 0
  39              		@ sp needed
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  40              		.loc 1 107 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 122 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
  47              	.L2:
  48 0010 08010B40 		.word	1074462984
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 4


  49              		.cfi_endproc
  50              	.LFE2:
  51              		.size	CySysClkImoStart, .-CySysClkImoStart
  52              		.section	.text.CySysClkImoStop,"ax",%progbits
  53              		.align	1
  54              		.global	CySysClkImoStop
  55              		.code	16
  56              		.thumb_func
  57              		.type	CySysClkImoStop, %function
  58              	CySysClkImoStop:
  59              	.LFB3:
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 126:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 127:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S /
 132:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also
 133:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 139:Generated_Source\PSoC4/CyLib.c **** {
  60              		.loc 1 139 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 145:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 146:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 147:Generated_Source\PSoC4/CyLib.c **** 
 148:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  65              		.loc 1 148 0
  66 0000 024A     		ldr	r2, .L5
 149:Generated_Source\PSoC4/CyLib.c **** }
  67              		.loc 1 149 0
  68              		@ sp needed
 148:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 148 0
  70 0002 1368     		ldr	r3, [r2]
  71 0004 5B00     		lsls	r3, r3, #1
  72 0006 5B08     		lsrs	r3, r3, #1
  73 0008 1360     		str	r3, [r2]
  74              		.loc 1 149 0
  75 000a 7047     		bx	lr
  76              	.L6:
  77              		.align	2
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 5


  78              	.L5:
  79 000c 08010B40 		.word	1074462984
  80              		.cfi_endproc
  81              	.LFE3:
  82              		.size	CySysClkImoStop, .-CySysClkImoStop
  83              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  84              		.align	1
  85              		.global	CySysClkWriteHfclkDirect
  86              		.code	16
  87              		.thumb_func
  88              		.type	CySysClkWriteHfclkDirect, %function
  89              	CySysClkWriteHfclkDirect:
  90              	.LFB4:
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 154:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 155:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC4/CyLib.c ****     *
 157:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 158:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 159:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 160:Generated_Source\PSoC4/CyLib.c ****     *
 161:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 162:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 163:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 164:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 165:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 166:Generated_Source\PSoC4/CyLib.c ****     *
 167:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 168:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 169:Generated_Source\PSoC4/CyLib.c ****     *
 170:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 171:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 175:Generated_Source\PSoC4/CyLib.c ****     {
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 177:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 178:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 181:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 184:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 185:Generated_Source\PSoC4/CyLib.c **** 
 186:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 187:Generated_Source\PSoC4/CyLib.c ****         {
 188:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 191:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 6


 194:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 195:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 196:Generated_Source\PSoC4/CyLib.c **** 
 197:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 198:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 199:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 202:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 204:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 207:Generated_Source\PSoC4/CyLib.c ****                 }
 208:Generated_Source\PSoC4/CyLib.c ****             #else
 209:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 210:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 211:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 215:Generated_Source\PSoC4/CyLib.c ****                 #else
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 217:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 218:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0u;
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 229:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 247:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 7


 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 253:Generated_Source\PSoC4/CyLib.c ****             {
 254:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 255:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 256:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 261:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 264:Generated_Source\PSoC4/CyLib.c **** 
 265:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 266:Generated_Source\PSoC4/CyLib.c ****         }
 267:Generated_Source\PSoC4/CyLib.c ****     }
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c **** 
 270:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 272:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 277:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 280:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 283:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 284:Generated_Source\PSoC4/CyLib.c ****     {
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 287:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 292:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 294:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 295:Generated_Source\PSoC4/CyLib.c ****             {
 296:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 297:Generated_Source\PSoC4/CyLib.c ****                 {
 298:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 299:Generated_Source\PSoC4/CyLib.c ****                     break;
 300:Generated_Source\PSoC4/CyLib.c ****                 }
 301:Generated_Source\PSoC4/CyLib.c ****             }
 302:Generated_Source\PSoC4/CyLib.c ****         #else
 303:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 304:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 305:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 306:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 307:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) &
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 8


 308:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 309:Generated_Source\PSoC4/CyLib.c ****             #else
 310:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 311:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 312:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 319:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 320:Generated_Source\PSoC4/CyLib.c ****         #else
 321:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 322:Generated_Source\PSoC4/CyLib.c ****         #endif
 323:Generated_Source\PSoC4/CyLib.c ****     }
 324:Generated_Source\PSoC4/CyLib.c **** 
 325:Generated_Source\PSoC4/CyLib.c **** 
 326:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 327:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 328:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 331:Generated_Source\PSoC4/CyLib.c ****     *
 332:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 333:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 334:Generated_Source\PSoC4/CyLib.c ****     *
 335:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 336:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 337:Generated_Source\PSoC4/CyLib.c ****     *
 338:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 339:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 340:Generated_Source\PSoC4/CyLib.c ****     {
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 343:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 344:Generated_Source\PSoC4/CyLib.c ****     }
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 350:Generated_Source\PSoC4/CyLib.c **** 
 351:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 353:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 360:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 363:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 364:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 9


 365:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 366:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 367:Generated_Source\PSoC4/CyLib.c ****     {
 368:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 369:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 370:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 371:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 375:Generated_Source\PSoC4/CyLib.c **** 
 376:Generated_Source\PSoC4/CyLib.c ****             /* Save trims to restore in CySysClkImoDisableUsbLock() */
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 378:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetImoTrims();
 381:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 382:Generated_Source\PSoC4/CyLib.c **** 
 383:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 386:Generated_Source\PSoC4/CyLib.c ****     }
 387:Generated_Source\PSoC4/CyLib.c **** 
 388:Generated_Source\PSoC4/CyLib.c **** 
 389:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 390:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 391:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 396:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 399:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 405:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 408:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 411:Generated_Source\PSoC4/CyLib.c ****             {
 412:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 413:Generated_Source\PSoC4/CyLib.c ****                 {
 414:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 415:Generated_Source\PSoC4/CyLib.c ****                     break;
 416:Generated_Source\PSoC4/CyLib.c ****                 }
 417:Generated_Source\PSoC4/CyLib.c ****             }
 418:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 419:Generated_Source\PSoC4/CyLib.c **** 
 420:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 421:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 10


 422:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 423:Generated_Source\PSoC4/CyLib.c ****             /* Restore IMO trim registers saved by CySysClkImoEnableUsbLock() */
 424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 425:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 426:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 427:Generated_Source\PSoC4/CyLib.c **** 
 428:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 431:Generated_Source\PSoC4/CyLib.c ****     }
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 435:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 436:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 437:Generated_Source\PSoC4/CyLib.c ****     *
 438:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 444:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 445:Generated_Source\PSoC4/CyLib.c ****     *
 446:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 447:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 448:Generated_Source\PSoC4/CyLib.c ****     {
 449:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 451:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 452:Generated_Source\PSoC4/CyLib.c ****     }
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2)
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetPwrBgTrim5
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Updates Bandgap trim register based on the test program revision.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void)
 464:Generated_Source\PSoC4/CyLib.c ****     {
 465:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 466:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 467:Generated_Source\PSoC4/CyLib.c ****                             CYSFLASH_CRI_testpgm_rev_MASK);
 468:Generated_Source\PSoC4/CyLib.c **** 
 469:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_9_REV)
 470:Generated_Source\PSoC4/CyLib.c ****         {
 471:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_IMO_TMPCO0_REG;
 472:Generated_Source\PSoC4/CyLib.c ****         }
 473:Generated_Source\PSoC4/CyLib.c ****         else
 474:Generated_Source\PSoC4/CyLib.c ****         {
 475:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 476:Generated_Source\PSoC4/CyLib.c ****         }
 477:Generated_Source\PSoC4/CyLib.c ****     }
 478:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 11


 479:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetImoTrims
 481:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c ****     *
 483:Generated_Source\PSoC4/CyLib.c ****     * Updates IMO trim registers based on the IMO frequency and test program
 484:Generated_Source\PSoC4/CyLib.c ****     * revision.
 485:Generated_Source\PSoC4/CyLib.c ****     *
 486:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 487:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void)
 488:Generated_Source\PSoC4/CyLib.c ****     {
 489:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 490:Generated_Source\PSoC4/CyLib.c **** 
 491:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 492:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 493:Generated_Source\PSoC4/CyLib.c **** 
 494:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 495:Generated_Source\PSoC4/CyLib.c ****         {
 496:Generated_Source\PSoC4/CyLib.c ****             if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreqMhz2
 497:Generated_Source\PSoC4/CyLib.c ****             {
 498:Generated_Source\PSoC4/CyLib.c ****                 freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 499:Generated_Source\PSoC4/CyLib.c ****                 break;
 500:Generated_Source\PSoC4/CyLib.c ****             }
 501:Generated_Source\PSoC4/CyLib.c ****         }
 502:Generated_Source\PSoC4/CyLib.c **** 
 503:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 504:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 505:Generated_Source\PSoC4/CyLib.c ****             CYSFLASH_CRI_testpgm_rev_MASK);
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_6_REV)
 508:Generated_Source\PSoC4/CyLib.c ****         {
 509:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 510:Generated_Source\PSoC4/CyLib.c ****             {
 511:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 512:Generated_Source\PSoC4/CyLib.c ****             }
 513:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 514:Generated_Source\PSoC4/CyLib.c ****             {
 515:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 516:Generated_Source\PSoC4/CyLib.c ****             }
 517:Generated_Source\PSoC4/CyLib.c ****             else
 518:Generated_Source\PSoC4/CyLib.c ****             {
 519:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 520:Generated_Source\PSoC4/CyLib.c ****             }
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 523:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 524:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 525:Generated_Source\PSoC4/CyLib.c ****         }
 526:Generated_Source\PSoC4/CyLib.c ****         else
 527:Generated_Source\PSoC4/CyLib.c ****         {
 528:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 529:Generated_Source\PSoC4/CyLib.c ****             {
 530:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG;
 531:Generated_Source\PSoC4/CyLib.c ****             }
 532:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 533:Generated_Source\PSoC4/CyLib.c ****             {
 534:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG;
 535:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 12


 536:Generated_Source\PSoC4/CyLib.c ****             else
 537:Generated_Source\PSoC4/CyLib.c ****             {
 538:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 539:Generated_Source\PSoC4/CyLib.c ****             }
 540:Generated_Source\PSoC4/CyLib.c **** 
 541:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 543:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 544:Generated_Source\PSoC4/CyLib.c ****         }
 545:Generated_Source\PSoC4/CyLib.c ****     }
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 553:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 558:Generated_Source\PSoC4/CyLib.c **** *
 559:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 560:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 561:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 562:Generated_Source\PSoC4/CyLib.c **** *
 563:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 564:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 565:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 566:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 567:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 568:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 569:Generated_Source\PSoC4/CyLib.c **** *
 570:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 571:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 574:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 575:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 577:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 578:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 579:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 580:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 581:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 582:Generated_Source\PSoC4/CyLib.c **** *
 583:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 585:Generated_Source\PSoC4/CyLib.c **** {
  91              		.loc 1 585 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL0:
  96 0000 10B5     		push	{r4, lr}
  97              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 13


  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 100              		.loc 1 585 0
 101 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 587:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 590:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 102              		.loc 1 593 0
 103 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 104              	.LVL1:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 596:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 597:Generated_Source\PSoC4/CyLib.c ****     {
 598:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 599:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 600:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */
 603:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 604:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 606:Generated_Source\PSoC4/CyLib.c **** 
 607:Generated_Source\PSoC4/CyLib.c ****         /* Check if ECO is enabled and running */
 608:Generated_Source\PSoC4/CyLib.c ****         if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
 609:Generated_Source\PSoC4/CyLib.c ****             (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
 610:Generated_Source\PSoC4/CyLib.c ****         {
 611:Generated_Source\PSoC4/CyLib.c ****             /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 612:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 613:Generated_Source\PSoC4/CyLib.c **** 
 614:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 615:Generated_Source\PSoC4/CyLib.c ****             {
 616:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 617:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 618:Generated_Source\PSoC4/CyLib.c ****             }
 619:Generated_Source\PSoC4/CyLib.c **** 
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 621:Generated_Source\PSoC4/CyLib.c ****         }
 622:Generated_Source\PSoC4/CyLib.c ****     }
 623:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 105              		.loc 1 625 0
 106 0008 0723     		movs	r3, #7
 107 000a 0449     		ldr	r1, .L8
 626:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 629:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 630:Generated_Source\PSoC4/CyLib.c ****     {
 631:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 632:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 14


 633:Generated_Source\PSoC4/CyLib.c ****     else
 634:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 635:Generated_Source\PSoC4/CyLib.c ****     {
 636:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 637:Generated_Source\PSoC4/CyLib.c ****     }
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 642:Generated_Source\PSoC4/CyLib.c **** }
 108              		.loc 1 642 0
 109              		@ sp needed
 625:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 110              		.loc 1 625 0
 111 000c 0A68     		ldr	r2, [r1]
 112 000e 9A43     		bics	r2, r3
 113              	.LVL2:
 636:Generated_Source\PSoC4/CyLib.c ****     }
 114              		.loc 1 636 0
 115 0010 2340     		ands	r3, r4
 116 0012 1343     		orrs	r3, r2
 117              	.LVL3:
 639:Generated_Source\PSoC4/CyLib.c **** 
 118              		.loc 1 639 0
 119 0014 0B60     		str	r3, [r1]
 641:Generated_Source\PSoC4/CyLib.c **** }
 120              		.loc 1 641 0
 121 0016 FFF7FEFF 		bl	CyExitCriticalSection
 122              	.LVL4:
 123              	.LVL5:
 124              		.loc 1 642 0
 125 001a 10BD     		pop	{r4, pc}
 126              	.L9:
 127              		.align	2
 128              	.L8:
 129 001c 00010B40 		.word	1074462976
 130              		.cfi_endproc
 131              	.LFE4:
 132              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 133              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 134              		.align	1
 135              		.global	CySysEnablePumpClock
 136              		.code	16
 137              		.thumb_func
 138              		.type	CySysEnablePumpClock, %function
 139              	CySysEnablePumpClock:
 140              	.LFB5:
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 647:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 650:Generated_Source\PSoC4/CyLib.c **** *
 651:Generated_Source\PSoC4/CyLib.c **** * \param enable
 652:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 15


 653:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of
 654:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 657:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation
 658:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 659:Generated_Source\PSoC4/CyLib.c **** *
 660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 662:Generated_Source\PSoC4/CyLib.c **** {
 141              		.loc 1 662 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              	.LVL6:
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 094B     		ldr	r3, .L15
 151 0004 094C     		ldr	r4, .L15+4
 663:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 664:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 152              		.loc 1 664 0
 153 0006 C207     		lsls	r2, r0, #31
 154 0008 04D5     		bpl	.L11
 665:Generated_Source\PSoC4/CyLib.c ****         {
 666:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 155              		.loc 1 666 0
 156 000a 2268     		ldr	r2, [r4]
 157 000c 1968     		ldr	r1, [r3]
 158 000e 5206     		lsls	r2, r2, #25
 159 0010 0A43     		orrs	r2, r1
 160 0012 06E0     		b	.L13
 161              	.L11:
 667:Generated_Source\PSoC4/CyLib.c ****         }
 668:Generated_Source\PSoC4/CyLib.c ****         else
 669:Generated_Source\PSoC4/CyLib.c ****         {
 670:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 162              		.loc 1 670 0
 163 0014 1A68     		ldr	r2, [r3]
 164 0016 1201     		lsls	r2, r2, #4
 165 0018 520F     		lsrs	r2, r2, #29
 166 001a 2260     		str	r2, [r4]
 671:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 167              		.loc 1 672 0
 168 001c 1968     		ldr	r1, [r3]
 169 001e 044A     		ldr	r2, .L15+8
 170 0020 0A40     		ands	r2, r1
 171              	.L13:
 172 0022 1A60     		str	r2, [r3]
 673:Generated_Source\PSoC4/CyLib.c ****         }
 674:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 675:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 676:Generated_Source\PSoC4/CyLib.c ****         {
 677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 16


 678:Generated_Source\PSoC4/CyLib.c ****         }
 679:Generated_Source\PSoC4/CyLib.c ****         else
 680:Generated_Source\PSoC4/CyLib.c ****         {
 681:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) &
 682:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 683:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 684:Generated_Source\PSoC4/CyLib.c ****         }
 685:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 686:Generated_Source\PSoC4/CyLib.c **** }
 173              		.loc 1 686 0
 174              		@ sp needed
 175 0024 10BD     		pop	{r4, pc}
 176              	.L16:
 177 0026 C046     		.align	2
 178              	.L15:
 179 0028 08010B40 		.word	1074462984
 180 002c 00000000 		.word	.LANCHOR0
 181 0030 FFFFFFF1 		.word	-234881025
 182              		.cfi_endproc
 183              	.LFE5:
 184              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 185              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 186              		.align	1
 187              		.global	CySysClkGetSysclkSource
 188              		.code	16
 189              		.thumb_func
 190              		.type	CySysClkGetSysclkSource, %function
 191              	CySysClkGetSysclkSource:
 192              	.LFB6:
 687:Generated_Source\PSoC4/CyLib.c **** 
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 690:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 691:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 692:Generated_Source\PSoC4/CyLib.c **** *
 693:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 694:Generated_Source\PSoC4/CyLib.c **** *
 695:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 699:Generated_Source\PSoC4/CyLib.c **** {
 193              		.loc 1 699 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 701:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 201              		.loc 1 703 0
 202 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 203              	.LVL7:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 17


 704:Generated_Source\PSoC4/CyLib.c **** 
 705:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 706:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 707:Generated_Source\PSoC4/CyLib.c ****     {
 708:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 709:Generated_Source\PSoC4/CyLib.c ****     }
 710:Generated_Source\PSoC4/CyLib.c ****     else
 711:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 712:Generated_Source\PSoC4/CyLib.c ****     {
 713:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 204              		.loc 1 713 0
 205 0006 034B     		ldr	r3, .L18
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 717:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 718:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 725:Generated_Source\PSoC4/CyLib.c **** }
 206              		.loc 1 725 0
 207              		@ sp needed
 713:Generated_Source\PSoC4/CyLib.c **** 
 208              		.loc 1 713 0
 209 0008 1C68     		ldr	r4, [r3]
 210              	.LVL8:
 722:Generated_Source\PSoC4/CyLib.c **** 
 211              		.loc 1 722 0
 212 000a FFF7FEFF 		bl	CyExitCriticalSection
 213              	.LVL9:
 724:Generated_Source\PSoC4/CyLib.c **** }
 214              		.loc 1 724 0
 215 000e 0720     		movs	r0, #7
 216 0010 2040     		ands	r0, r4
 217              	.LVL10:
 218              		.loc 1 725 0
 219 0012 10BD     		pop	{r4, pc}
 220              	.L19:
 221              		.align	2
 222              	.L18:
 223 0014 00010B40 		.word	1074462976
 224              		.cfi_endproc
 225              	.LFE6:
 226              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 227              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 228              		.align	1
 229              		.global	CySysClkWriteSysclkDiv
 230              		.code	16
 231              		.thumb_func
 232              		.type	CySysClkWriteSysclkDiv, %function
 233              	CySysClkWriteSysclkDiv:
 234              	.LFB7:
 726:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 18


 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 730:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 735:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 738:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 739:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 742:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 743:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 744:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 745:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 746:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 749:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 750:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 751:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 752:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 753:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 754:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 755:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 756:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 757:Generated_Source\PSoC4/CyLib.c **** *
 758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 759:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 760:Generated_Source\PSoC4/CyLib.c **** {
 235              		.loc 1 760 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL11:
 240 0000 70B5     		push	{r4, r5, r6, lr}
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 4, -16
 243              		.cfi_offset 5, -12
 244              		.cfi_offset 6, -8
 245              		.cfi_offset 14, -4
 246              		.loc 1 760 0
 247 0002 0400     		movs	r4, r0
 761:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 248              		.loc 1 763 0
 249 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 250              	.LVL12:
 764:Generated_Source\PSoC4/CyLib.c **** 
 765:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 251              		.loc 1 766 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 19


 252 0008 E104     		lsls	r1, r4, #19
 253 000a E024     		movs	r4, #224
 254              	.LVL13:
 767:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 255              		.loc 1 767 0
 256 000c 054D     		ldr	r5, .L21
 766:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 257              		.loc 1 766 0
 258 000e A403     		lsls	r4, r4, #14
 259              		.loc 1 767 0
 260 0010 2B68     		ldr	r3, [r5]
 766:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 261              		.loc 1 766 0
 262 0012 054A     		ldr	r2, .L21+4
 263 0014 2140     		ands	r1, r4
 264 0016 1A40     		ands	r2, r3
 265 0018 0B00     		movs	r3, r1
 266 001a 1343     		orrs	r3, r2
 765:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 267              		.loc 1 765 0
 268 001c 2B60     		str	r3, [r5]
 768:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 269              		.loc 1 770 0
 270 001e FFF7FEFF 		bl	CyExitCriticalSection
 271              	.LVL14:
 771:Generated_Source\PSoC4/CyLib.c **** }
 272              		.loc 1 771 0
 273              		@ sp needed
 274 0022 70BD     		pop	{r4, r5, r6, pc}
 275              	.L22:
 276              		.align	2
 277              	.L21:
 278 0024 00010B40 		.word	1074462976
 279 0028 FFFFC7FF 		.word	-3670017
 280              		.cfi_endproc
 281              	.LFE7:
 282              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 283              		.section	.text.CySysClkEcoStop,"ax",%progbits
 284              		.align	1
 285              		.global	CySysClkEcoStop
 286              		.code	16
 287              		.thumb_func
 288              		.type	CySysClkEcoStop, %function
 289              	CySysClkEcoStop:
 290              	.LFB10:
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 776:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 777:Generated_Source\PSoC4/CyLib.c **** *
 778:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 779:Generated_Source\PSoC4/CyLib.c **** *
 780:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 781:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 20


 782:Generated_Source\PSoC4/CyLib.c **** *
 783:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 784:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 785:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 786:Generated_Source\PSoC4/CyLib.c **** *
 787:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 788:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 789:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 790:Generated_Source\PSoC4/CyLib.c **** *
 791:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 792:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 793:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 794:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 795:Generated_Source\PSoC4/CyLib.c **** *
 796:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 797:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 798:Generated_Source\PSoC4/CyLib.c **** *
 799:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 800:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 801:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 802:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 803:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 804:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 805:Generated_Source\PSoC4/CyLib.c **** *
 806:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 807:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 808:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 809:Generated_Source\PSoC4/CyLib.c **** *
 810:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 811:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 812:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with
 813:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 814:Generated_Source\PSoC4/CyLib.c **** *
 815:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 816:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 817:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 818:Generated_Source\PSoC4/CyLib.c ****     {
 819:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 820:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 821:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 822:Generated_Source\PSoC4/CyLib.c ****         #else
 823:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 824:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 825:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 826:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 827:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 830:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 831:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 836:Generated_Source\PSoC4/CyLib.c **** 
 837:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 838:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 21


 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 843:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 846:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 849:Generated_Source\PSoC4/CyLib.c **** 
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 859:Generated_Source\PSoC4/CyLib.c ****                 {
 860:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 861:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 862:Generated_Source\PSoC4/CyLib.c ****                 }
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 865:Generated_Source\PSoC4/CyLib.c ****                 }
 866:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 877:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 880:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 881:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 882:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 885:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 886:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 891:Generated_Source\PSoC4/CyLib.c ****         {
 892:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 895:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 22


 896:Generated_Source\PSoC4/CyLib.c ****             }
 897:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 898:Generated_Source\PSoC4/CyLib.c ****             {
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 900:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 901:Generated_Source\PSoC4/CyLib.c ****             }
 902:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 903:Generated_Source\PSoC4/CyLib.c ****             {
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 905:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 908:Generated_Source\PSoC4/CyLib.c ****             {
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 910:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****             else
 913:Generated_Source\PSoC4/CyLib.c ****             {
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 915:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 916:Generated_Source\PSoC4/CyLib.c ****             }
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 919:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c **** 
 922:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 923:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 924:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 925:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 926:Generated_Source\PSoC4/CyLib.c ****             *
 927:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 928:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 929:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 930:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 931:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 932:Generated_Source\PSoC4/CyLib.c ****             {
 933:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 934:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 935:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 936:Generated_Source\PSoC4/CyLib.c **** 
 937:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 940:Generated_Source\PSoC4/CyLib.c ****             }
 941:Generated_Source\PSoC4/CyLib.c ****             else
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 949:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 950:Generated_Source\PSoC4/CyLib.c ****             *
 951:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 952:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 23


 953:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 954:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 955:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 956:Generated_Source\PSoC4/CyLib.c ****             {
 957:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 958:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 959:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 960:Generated_Source\PSoC4/CyLib.c ****             }
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 963:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 965:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 966:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 969:Generated_Source\PSoC4/CyLib.c ****             {
 970:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 971:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 972:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 973:Generated_Source\PSoC4/CyLib.c ****             }
 974:Generated_Source\PSoC4/CyLib.c ****         }
 975:Generated_Source\PSoC4/CyLib.c ****         else
 976:Generated_Source\PSoC4/CyLib.c ****         {
 977:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 978:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 979:Generated_Source\PSoC4/CyLib.c ****         }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 984:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 985:Generated_Source\PSoC4/CyLib.c ****             {
 986:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 987:Generated_Source\PSoC4/CyLib.c ****             }
 988:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 989:Generated_Source\PSoC4/CyLib.c **** 
 990:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 991:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 992:Generated_Source\PSoC4/CyLib.c ****             {
 993:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 994:Generated_Source\PSoC4/CyLib.c ****             }
 995:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 998:Generated_Source\PSoC4/CyLib.c ****     }
 999:Generated_Source\PSoC4/CyLib.c **** 
1000:Generated_Source\PSoC4/CyLib.c **** #else
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
1003:Generated_Source\PSoC4/CyLib.c ****     {
1004:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1005:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
1006:Generated_Source\PSoC4/CyLib.c **** 
1007:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1008:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
1009:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 24


1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
1013:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1014:Generated_Source\PSoC4/CyLib.c **** 
1015:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
1016:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
1017:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
1018:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
1019:Generated_Source\PSoC4/CyLib.c ****         #else
1020:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
1022:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
1023:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
1024:Generated_Source\PSoC4/CyLib.c ****         {
1025:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1026:Generated_Source\PSoC4/CyLib.c **** 
1027:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1028:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
1029:Generated_Source\PSoC4/CyLib.c ****                 {
1030:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
1031:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
1032:Generated_Source\PSoC4/CyLib.c ****                 }
1033:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1038:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
1039:Generated_Source\PSoC4/CyLib.c ****                     {
1040:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
1043:Generated_Source\PSoC4/CyLib.c ****                     {
1044:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
1045:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                     }
1047:Generated_Source\PSoC4/CyLib.c **** 
1048:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1049:Generated_Source\PSoC4/CyLib.c ****                     }
1050:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1053:Generated_Source\PSoC4/CyLib.c **** 
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1056:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** 
1059:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1066:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 25


1067:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1068:Generated_Source\PSoC4/CyLib.c ****                 }
1069:Generated_Source\PSoC4/CyLib.c ****                 else
1070:Generated_Source\PSoC4/CyLib.c ****                 {
1071:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1072:Generated_Source\PSoC4/CyLib.c ****                 }
1073:Generated_Source\PSoC4/CyLib.c ****             #else
1074:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1075:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1076:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1079:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1080:Generated_Source\PSoC4/CyLib.c **** 
1081:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1082:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1083:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1086:Generated_Source\PSoC4/CyLib.c **** 
1087:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1088:Generated_Source\PSoC4/CyLib.c ****             {
1089:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1090:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1091:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1094:Generated_Source\PSoC4/CyLib.c **** 
1095:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1096:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1097:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1098:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1099:Generated_Source\PSoC4/CyLib.c ****             }
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1102:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1103:Generated_Source\PSoC4/CyLib.c ****                 {
1104:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1105:Generated_Source\PSoC4/CyLib.c ****                 }
1106:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1107:Generated_Source\PSoC4/CyLib.c **** 
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1110:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1111:Generated_Source\PSoC4/CyLib.c ****                 {
1112:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1113:Generated_Source\PSoC4/CyLib.c ****                 }
1114:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c ****         else
1119:Generated_Source\PSoC4/CyLib.c ****         {
1120:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1121:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1122:Generated_Source\PSoC4/CyLib.c ****         }
1123:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 26


1124:Generated_Source\PSoC4/CyLib.c **** 
1125:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1126:Generated_Source\PSoC4/CyLib.c **** 
1127:Generated_Source\PSoC4/CyLib.c **** 
1128:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1129:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1130:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1131:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1136:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1137:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1140:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1143:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1144:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1145:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1146:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1147:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1150:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1151:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1152:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1153:Generated_Source\PSoC4/CyLib.c ****     *
1154:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1155:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1156:Generated_Source\PSoC4/CyLib.c ****     {
1157:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1160:Generated_Source\PSoC4/CyLib.c **** 
1161:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1163:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1166:Generated_Source\PSoC4/CyLib.c ****     }
1167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1175:Generated_Source\PSoC4/CyLib.c ****     *
1176:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1177:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1178:Generated_Source\PSoC4/CyLib.c ****     *
1179:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1180:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 27


1181:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1182:Generated_Source\PSoC4/CyLib.c ****     * called.
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1185:Generated_Source\PSoC4/CyLib.c ****     *
1186:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1187:Generated_Source\PSoC4/CyLib.c ****     *
1188:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1189:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1192:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1195:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1196:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1197:Generated_Source\PSoC4/CyLib.c ****     *
1198:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1201:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1202:Generated_Source\PSoC4/CyLib.c ****     {
1203:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1206:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1213:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1216:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1217:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1220:Generated_Source\PSoC4/CyLib.c ****             {
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1222:Generated_Source\PSoC4/CyLib.c ****             }
1223:Generated_Source\PSoC4/CyLib.c ****             else
1224:Generated_Source\PSoC4/CyLib.c ****             {
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1228:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1229:Generated_Source\PSoC4/CyLib.c **** 
1230:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1231:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1232:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1233:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1235:Generated_Source\PSoC4/CyLib.c **** 
1236:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1237:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 28


1238:Generated_Source\PSoC4/CyLib.c ****                 {
1239:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1240:Generated_Source\PSoC4/CyLib.c ****                 }
1241:Generated_Source\PSoC4/CyLib.c **** 
1242:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1243:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1244:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1245:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1246:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1249:Generated_Source\PSoC4/CyLib.c ****                 {
1250:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1251:Generated_Source\PSoC4/CyLib.c ****                 }
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1254:Generated_Source\PSoC4/CyLib.c ****                 {
1255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1259:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1260:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1261:Generated_Source\PSoC4/CyLib.c **** 
1262:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1263:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1264:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1265:Generated_Source\PSoC4/CyLib.c ****                 #else
1266:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1267:Generated_Source\PSoC4/CyLib.c ****                 #endif
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1270:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1271:Generated_Source\PSoC4/CyLib.c ****                 {
1272:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c **** 
1275:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1276:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD |
1277:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1278:Generated_Source\PSoC4/CyLib.c **** 
1279:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1280:Generated_Source\PSoC4/CyLib.c ****                 {
1281:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1282:Generated_Source\PSoC4/CyLib.c ****                 }
1283:Generated_Source\PSoC4/CyLib.c **** 
1284:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1289:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1292:Generated_Source\PSoC4/CyLib.c ****                 {
1293:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1294:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 29


1295:Generated_Source\PSoC4/CyLib.c **** 
1296:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1297:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1300:Generated_Source\PSoC4/CyLib.c ****                 {
1301:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1302:Generated_Source\PSoC4/CyLib.c ****                 }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****             }
1305:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1307:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1308:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1309:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1310:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1312:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1315:Generated_Source\PSoC4/CyLib.c ****         {
1316:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1319:Generated_Source\PSoC4/CyLib.c ****             {
1320:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1321:Generated_Source\PSoC4/CyLib.c **** 
1322:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1323:Generated_Source\PSoC4/CyLib.c ****                 {
1324:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1325:Generated_Source\PSoC4/CyLib.c ****                     break;
1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c ****             }
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****         }
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1332:Generated_Source\PSoC4/CyLib.c ****     }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c **** 
1335:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1337:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1338:Generated_Source\PSoC4/CyLib.c ****     *
1339:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1340:Generated_Source\PSoC4/CyLib.c ****     *
1341:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1342:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1343:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1344:Generated_Source\PSoC4/CyLib.c ****     *
1345:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1346:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1347:Generated_Source\PSoC4/CyLib.c ****     {
 291              		.loc 1 1347 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 30


 295              		@ link register save eliminated.
1348:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1349:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1350:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 296              		.loc 1 1350 0
 297 0000 0121     		movs	r1, #1
 298 0002 054A     		ldr	r2, .L24
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1353:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1354:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1355:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1356:Generated_Source\PSoC4/CyLib.c ****         #else
1357:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1359:Generated_Source\PSoC4/CyLib.c ****     }
 299              		.loc 1 1359 0
 300              		@ sp needed
1350:Generated_Source\PSoC4/CyLib.c **** 
 301              		.loc 1 1350 0
 302 0004 1368     		ldr	r3, [r2]
 303 0006 8B43     		bics	r3, r1
 304 0008 1360     		str	r3, [r2]
1353:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
 305              		.loc 1 1353 0
 306 000a 044A     		ldr	r2, .L24+4
 307 000c 044B     		ldr	r3, .L24+8
 308 000e 1168     		ldr	r1, [r2]
 309 0010 0B40     		ands	r3, r1
 310 0012 1360     		str	r3, [r2]
 311              		.loc 1 1359 0
 312 0014 7047     		bx	lr
 313              	.L25:
 314 0016 C046     		.align	2
 315              	.L24:
 316 0018 60F02E40 		.word	1076818016
 317 001c 10002E40 		.word	1076756496
 318 0020 FF7FFFFF 		.word	-32769
 319              		.cfi_endproc
 320              	.LFE10:
 321              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 322              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 323              		.align	1
 324              		.global	CySysClkEcoReadStatus
 325              		.code	16
 326              		.thumb_func
 327              		.type	CySysClkEcoReadStatus, %function
 328              	CySysClkEcoReadStatus:
 329              	.LFB11:
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1363:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1364:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1365:Generated_Source\PSoC4/CyLib.c ****     *
1366:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1367:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 31


1368:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1369:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1370:Generated_Source\PSoC4/CyLib.c ****     *
1371:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is
1372:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1373:Generated_Source\PSoC4/CyLib.c ****     *
1374:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1375:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1376:Generated_Source\PSoC4/CyLib.c ****     *
1377:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO
1378:Generated_Source\PSoC4/CyLib.c ****     * is running.
1379:Generated_Source\PSoC4/CyLib.c ****     *
1380:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1381:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1382:Generated_Source\PSoC4/CyLib.c ****     {
 330              		.loc 1 1382 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
1383:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1386:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 335              		.loc 1 1386 0
 336 0000 024B     		ldr	r3, .L27
1387:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1388:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) ||
1391:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1392:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1393:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1394:Generated_Source\PSoC4/CyLib.c ****         #else
1395:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1396:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1399:Generated_Source\PSoC4/CyLib.c ****     }
 337              		.loc 1 1399 0
 338              		@ sp needed
1386:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
 339              		.loc 1 1386 0
 340 0002 1868     		ldr	r0, [r3]
 341              	.LVL15:
1398:Generated_Source\PSoC4/CyLib.c ****     }
 342              		.loc 1 1398 0
 343 0004 0123     		movs	r3, #1
 344 0006 1840     		ands	r0, r3
 345              	.LVL16:
 346              		.loc 1 1399 0
 347 0008 7047     		bx	lr
 348              	.L28:
 349 000a C046     		.align	2
 350              	.L27:
 351 000c 0C002E40 		.word	1076756492
 352              		.cfi_endproc
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 32


 353              	.LFE11:
 354              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 355              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 356              		.align	1
 357              		.global	CySysClkWriteEcoDiv
 358              		.code	16
 359              		.thumb_func
 360              		.type	CySysClkWriteEcoDiv, %function
 361              	CySysClkWriteEcoDiv:
 362              	.LFB12:
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1402:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1403:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1404:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1409:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1410:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1411:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1412:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1415:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1416:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1417:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1418:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1419:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1428:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1429:Generated_Source\PSoC4/CyLib.c ****         {
 363              		.loc 1 1429 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              	.LVL17:
1430:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1431:Generated_Source\PSoC4/CyLib.c **** 
1432:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 368              		.loc 1 1432 0
 369 0000 094B     		ldr	r3, .L34
1429:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 370              		.loc 1 1429 0
 371 0002 10B5     		push	{r4, lr}
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 4, -8
 374              		.cfi_offset 14, -4
 375              		.loc 1 1432 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 33


 376 0004 1A68     		ldr	r2, [r3]
 377 0006 0723     		movs	r3, #7
1429:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 378              		.loc 1 1429 0
 379 0008 0400     		movs	r4, r0
 380              		.loc 1 1432 0
 381 000a 1340     		ands	r3, r2
 382 000c 022B     		cmp	r3, #2
 383 000e 0AD0     		beq	.L29
1433:Generated_Source\PSoC4/CyLib.c ****             {
1434:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 384              		.loc 1 1434 0
 385 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 386              	.LVL18:
1435:Generated_Source\PSoC4/CyLib.c **** 
1436:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 387              		.loc 1 1436 0
 388 0014 0321     		movs	r1, #3
1437:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 389              		.loc 1 1437 0
 390 0016 054A     		ldr	r2, .L34+4
1436:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 391              		.loc 1 1436 0
 392 0018 0C40     		ands	r4, r1
 393              	.LVL19:
 394              		.loc 1 1437 0
 395 001a 1368     		ldr	r3, [r2]
1436:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 396              		.loc 1 1436 0
 397 001c 8B43     		bics	r3, r1
 398 001e 2343     		orrs	r3, r4
 399 0020 1360     		str	r3, [r2]
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 400              		.loc 1 1439 0
 401 0022 FFF7FEFF 		bl	CyExitCriticalSection
 402              	.LVL20:
 403              	.L29:
1440:Generated_Source\PSoC4/CyLib.c ****             }
1441:Generated_Source\PSoC4/CyLib.c ****             else
1442:Generated_Source\PSoC4/CyLib.c ****             {
1443:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1444:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1445:Generated_Source\PSoC4/CyLib.c ****             }
1446:Generated_Source\PSoC4/CyLib.c ****         }
 404              		.loc 1 1446 0
 405              		@ sp needed
 406 0026 10BD     		pop	{r4, pc}
 407              	.L35:
 408              		.align	2
 409              	.L34:
 410 0028 00010B40 		.word	1074462976
 411 002c 64F02E40 		.word	1076818020
 412              		.cfi_endproc
 413              	.LFE12:
 414              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 415              		.section	.text.CySysLvdDisable,"ax",%progbits
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 34


 416              		.align	1
 417              		.global	CySysLvdDisable
 418              		.code	16
 419              		.thumb_func
 420              		.type	CySysLvdDisable, %function
 421              	CySysLvdDisable:
 422              	.LFB14:
1447:Generated_Source\PSoC4/CyLib.c **** 
1448:Generated_Source\PSoC4/CyLib.c ****     #else
1449:Generated_Source\PSoC4/CyLib.c **** 
1450:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1451:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1452:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1453:Generated_Source\PSoC4/CyLib.c ****         *
1454:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1455:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1456:Generated_Source\PSoC4/CyLib.c ****         *
1457:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1458:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1459:Generated_Source\PSoC4/CyLib.c ****         *
1460:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1461:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1462:Generated_Source\PSoC4/CyLib.c ****         *
1463:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1464:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1465:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1468:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1471:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1472:Generated_Source\PSoC4/CyLib.c ****         *
1473:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1474:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1475:Generated_Source\PSoC4/CyLib.c ****         *
1476:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1477:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1480:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1481:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1482:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1483:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1484:Generated_Source\PSoC4/CyLib.c ****         *
1485:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1486:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1487:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1488:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1489:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1490:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1491:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1492:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1493:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1494:Generated_Source\PSoC4/CyLib.c ****         *
1495:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1496:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 35


1497:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1498:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1499:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1502:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1503:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1504:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1505:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1506:Generated_Source\PSoC4/CyLib.c ****         *
1507:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1508:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1509:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1510:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1511:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1512:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1513:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1514:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1517:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1518:Generated_Source\PSoC4/CyLib.c ****         {
1519:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1521:Generated_Source\PSoC4/CyLib.c **** 
1522:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1525:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1526:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1527:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1528:Generated_Source\PSoC4/CyLib.c **** 
1529:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1530:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1531:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1532:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1533:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1534:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1535:Generated_Source\PSoC4/CyLib.c **** 
1536:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1537:Generated_Source\PSoC4/CyLib.c **** 
1538:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1539:Generated_Source\PSoC4/CyLib.c ****         }
1540:Generated_Source\PSoC4/CyLib.c **** 
1541:Generated_Source\PSoC4/CyLib.c **** 
1542:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1543:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1544:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1545:Generated_Source\PSoC4/CyLib.c ****         *
1546:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1547:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1548:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1549:Generated_Source\PSoC4/CyLib.c ****         *
1550:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO
1551:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1552:Generated_Source\PSoC4/CyLib.c ****         *
1553:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 36


1554:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1555:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1556:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1557:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1558:Generated_Source\PSoC4/CyLib.c ****         *
1559:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1560:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1561:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1562:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1563:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1564:Generated_Source\PSoC4/CyLib.c ****         *
1565:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1566:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1567:Generated_Source\PSoC4/CyLib.c ****         *
1568:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1569:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1570:Generated_Source\PSoC4/CyLib.c ****         {
1571:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1574:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1575:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1576:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1577:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c **** 
1582:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1583:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1584:Generated_Source\PSoC4/CyLib.c ****             {
1585:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1586:Generated_Source\PSoC4/CyLib.c ****             }
1587:Generated_Source\PSoC4/CyLib.c ****             else
1588:Generated_Source\PSoC4/CyLib.c ****             {
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1595:Generated_Source\PSoC4/CyLib.c ****                 }
1596:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 37


1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1613:Generated_Source\PSoC4/CyLib.c ****                 {
1614:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1615:Generated_Source\PSoC4/CyLib.c ****                 }
1616:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1617:Generated_Source\PSoC4/CyLib.c ****                 {
1618:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1619:Generated_Source\PSoC4/CyLib.c ****                 }
1620:Generated_Source\PSoC4/CyLib.c ****                 else
1621:Generated_Source\PSoC4/CyLib.c ****                 {
1622:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c **** 
1625:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1626:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1627:Generated_Source\PSoC4/CyLib.c **** 
1628:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1629:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000u) * (
1630:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1631:Generated_Source\PSoC4/CyLib.c ****                 {
1632:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1633:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1634:Generated_Source\PSoC4/CyLib.c ****                 }
1635:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1636:Generated_Source\PSoC4/CyLib.c ****                 {
1637:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1638:Generated_Source\PSoC4/CyLib.c ****                 }
1639:Generated_Source\PSoC4/CyLib.c ****                 else
1640:Generated_Source\PSoC4/CyLib.c ****                 {
1641:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1642:Generated_Source\PSoC4/CyLib.c ****                 }
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1645:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1646:Generated_Source\PSoC4/CyLib.c ****                 {
1647:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1648:Generated_Source\PSoC4/CyLib.c ****                 }
1649:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1650:Generated_Source\PSoC4/CyLib.c ****                 {
1651:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1652:Generated_Source\PSoC4/CyLib.c ****                 }
1653:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1654:Generated_Source\PSoC4/CyLib.c ****                 {
1655:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****                 else
1658:Generated_Source\PSoC4/CyLib.c ****                 {
1659:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1660:Generated_Source\PSoC4/CyLib.c ****                 }
1661:Generated_Source\PSoC4/CyLib.c **** 
1662:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1663:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1664:Generated_Source\PSoC4/CyLib.c **** 
1665:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 38


1668:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1669:Generated_Source\PSoC4/CyLib.c ****                 {
1670:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1671:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1672:Generated_Source\PSoC4/CyLib.c ****                 }
1673:Generated_Source\PSoC4/CyLib.c ****                 else
1674:Generated_Source\PSoC4/CyLib.c ****                 {
1675:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1676:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1677:Generated_Source\PSoC4/CyLib.c ****                     */
1678:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c **** 
1682:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1683:Generated_Source\PSoC4/CyLib.c ****         }
1684:Generated_Source\PSoC4/CyLib.c **** 
1685:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1696:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1699:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1704:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1705:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1706:Generated_Source\PSoC4/CyLib.c ****     *
1707:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1708:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1709:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1710:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1713:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1714:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1715:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1716:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1717:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1723:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1724:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 39


1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         if((pll < (uint32)CY_IP_PLL_NR) && (wait <= 1u))
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1731:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1734:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1735:Generated_Source\PSoC4/CyLib.c **** 
1736:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1739:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1740:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1741:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1742:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1743:Generated_Source\PSoC4/CyLib.c **** 
1744:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1745:Generated_Source\PSoC4/CyLib.c ****             {
1746:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1749:Generated_Source\PSoC4/CyLib.c ****                 {
1750:Generated_Source\PSoC4/CyLib.c **** 
1751:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1752:Generated_Source\PSoC4/CyLib.c ****                     {
1753:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1754:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1755:Generated_Source\PSoC4/CyLib.c ****                         break;
1756:Generated_Source\PSoC4/CyLib.c ****                     }
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1759:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1760:Generated_Source\PSoC4/CyLib.c ****                 }
1761:Generated_Source\PSoC4/CyLib.c ****             }
1762:Generated_Source\PSoC4/CyLib.c ****         }
1763:Generated_Source\PSoC4/CyLib.c ****         else
1764:Generated_Source\PSoC4/CyLib.c ****         {
1765:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1766:Generated_Source\PSoC4/CyLib.c ****         }
1767:Generated_Source\PSoC4/CyLib.c **** 
1768:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1769:Generated_Source\PSoC4/CyLib.c ****     }
1770:Generated_Source\PSoC4/CyLib.c **** 
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1773:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1774:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1777:Generated_Source\PSoC4/CyLib.c ****     *
1778:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1781:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 40


1782:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1783:Generated_Source\PSoC4/CyLib.c ****     *
1784:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1787:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1788:Generated_Source\PSoC4/CyLib.c ****     {
1789:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1790:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1791:Generated_Source\PSoC4/CyLib.c **** 
1792:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < (uint32)CY_IP_PLL_NR);
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1797:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1798:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1799:Generated_Source\PSoC4/CyLib.c ****         {
1800:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1801:Generated_Source\PSoC4/CyLib.c ****         }
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1809:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1810:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1813:Generated_Source\PSoC4/CyLib.c ****     *
1814:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1815:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1816:Generated_Source\PSoC4/CyLib.c ****     *
1817:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1820:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1821:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1822:Generated_Source\PSoC4/CyLib.c ****     *
1823:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1824:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1825:Generated_Source\PSoC4/CyLib.c ****     {
1826:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         if (pll < (uint32)CY_IP_PLL_NR)
1829:Generated_Source\PSoC4/CyLib.c ****         {
1830:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1831:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1832:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1833:Generated_Source\PSoC4/CyLib.c ****         }
1834:Generated_Source\PSoC4/CyLib.c ****     }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1838:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 41


1839:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1842:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1843:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1844:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1847:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1856:Generated_Source\PSoC4/CyLib.c ****     * divider.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1861:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1862:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1865:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1866:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1867:Generated_Source\PSoC4/CyLib.c ****     *
1868:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1869:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1870:Generated_Source\PSoC4/CyLib.c ****     {
1871:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1872:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1873:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1874:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) &&
1881:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1882:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1883:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1884:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1885:Generated_Source\PSoC4/CyLib.c ****         {
1886:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1887:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1888:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1889:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1890:Generated_Source\PSoC4/CyLib.c **** 
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1893:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 42


1896:Generated_Source\PSoC4/CyLib.c **** 
1897:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1898:Generated_Source\PSoC4/CyLib.c ****         }
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1913:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may
1916:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from
1917:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of
1918:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1923:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1924:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1925:Generated_Source\PSoC4/CyLib.c ****     *
1926:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1927:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1928:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1929:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1930:Generated_Source\PSoC4/CyLib.c ****     *
1931:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1932:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1933:Generated_Source\PSoC4/CyLib.c ****     *
1934:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1938:Generated_Source\PSoC4/CyLib.c ****     {
1939:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1940:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1943:Generated_Source\PSoC4/CyLib.c **** 
1944:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1945:Generated_Source\PSoC4/CyLib.c ****         {
1946:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1947:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1948:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1949:Generated_Source\PSoC4/CyLib.c ****         }
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1952:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 43


1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1958:Generated_Source\PSoC4/CyLib.c ****     *
1959:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1960:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1963:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1964:Generated_Source\PSoC4/CyLib.c ****     *
1965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1966:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1967:Generated_Source\PSoC4/CyLib.c ****     {
1968:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1969:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < (uint32)CY_IP_PLL_NR);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1976:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1981:Generated_Source\PSoC4/CyLib.c ****     }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1985:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1986:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1989:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1990:Generated_Source\PSoC4/CyLib.c ****     *
1991:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1994:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1995:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1996:Generated_Source\PSoC4/CyLib.c ****     *
1997:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1998:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2001:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
2002:Generated_Source\PSoC4/CyLib.c ****     {
2003:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
2004:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
2005:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
2008:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
2009:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 44


2010:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
2011:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
2012:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
2013:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
2014:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
2015:Generated_Source\PSoC4/CyLib.c ****             )
2016:Generated_Source\PSoC4/CyLib.c ****         {
2017:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
2018:Generated_Source\PSoC4/CyLib.c ****         }
2019:Generated_Source\PSoC4/CyLib.c **** 
2020:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
2021:Generated_Source\PSoC4/CyLib.c ****     }
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c **** 
2024:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2025:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
2026:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
2029:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
2030:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
2031:Generated_Source\PSoC4/CyLib.c ****     *  this API.
2032:Generated_Source\PSoC4/CyLib.c ****     *
2033:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2034:Generated_Source\PSoC4/CyLib.c ****     *
2035:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2036:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2037:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2042:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
2043:Generated_Source\PSoC4/CyLib.c ****     {
2044:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
2045:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2046:Generated_Source\PSoC4/CyLib.c **** 
2047:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2050:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2055:Generated_Source\PSoC4/CyLib.c ****     }
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2059:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2060:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2063:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2064:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2065:Generated_Source\PSoC4/CyLib.c ****     *
2066:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 45


2067:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2068:Generated_Source\PSoC4/CyLib.c ****     *
2069:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2070:Generated_Source\PSoC4/CyLib.c ****     *
2071:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2072:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2073:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2078:Generated_Source\PSoC4/CyLib.c ****     *
2079:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2080:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2081:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2082:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2083:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2084:Generated_Source\PSoC4/CyLib.c ****     *
2085:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2086:Generated_Source\PSoC4/CyLib.c ****     *
2087:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2088:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2091:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2094:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2095:Generated_Source\PSoC4/CyLib.c ****     {
2096:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2097:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2098:Generated_Source\PSoC4/CyLib.c **** 
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2100:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2103:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2106:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2107:Generated_Source\PSoC4/CyLib.c **** 
2108:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2109:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) &&
2115:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2116:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2117:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2118:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2119:Generated_Source\PSoC4/CyLib.c ****         {
2120:Generated_Source\PSoC4/CyLib.c **** 
2121:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2123:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 46


2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2127:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2128:Generated_Source\PSoC4/CyLib.c **** 
2129:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2130:Generated_Source\PSoC4/CyLib.c ****             {
2131:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2132:Generated_Source\PSoC4/CyLib.c ****                 {
2133:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2136:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2137:Generated_Source\PSoC4/CyLib.c **** 
2138:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2139:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2142:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2143:Generated_Source\PSoC4/CyLib.c **** 
2144:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2145:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2146:Generated_Source\PSoC4/CyLib.c ****                     {
2147:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2148:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2149:Generated_Source\PSoC4/CyLib.c ****                         break;
2150:Generated_Source\PSoC4/CyLib.c ****                     }
2151:Generated_Source\PSoC4/CyLib.c ****                 }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2155:Generated_Source\PSoC4/CyLib.c ****                 {
2156:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2157:Generated_Source\PSoC4/CyLib.c ****                     {
2158:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2159:Generated_Source\PSoC4/CyLib.c ****                     }
2160:Generated_Source\PSoC4/CyLib.c ****                 }
2161:Generated_Source\PSoC4/CyLib.c ****             }
2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         }
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2173:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2176:Generated_Source\PSoC4/CyLib.c ****     *
2177:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2178:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2179:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2180:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 47


2181:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2183:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L
2184:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2185:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2186:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2187:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2188:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2189:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2193:Generated_Source\PSoC4/CyLib.c ****     {
2194:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2197:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2198:Generated_Source\PSoC4/CyLib.c ****         #else
2199:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2200:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         if (pll < (uint32)CY_IP_PLL_NR)
2205:Generated_Source\PSoC4/CyLib.c ****         {
2206:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2207:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2208:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2210:Generated_Source\PSoC4/CyLib.c ****             #else
2211:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****                 /* Check if ECO is enabled and running */
2214:Generated_Source\PSoC4/CyLib.c ****                 if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
2215:Generated_Source\PSoC4/CyLib.c ****                     (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
2216:Generated_Source\PSoC4/CyLib.c ****                 {
2217:Generated_Source\PSoC4/CyLib.c ****                     /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG 
2218:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****                     for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2221:Generated_Source\PSoC4/CyLib.c ****                     {
2222:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2223:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2224:Generated_Source\PSoC4/CyLib.c ****                     }
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2227:Generated_Source\PSoC4/CyLib.c ****                 }
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2230:Generated_Source\PSoC4/CyLib.c ****         }
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** 
2236:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2237:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 48


2238:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2239:Generated_Source\PSoC4/CyLib.c ****     *
2240:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2243:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****     *
2247:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2248:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2249:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2250:Generated_Source\PSoC4/CyLib.c ****     *
2251:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2252:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2253:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2254:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2255:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2256:Generated_Source\PSoC4/CyLib.c ****     *
2257:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2258:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2259:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2262:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2263:Generated_Source\PSoC4/CyLib.c ****     {
2264:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2265:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2266:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2267:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2268:Generated_Source\PSoC4/CyLib.c **** 
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2273:Generated_Source\PSoC4/CyLib.c **** 
2274:Generated_Source\PSoC4/CyLib.c ****         if ((pll < (uint32)CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT
2275:Generated_Source\PSoC4/CyLib.c ****         {
2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2277:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2282:Generated_Source\PSoC4/CyLib.c ****         }
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2287:Generated_Source\PSoC4/CyLib.c ****     }
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c **** 
2290:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2291:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2292:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2293:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2294:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 49


2295:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt
2296:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of
2297:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2298:Generated_Source\PSoC4/CyLib.c ****         *
2299:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2300:Generated_Source\PSoC4/CyLib.c ****         *
2301:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2302:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2303:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2304:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2307:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2308:Generated_Source\PSoC4/CyLib.c ****         {
2309:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2310:Generated_Source\PSoC4/CyLib.c ****         }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2315:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c ****         *
2317:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2318:Generated_Source\PSoC4/CyLib.c ****         *
2319:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2320:Generated_Source\PSoC4/CyLib.c ****         *
2321:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2322:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2323:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2324:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2325:Generated_Source\PSoC4/CyLib.c ****         *
2326:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2327:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2328:Generated_Source\PSoC4/CyLib.c ****         {
2329:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2330:Generated_Source\PSoC4/CyLib.c ****         }
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** 
2333:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2334:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2335:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2336:Generated_Source\PSoC4/CyLib.c ****         *
2337:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt.
2338:Generated_Source\PSoC4/CyLib.c ****         *
2339:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2340:Generated_Source\PSoC4/CyLib.c ****         *
2341:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2342:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2343:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2344:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2345:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2349:Generated_Source\PSoC4/CyLib.c ****         {
2350:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2351:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 50


2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2355:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2356:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2357:Generated_Source\PSoC4/CyLib.c ****         *
2358:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2359:Generated_Source\PSoC4/CyLib.c ****         *
2360:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2361:Generated_Source\PSoC4/CyLib.c ****         *
2362:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2363:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2364:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2365:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2366:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2370:Generated_Source\PSoC4/CyLib.c ****         {
2371:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2372:Generated_Source\PSoC4/CyLib.c ****         }
2373:Generated_Source\PSoC4/CyLib.c **** 
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2376:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2377:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2378:Generated_Source\PSoC4/CyLib.c ****         *
2379:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2384:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2385:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2386:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2387:Generated_Source\PSoC4/CyLib.c ****         *
2388:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2389:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2390:Generated_Source\PSoC4/CyLib.c ****         {
2391:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2392:Generated_Source\PSoC4/CyLib.c ****         }
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2397:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2398:Generated_Source\PSoC4/CyLib.c ****         *
2399:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2400:Generated_Source\PSoC4/CyLib.c ****         *
2401:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2402:Generated_Source\PSoC4/CyLib.c ****         *
2403:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2404:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2405:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2406:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2407:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2408:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 51


2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2413:Generated_Source\PSoC4/CyLib.c ****         }
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c **** 
2416:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2417:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2418:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2419:Generated_Source\PSoC4/CyLib.c ****         *
2420:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2421:Generated_Source\PSoC4/CyLib.c ****         *
2422:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2423:Generated_Source\PSoC4/CyLib.c ****         *
2424:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2425:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2426:Generated_Source\PSoC4/CyLib.c ****         {
2427:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2428:Generated_Source\PSoC4/CyLib.c ****         }
2429:Generated_Source\PSoC4/CyLib.c **** 
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2432:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2433:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2434:Generated_Source\PSoC4/CyLib.c ****         *
2435:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2436:Generated_Source\PSoC4/CyLib.c ****         *
2437:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2438:Generated_Source\PSoC4/CyLib.c ****         *
2439:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2440:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2441:Generated_Source\PSoC4/CyLib.c ****         {
2442:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2443:Generated_Source\PSoC4/CyLib.c ****         }
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** 
2446:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2447:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2448:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2449:Generated_Source\PSoC4/CyLib.c ****         *
2450:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2451:Generated_Source\PSoC4/CyLib.c ****         *
2452:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2453:Generated_Source\PSoC4/CyLib.c ****         *
2454:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2455:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable
2456:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2459:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2460:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2461:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2462:Generated_Source\PSoC4/CyLib.c ****         *
2463:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2464:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2465:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 52


2466:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2467:Generated_Source\PSoC4/CyLib.c **** 
2468:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2469:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2472:Generated_Source\PSoC4/CyLib.c ****         }
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
2475:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2477:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2480:Generated_Source\PSoC4/CyLib.c ****         *
2481:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2482:Generated_Source\PSoC4/CyLib.c ****         *
2483:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2484:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles,
2485:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored
2486:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2487:Generated_Source\PSoC4/CyLib.c ****         *
2488:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2489:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time)
2490:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event
2491:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all
2492:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2493:Generated_Source\PSoC4/CyLib.c ****         *
2494:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2496:Generated_Source\PSoC4/CyLib.c ****         {
2497:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2500:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2503:Generated_Source\PSoC4/CyLib.c ****         }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2508:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c ****         *
2510:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2511:Generated_Source\PSoC4/CyLib.c ****         *
2512:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         * \return
2515:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2516:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2519:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2520:Generated_Source\PSoC4/CyLib.c ****         {
2521:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2522:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 53


2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2526:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2527:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2530:Generated_Source\PSoC4/CyLib.c ****         *
2531:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2532:Generated_Source\PSoC4/CyLib.c ****         *
2533:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2534:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored
2535:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2536:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with
2537:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2538:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2541:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2542:Generated_Source\PSoC4/CyLib.c ****         {
2543:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2544:Generated_Source\PSoC4/CyLib.c ****         }
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** 
2547:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2548:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2549:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2550:Generated_Source\PSoC4/CyLib.c ****         *
2551:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2552:Generated_Source\PSoC4/CyLib.c ****         *
2553:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2554:Generated_Source\PSoC4/CyLib.c ****         *
2555:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2556:Generated_Source\PSoC4/CyLib.c ****         *
2557:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2558:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2559:Generated_Source\PSoC4/CyLib.c ****         {
2560:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2561:Generated_Source\PSoC4/CyLib.c ****         }
2562:Generated_Source\PSoC4/CyLib.c **** 
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2565:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2566:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2567:Generated_Source\PSoC4/CyLib.c ****         *
2568:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches
2569:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count
2570:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down.
2571:Generated_Source\PSoC4/CyLib.c ****         *
2572:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless
2573:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using
2574:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2575:Generated_Source\PSoC4/CyLib.c ****         *
2576:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2577:Generated_Source\PSoC4/CyLib.c ****         *
2578:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2579:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 54


2580:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using
2581:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2582:Generated_Source\PSoC4/CyLib.c ****         *
2583:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2584:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2585:Generated_Source\PSoC4/CyLib.c ****         {
2586:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2587:Generated_Source\PSoC4/CyLib.c ****         }
2588:Generated_Source\PSoC4/CyLib.c **** 
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2591:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2592:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2593:Generated_Source\PSoC4/CyLib.c ****         *
2594:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor
2595:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO.
2596:Generated_Source\PSoC4/CyLib.c ****         *
2597:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2598:Generated_Source\PSoC4/CyLib.c ****         *
2599:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2600:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2601:Generated_Source\PSoC4/CyLib.c ****         {
2602:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2603:Generated_Source\PSoC4/CyLib.c ****         }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c **** 
2606:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2607:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2608:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2609:Generated_Source\PSoC4/CyLib.c ****         *
2610:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value.
2611:Generated_Source\PSoC4/CyLib.c ****         *
2612:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2613:Generated_Source\PSoC4/CyLib.c ****         *
2614:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2615:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256.
2616:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2617:Generated_Source\PSoC4/CyLib.c ****         *
2618:Generated_Source\PSoC4/CyLib.c ****         *
2619:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2620:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2621:Generated_Source\PSoC4/CyLib.c ****         {
2622:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2623:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2624:Generated_Source\PSoC4/CyLib.c ****         }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2635:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2636:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 55


2637:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2638:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2639:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2640:Generated_Source\PSoC4/CyLib.c ****     *
2641:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2642:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2643:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2644:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2645:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2646:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2647:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2648:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2649:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2650:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2651:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2652:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2654:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2655:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2656:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2657:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2658:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2659:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2663:Generated_Source\PSoC4/CyLib.c ****     {
2664:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2665:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2666:Generated_Source\PSoC4/CyLib.c **** 
2667:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2668:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2669:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2672:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2673:Generated_Source\PSoC4/CyLib.c **** 
2674:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2675:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2678:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2681:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2682:Generated_Source\PSoC4/CyLib.c ****     }
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2686:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2687:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2688:Generated_Source\PSoC4/CyLib.c ****     *
2689:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2690:Generated_Source\PSoC4/CyLib.c ****     *
2691:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2692:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2693:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 56


 423              		.loc 1 2693 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 428              		.loc 1 2694 0
 429 0000 0221     		movs	r1, #2
 430 0002 054A     		ldr	r2, .L37
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2696:Generated_Source\PSoC4/CyLib.c ****     }
 431              		.loc 1 2696 0
 432              		@ sp needed
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 433              		.loc 1 2694 0
 434 0004 1368     		ldr	r3, [r2]
 435 0006 8B43     		bics	r3, r1
 436 0008 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 437              		.loc 1 2695 0
 438 000a 044A     		ldr	r2, .L37+4
 439 000c 0139     		subs	r1, r1, #1
 440 000e 1368     		ldr	r3, [r2]
 441 0010 8B43     		bics	r3, r1
 442 0012 1360     		str	r3, [r2]
 443              		.loc 1 2696 0
 444 0014 7047     		bx	lr
 445              	.L38:
 446 0016 C046     		.align	2
 447              	.L37:
 448 0018 08000B40 		.word	1074462728
 449 001c 18000B40 		.word	1074462744
 450              		.cfi_endproc
 451              	.LFE14:
 452              		.size	CySysLvdDisable, .-CySysLvdDisable
 453              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 454              		.align	1
 455              		.global	CySysLvdGetInterruptSource
 456              		.code	16
 457              		.thumb_func
 458              		.type	CySysLvdGetInterruptSource, %function
 459              	CySysLvdGetInterruptSource:
 460              	.LFB15:
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** 
2699:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2700:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2701:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2702:Generated_Source\PSoC4/CyLib.c ****     *
2703:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2704:Generated_Source\PSoC4/CyLib.c ****     *
2705:Generated_Source\PSoC4/CyLib.c ****     * \return
2706:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2707:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2708:Generated_Source\PSoC4/CyLib.c ****     *
2709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2710:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 57


2711:Generated_Source\PSoC4/CyLib.c ****     {
 461              		.loc 1 2711 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 466              		.loc 1 2712 0
 467 0000 024B     		ldr	r3, .L40
2713:Generated_Source\PSoC4/CyLib.c ****     }
 468              		.loc 1 2713 0
 469              		@ sp needed
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 470              		.loc 1 2712 0
 471 0002 1868     		ldr	r0, [r3]
 472 0004 0223     		movs	r3, #2
 473 0006 1840     		ands	r0, r3
 474              		.loc 1 2713 0
 475 0008 7047     		bx	lr
 476              	.L41:
 477 000a C046     		.align	2
 478              	.L40:
 479 000c 04000B40 		.word	1074462724
 480              		.cfi_endproc
 481              	.LFE15:
 482              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 483              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 484              		.align	1
 485              		.global	CySysLvdClearInterrupt
 486              		.code	16
 487              		.thumb_func
 488              		.type	CySysLvdClearInterrupt, %function
 489              	CySysLvdClearInterrupt:
 490              	.LFB16:
2714:Generated_Source\PSoC4/CyLib.c **** 
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2717:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2718:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2719:Generated_Source\PSoC4/CyLib.c ****     *
2720:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2721:Generated_Source\PSoC4/CyLib.c ****     *
2722:Generated_Source\PSoC4/CyLib.c ****     * \return
2723:Generated_Source\PSoC4/CyLib.c ****     *  None
2724:Generated_Source\PSoC4/CyLib.c ****     *
2725:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2726:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2727:Generated_Source\PSoC4/CyLib.c ****     {
 491              		.loc 1 2727 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		@ link register save eliminated.
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 496              		.loc 1 2728 0
 497 0000 0222     		movs	r2, #2
 498 0002 014B     		ldr	r3, .L43
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 58


2729:Generated_Source\PSoC4/CyLib.c ****     }
 499              		.loc 1 2729 0
 500              		@ sp needed
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 501              		.loc 1 2728 0
 502 0004 1A60     		str	r2, [r3]
 503              		.loc 1 2729 0
 504 0006 7047     		bx	lr
 505              	.L44:
 506              		.align	2
 507              	.L43:
 508 0008 04000B40 		.word	1074462724
 509              		.cfi_endproc
 510              	.LFE16:
 511              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 512              		.section	.text.CySysGetResetReason,"ax",%progbits
 513              		.align	1
 514              		.global	CySysGetResetReason
 515              		.code	16
 516              		.thumb_func
 517              		.type	CySysGetResetReason, %function
 518              	CySysGetResetReason:
 519              	.LFB17:
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2732:Generated_Source\PSoC4/CyLib.c **** 
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2736:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2739:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2740:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2741:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2744:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2745:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2746:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** * \return
2749:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2752:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2753:Generated_Source\PSoC4/CyLib.c **** {
 520              		.loc 1 2753 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525              	.LVL21:
2754:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 526              		.loc 1 2756 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 59


 527 0000 1923     		movs	r3, #25
 528 0002 0200     		movs	r2, r0
2757:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 529              		.loc 1 2757 0
 530 0004 0249     		ldr	r1, .L46
2756:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 531              		.loc 1 2756 0
 532 0006 1A40     		ands	r2, r3
 533              	.LVL22:
 534              		.loc 1 2757 0
 535 0008 0868     		ldr	r0, [r1]
 536              	.LVL23:
2758:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2759:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2762:Generated_Source\PSoC4/CyLib.c **** }
 537              		.loc 1 2762 0
 538              		@ sp needed
2761:Generated_Source\PSoC4/CyLib.c **** }
 539              		.loc 1 2761 0
 540 000a 1840     		ands	r0, r3
 541              	.LVL24:
2759:Generated_Source\PSoC4/CyLib.c **** 
 542              		.loc 1 2759 0
 543 000c 0A60     		str	r2, [r1]
 544              		.loc 1 2762 0
 545 000e 7047     		bx	lr
 546              	.L47:
 547              		.align	2
 548              	.L46:
 549 0010 00030B40 		.word	1074463488
 550              		.cfi_endproc
 551              	.LFE17:
 552              		.size	CySysGetResetReason, .-CySysGetResetReason
 553              		.section	.text.CyDisableInts,"ax",%progbits
 554              		.align	1
 555              		.global	CyDisableInts
 556              		.code	16
 557              		.thumb_func
 558              		.type	CyDisableInts, %function
 559              	CyDisableInts:
 560              	.LFB18:
2763:Generated_Source\PSoC4/CyLib.c **** 
2764:Generated_Source\PSoC4/CyLib.c **** 
2765:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2766:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2767:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** * \return
2772:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2773:Generated_Source\PSoC4/CyLib.c **** *
2774:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2776:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 60


 561              		.loc 1 2776 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
2777:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2780:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2783:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 566              		.loc 1 2783 0
 567 0000 0122     		movs	r2, #1
2780:Generated_Source\PSoC4/CyLib.c **** 
 568              		.loc 1 2780 0
 569 0002 024B     		ldr	r3, .L49
 570              		.loc 1 2783 0
 571 0004 5242     		rsbs	r2, r2, #0
2780:Generated_Source\PSoC4/CyLib.c **** 
 572              		.loc 1 2780 0
 573 0006 1868     		ldr	r0, [r3]
 574              	.LVL25:
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2786:Generated_Source\PSoC4/CyLib.c **** }
 575              		.loc 1 2786 0
 576              		@ sp needed
2783:Generated_Source\PSoC4/CyLib.c **** 
 577              		.loc 1 2783 0
 578 0008 1A60     		str	r2, [r3]
 579              		.loc 1 2786 0
 580 000a 7047     		bx	lr
 581              	.L50:
 582              		.align	2
 583              	.L49:
 584 000c 80E100E0 		.word	-536813184
 585              		.cfi_endproc
 586              	.LFE18:
 587              		.size	CyDisableInts, .-CyDisableInts
 588              		.section	.text.CyEnableInts,"ax",%progbits
 589              		.align	1
 590              		.global	CyEnableInts
 591              		.code	16
 592              		.thumb_func
 593              		.type	CyEnableInts, %function
 594              	CyEnableInts:
 595              	.LFB19:
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** 
2789:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2791:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 61


2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2798:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2799:Generated_Source\PSoC4/CyLib.c **** {
 596              		.loc 1 2799 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601              	.LVL26:
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 602              		.loc 1 2800 0
 603 0000 014B     		ldr	r3, .L52
2801:Generated_Source\PSoC4/CyLib.c **** }
 604              		.loc 1 2801 0
 605              		@ sp needed
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 606              		.loc 1 2800 0
 607 0002 1860     		str	r0, [r3]
 608              		.loc 1 2801 0
 609 0004 7047     		bx	lr
 610              	.L53:
 611 0006 C046     		.align	2
 612              	.L52:
 613 0008 00E100E0 		.word	-536813312
 614              		.cfi_endproc
 615              	.LFE19:
 616              		.size	CyEnableInts, .-CyEnableInts
 617              		.section	.text.CyIntSetSysVector,"ax",%progbits
 618              		.align	1
 619              		.global	CyIntSetSysVector
 620              		.code	16
 621              		.thumb_func
 622              		.type	CyIntSetSysVector, %function
 623              	CyIntSetSysVector:
 624              	.LFB20:
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2805:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2806:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2809:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2810:Generated_Source\PSoC4/CyLib.c **** *
2811:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2812:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2813:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2814:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2815:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2816:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 62


2823:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2824:Generated_Source\PSoC4/CyLib.c **** {
 625              		.loc 1 2824 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630              	.LVL27:
2825:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2827:Generated_Source\PSoC4/CyLib.c **** 
2828:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2831:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 631              		.loc 1 2831 0
 632 0000 8023     		movs	r3, #128
 633 0002 8000     		lsls	r0, r0, #2
 634              	.LVL28:
 635 0004 9B05     		lsls	r3, r3, #22
 636 0006 C318     		adds	r3, r0, r3
 637 0008 1868     		ldr	r0, [r3]
 638              	.LVL29:
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2834:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2835:Generated_Source\PSoC4/CyLib.c **** 
2836:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2837:Generated_Source\PSoC4/CyLib.c **** }
 639              		.loc 1 2837 0
 640              		@ sp needed
2834:Generated_Source\PSoC4/CyLib.c **** 
 641              		.loc 1 2834 0
 642 000a 1960     		str	r1, [r3]
 643              		.loc 1 2837 0
 644 000c 7047     		bx	lr
 645              		.cfi_endproc
 646              	.LFE20:
 647              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 648              		.section	.text.CyIntGetSysVector,"ax",%progbits
 649              		.align	1
 650              		.global	CyIntGetSysVector
 651              		.code	16
 652              		.thumb_func
 653              		.type	CyIntGetSysVector, %function
 654              	CyIntGetSysVector:
 655              	.LFB21:
2838:Generated_Source\PSoC4/CyLib.c **** 
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2841:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2842:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2845:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 63


2848:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2849:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2850:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2851:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2852:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2855:Generated_Source\PSoC4/CyLib.c **** *
2856:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2857:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2858:Generated_Source\PSoC4/CyLib.c **** {
 656              		.loc 1 2858 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661              	.LVL30:
2859:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2860:Generated_Source\PSoC4/CyLib.c **** 
2861:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 662              		.loc 1 2863 0
 663 0000 8023     		movs	r3, #128
 664 0002 8000     		lsls	r0, r0, #2
 665              	.LVL31:
 666 0004 9B05     		lsls	r3, r3, #22
 667 0006 C018     		adds	r0, r0, r3
 668 0008 0068     		ldr	r0, [r0]
2864:Generated_Source\PSoC4/CyLib.c **** }
 669              		.loc 1 2864 0
 670              		@ sp needed
 671 000a 7047     		bx	lr
 672              		.cfi_endproc
 673              	.LFE21:
 674              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 675              		.section	.text.CyIntSetVector,"ax",%progbits
 676              		.align	1
 677              		.global	CyIntSetVector
 678              		.code	16
 679              		.thumb_func
 680              		.type	CyIntSetVector, %function
 681              	CyIntSetVector:
 682              	.LFB22:
2865:Generated_Source\PSoC4/CyLib.c **** 
2866:Generated_Source\PSoC4/CyLib.c **** 
2867:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2868:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2869:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2872:Generated_Source\PSoC4/CyLib.c **** *
2873:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2874:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2877:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 64


2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2880:Generated_Source\PSoC4/CyLib.c **** {
 683              		.loc 1 2880 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688              	.LVL32:
2881:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2882:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2887:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 689              		.loc 1 2887 0
 690 0000 024B     		ldr	r3, .L57
 691 0002 8000     		lsls	r0, r0, #2
 692              	.LVL33:
 693 0004 C318     		adds	r3, r0, r3
 694 0006 1868     		ldr	r0, [r3]
 695              	.LVL34:
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2890:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2891:Generated_Source\PSoC4/CyLib.c **** 
2892:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2893:Generated_Source\PSoC4/CyLib.c **** }
 696              		.loc 1 2893 0
 697              		@ sp needed
2890:Generated_Source\PSoC4/CyLib.c **** 
 698              		.loc 1 2890 0
 699 0008 1960     		str	r1, [r3]
 700              		.loc 1 2893 0
 701 000a 7047     		bx	lr
 702              	.L58:
 703              		.align	2
 704              	.L57:
 705 000c 40000020 		.word	536870976
 706              		.cfi_endproc
 707              	.LFE22:
 708              		.size	CyIntSetVector, .-CyIntSetVector
 709              		.section	.text.CyIntGetVector,"ax",%progbits
 710              		.align	1
 711              		.global	CyIntGetVector
 712              		.code	16
 713              		.thumb_func
 714              		.type	CyIntGetVector, %function
 715              	CyIntGetVector:
 716              	.LFB23:
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2898:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 65


2900:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2908:Generated_Source\PSoC4/CyLib.c **** {
 717              		.loc 1 2908 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 722              	.LVL35:
2909:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 723              		.loc 1 2913 0
 724 0000 024B     		ldr	r3, .L60
 725 0002 8000     		lsls	r0, r0, #2
 726              	.LVL36:
 727 0004 C018     		adds	r0, r0, r3
 728 0006 0068     		ldr	r0, [r0]
2914:Generated_Source\PSoC4/CyLib.c **** }
 729              		.loc 1 2914 0
 730              		@ sp needed
 731 0008 7047     		bx	lr
 732              	.L61:
 733 000a C046     		.align	2
 734              	.L60:
 735 000c 40000020 		.word	536870976
 736              		.cfi_endproc
 737              	.LFE23:
 738              		.size	CyIntGetVector, .-CyIntGetVector
 739              		.section	.text.CyIntSetPriority,"ax",%progbits
 740              		.align	1
 741              		.global	CyIntSetPriority
 742              		.code	16
 743              		.thumb_func
 744              		.type	CyIntSetPriority, %function
 745              	CyIntSetPriority:
 746              	.LFB24:
2915:Generated_Source\PSoC4/CyLib.c **** 
2916:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2917:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2918:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2919:Generated_Source\PSoC4/CyLib.c **** *
2920:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2923:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 66


2927:Generated_Source\PSoC4/CyLib.c **** {
 747              		.loc 1 2927 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              	.LVL37:
 752 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 753              		.cfi_def_cfa_offset 24
 754              		.cfi_offset 3, -24
 755              		.cfi_offset 4, -20
 756              		.cfi_offset 5, -16
 757              		.cfi_offset 6, -12
 758              		.cfi_offset 7, -8
 759              		.cfi_offset 14, -4
2928:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2929:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2930:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2933:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2934:Generated_Source\PSoC4/CyLib.c **** 
2935:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 760              		.loc 1 2935 0
 761 0002 0326     		movs	r6, #3
 762 0004 0500     		movs	r5, r0
 763 0006 3540     		ands	r5, r6
 764 0008 B540     		lsls	r5, r5, r6
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 765              		.loc 1 2927 0
 766 000a 0F00     		movs	r7, r1
 767 000c 0400     		movs	r4, r0
 768              		.loc 1 2935 0
 769 000e 0635     		adds	r5, r5, #6
 770              	.LVL38:
2936:Generated_Source\PSoC4/CyLib.c **** 
2937:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2940:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 771              		.loc 1 2940 0
 772 0010 AE40     		lsls	r6, r6, r5
2941:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 773              		.loc 1 2941 0
 774 0012 AF40     		lsls	r7, r7, r5
2937:Generated_Source\PSoC4/CyLib.c **** 
 775              		.loc 1 2937 0
 776 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 777              	.LVL39:
2939:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 778              		.loc 1 2939 0
 779 0018 A408     		lsrs	r4, r4, #2
 780 001a 054B     		ldr	r3, .L63
 781 001c A400     		lsls	r4, r4, #2
 782 001e E418     		adds	r4, r4, r3
 783 0020 2368     		ldr	r3, [r4]
 784              	.LVL40:
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 67


2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2945:Generated_Source\PSoC4/CyLib.c **** }
 785              		.loc 1 2945 0
 786              		@ sp needed
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 787              		.loc 1 2940 0
 788 0022 B343     		bics	r3, r6
 789              	.LVL41:
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 790              		.loc 1 2941 0
 791 0024 1F43     		orrs	r7, r3
 792              	.LVL42:
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 793              		.loc 1 2942 0
 794 0026 2760     		str	r7, [r4]
2944:Generated_Source\PSoC4/CyLib.c **** }
 795              		.loc 1 2944 0
 796 0028 FFF7FEFF 		bl	CyExitCriticalSection
 797              	.LVL43:
 798              	.LVL44:
 799              	.LVL45:
 800              		.loc 1 2945 0
 801 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 802              	.L64:
 803 002e C046     		.align	2
 804              	.L63:
 805 0030 00E400E0 		.word	-536812544
 806              		.cfi_endproc
 807              	.LFE24:
 808              		.size	CyIntSetPriority, .-CyIntSetPriority
 809              		.section	.text.CyIntGetPriority,"ax",%progbits
 810              		.align	1
 811              		.global	CyIntGetPriority
 812              		.code	16
 813              		.thumb_func
 814              		.type	CyIntGetPriority, %function
 815              	CyIntGetPriority:
 816              	.LFB25:
2946:Generated_Source\PSoC4/CyLib.c **** 
2947:Generated_Source\PSoC4/CyLib.c **** 
2948:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2949:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2950:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2951:Generated_Source\PSoC4/CyLib.c **** *
2952:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2953:Generated_Source\PSoC4/CyLib.c **** *
2954:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** * \return
2957:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2960:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2961:Generated_Source\PSoC4/CyLib.c **** {
 817              		.loc 1 2961 0
 818              		.cfi_startproc
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 68


 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
 822              	.LVL46:
2962:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2963:Generated_Source\PSoC4/CyLib.c **** 
2964:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 823              		.loc 1 2966 0
 824 0000 8308     		lsrs	r3, r0, #2
 825 0002 064A     		ldr	r2, .L66
 826 0004 9B00     		lsls	r3, r3, #2
 827 0006 9B18     		adds	r3, r3, r2
 828 0008 1968     		ldr	r1, [r3]
 829              	.LVL47:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 830              		.loc 1 2968 0
 831 000a 0322     		movs	r2, #3
 832 000c 0300     		movs	r3, r0
 833 000e 1340     		ands	r3, r2
 834 0010 9340     		lsls	r3, r3, r2
 835 0012 0633     		adds	r3, r3, #6
 836 0014 D940     		lsrs	r1, r1, r3
 837              	.LVL48:
 838 0016 0800     		movs	r0, r1
 839              	.LVL49:
2969:Generated_Source\PSoC4/CyLib.c **** }
 840              		.loc 1 2969 0
 841              		@ sp needed
2968:Generated_Source\PSoC4/CyLib.c **** }
 842              		.loc 1 2968 0
 843 0018 1040     		ands	r0, r2
 844              		.loc 1 2969 0
 845 001a 7047     		bx	lr
 846              	.L67:
 847              		.align	2
 848              	.L66:
 849 001c 00E400E0 		.word	-536812544
 850              		.cfi_endproc
 851              	.LFE25:
 852              		.size	CyIntGetPriority, .-CyIntGetPriority
 853              		.section	.text.CyIntEnable,"ax",%progbits
 854              		.align	1
 855              		.global	CyIntEnable
 856              		.code	16
 857              		.thumb_func
 858              		.type	CyIntEnable, %function
 859              	CyIntEnable:
 860              	.LFB26:
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 69


2976:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2981:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2982:Generated_Source\PSoC4/CyLib.c **** {
 861              		.loc 1 2982 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 0
 864              		@ frame_needed = 0, uses_anonymous_args = 0
 865              		@ link register save eliminated.
 866              	.LVL50:
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 867              		.loc 1 2983 0
 868 0000 1F23     		movs	r3, #31
 869 0002 1840     		ands	r0, r3
 870              	.LVL51:
 871 0004 1E3B     		subs	r3, r3, #30
 872 0006 8340     		lsls	r3, r3, r0
 873 0008 014A     		ldr	r2, .L69
2984:Generated_Source\PSoC4/CyLib.c **** }
 874              		.loc 1 2984 0
 875              		@ sp needed
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 876              		.loc 1 2983 0
 877 000a 1360     		str	r3, [r2]
 878              		.loc 1 2984 0
 879 000c 7047     		bx	lr
 880              	.L70:
 881 000e C046     		.align	2
 882              	.L69:
 883 0010 00E100E0 		.word	-536813312
 884              		.cfi_endproc
 885              	.LFE26:
 886              		.size	CyIntEnable, .-CyIntEnable
 887              		.section	.text.CyIntGetState,"ax",%progbits
 888              		.align	1
 889              		.global	CyIntGetState
 890              		.code	16
 891              		.thumb_func
 892              		.type	CyIntGetState, %function
 893              	CyIntGetState:
 894              	.LFB27:
2985:Generated_Source\PSoC4/CyLib.c **** 
2986:Generated_Source\PSoC4/CyLib.c **** 
2987:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2988:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2989:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** * \return
2996:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2997:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 70


2998:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2999:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
3000:Generated_Source\PSoC4/CyLib.c **** {
 895              		.loc 1 3000 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900              	.LVL52:
3001:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
3002:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 901              		.loc 1 3002 0
 902 0000 1F22     		movs	r2, #31
 903 0002 044B     		ldr	r3, .L72
 904 0004 1040     		ands	r0, r2
 905              	.LVL53:
 906 0006 1B68     		ldr	r3, [r3]
3003:Generated_Source\PSoC4/CyLib.c **** }
 907              		.loc 1 3003 0
 908              		@ sp needed
3002:Generated_Source\PSoC4/CyLib.c **** }
 909              		.loc 1 3002 0
 910 0008 C340     		lsrs	r3, r3, r0
 911 000a 1800     		movs	r0, r3
 912 000c 0123     		movs	r3, #1
 913 000e 1840     		ands	r0, r3
 914              		.loc 1 3003 0
 915 0010 7047     		bx	lr
 916              	.L73:
 917 0012 C046     		.align	2
 918              	.L72:
 919 0014 00E100E0 		.word	-536813312
 920              		.cfi_endproc
 921              	.LFE27:
 922              		.size	CyIntGetState, .-CyIntGetState
 923              		.section	.text.CyIntDisable,"ax",%progbits
 924              		.align	1
 925              		.global	CyIntDisable
 926              		.code	16
 927              		.thumb_func
 928              		.type	CyIntDisable, %function
 929              	CyIntDisable:
 930              	.LFB28:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3015:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
3016:Generated_Source\PSoC4/CyLib.c **** {
 931              		.loc 1 3016 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 71


 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 936              	.LVL54:
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 937              		.loc 1 3017 0
 938 0000 1F23     		movs	r3, #31
 939 0002 1840     		ands	r0, r3
 940              	.LVL55:
 941 0004 1E3B     		subs	r3, r3, #30
 942 0006 8340     		lsls	r3, r3, r0
 943 0008 014A     		ldr	r2, .L75
3018:Generated_Source\PSoC4/CyLib.c **** }
 944              		.loc 1 3018 0
 945              		@ sp needed
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 946              		.loc 1 3017 0
 947 000a 1360     		str	r3, [r2]
 948              		.loc 1 3018 0
 949 000c 7047     		bx	lr
 950              	.L76:
 951 000e C046     		.align	2
 952              	.L75:
 953 0010 80E100E0 		.word	-536813184
 954              		.cfi_endproc
 955              	.LFE28:
 956              		.size	CyIntDisable, .-CyIntDisable
 957              		.section	.text.CyIntSetPending,"ax",%progbits
 958              		.align	1
 959              		.global	CyIntSetPending
 960              		.code	16
 961              		.thumb_func
 962              		.type	CyIntSetPending, %function
 963              	CyIntSetPending:
 964              	.LFB29:
3019:Generated_Source\PSoC4/CyLib.c **** 
3020:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3021:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
3022:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3023:Generated_Source\PSoC4/CyLib.c **** *
3024:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
3030:Generated_Source\PSoC4/CyLib.c **** {
 965              		.loc 1 3030 0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969              		@ link register save eliminated.
 970              	.LVL56:
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 971              		.loc 1 3031 0
 972 0000 1F23     		movs	r3, #31
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 72


 973 0002 1840     		ands	r0, r3
 974              	.LVL57:
 975 0004 1E3B     		subs	r3, r3, #30
 976 0006 8340     		lsls	r3, r3, r0
 977 0008 014A     		ldr	r2, .L78
3032:Generated_Source\PSoC4/CyLib.c **** }
 978              		.loc 1 3032 0
 979              		@ sp needed
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 980              		.loc 1 3031 0
 981 000a 1360     		str	r3, [r2]
 982              		.loc 1 3032 0
 983 000c 7047     		bx	lr
 984              	.L79:
 985 000e C046     		.align	2
 986              	.L78:
 987 0010 00E200E0 		.word	-536813056
 988              		.cfi_endproc
 989              	.LFE29:
 990              		.size	CyIntSetPending, .-CyIntSetPending
 991              		.section	.text.CyIntClearPending,"ax",%progbits
 992              		.align	1
 993              		.global	CyIntClearPending
 994              		.code	16
 995              		.thumb_func
 996              		.type	CyIntClearPending, %function
 997              	CyIntClearPending:
 998              	.LFB30:
3033:Generated_Source\PSoC4/CyLib.c **** 
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3036:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
3037:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3038:Generated_Source\PSoC4/CyLib.c **** *
3039:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
3040:Generated_Source\PSoC4/CyLib.c **** *
3041:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3042:Generated_Source\PSoC4/CyLib.c **** *
3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
3045:Generated_Source\PSoC4/CyLib.c **** {
 999              		.loc 1 3045 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 0
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 1003              		@ link register save eliminated.
 1004              	.LVL58:
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1005              		.loc 1 3046 0
 1006 0000 1F23     		movs	r3, #31
 1007 0002 1840     		ands	r0, r3
 1008              	.LVL59:
 1009 0004 1E3B     		subs	r3, r3, #30
 1010 0006 8340     		lsls	r3, r3, r0
 1011 0008 014A     		ldr	r2, .L81
3047:Generated_Source\PSoC4/CyLib.c **** }
 1012              		.loc 1 3047 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 73


 1013              		@ sp needed
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1014              		.loc 1 3046 0
 1015 000a 1360     		str	r3, [r2]
 1016              		.loc 1 3047 0
 1017 000c 7047     		bx	lr
 1018              	.L82:
 1019 000e C046     		.align	2
 1020              	.L81:
 1021 0010 80E200E0 		.word	-536812928
 1022              		.cfi_endproc
 1023              	.LFE30:
 1024              		.size	CyIntClearPending, .-CyIntClearPending
 1025              		.section	.text.CyHalt,"ax",%progbits
 1026              		.align	1
 1027              		.global	CyHalt
 1028              		.code	16
 1029              		.thumb_func
 1030              		.type	CyHalt, %function
 1031              	CyHalt:
 1032              	.LFB31:
3048:Generated_Source\PSoC4/CyLib.c **** 
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3051:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
3052:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3055:Generated_Source\PSoC4/CyLib.c **** *
3056:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3060:Generated_Source\PSoC4/CyLib.c **** {
 1033              		.loc 1 3060 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              		@ link register save eliminated.
 1038              	.LVL60:
3061:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3062:Generated_Source\PSoC4/CyLib.c ****     {
3063:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3064:Generated_Source\PSoC4/CyLib.c ****     }
3065:Generated_Source\PSoC4/CyLib.c **** 
3066:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3067:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3068:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3069:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1039              		.loc 1 3069 0
 1040              		.syntax divided
 1041              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 1042 0000 01BE     		    bkpt    1
 1043              	@ 0 "" 2
3070:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3071:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3072:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 74


3073:Generated_Source\PSoC4/CyLib.c **** }
 1044              		.loc 1 3073 0
 1045              		.thumb
 1046              		.syntax unified
 1047              		@ sp needed
 1048 0002 7047     		bx	lr
 1049              		.cfi_endproc
 1050              	.LFE31:
 1051              		.size	CyHalt, .-CyHalt
 1052              		.section	.text.CySoftwareReset,"ax",%progbits
 1053              		.align	1
 1054              		.global	CySoftwareReset
 1055              		.code	16
 1056              		.thumb_func
 1057              		.type	CySoftwareReset, %function
 1058              	CySoftwareReset:
 1059              	.LFB32:
3074:Generated_Source\PSoC4/CyLib.c **** 
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3077:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3078:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3081:Generated_Source\PSoC4/CyLib.c **** *
3082:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3083:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3084:Generated_Source\PSoC4/CyLib.c **** {
 1060              		.loc 1 3084 0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              		@ link register save eliminated.
3085:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3086:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3087:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3088:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1065              		.loc 1 3089 0
 1066 0000 034A     		ldr	r2, .L85
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1067              		.loc 1 3090 0
 1068 0002 0449     		ldr	r1, .L85+4
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1069              		.loc 1 3089 0
 1070 0004 1368     		ldr	r3, [r2]
3091:Generated_Source\PSoC4/CyLib.c **** }
 1071              		.loc 1 3091 0
 1072              		@ sp needed
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1073              		.loc 1 3090 0
 1074 0006 9BB2     		uxth	r3, r3
 1075 0008 0B43     		orrs	r3, r1
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1076              		.loc 1 3089 0
 1077 000a 1360     		str	r3, [r2]
 1078              		.loc 1 3091 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 75


 1079 000c 7047     		bx	lr
 1080              	.L86:
 1081 000e C046     		.align	2
 1082              	.L85:
 1083 0010 0CED00E0 		.word	-536810228
 1084 0014 0400FA05 		.word	100270084
 1085              		.cfi_endproc
 1086              	.LFE32:
 1087              		.size	CySoftwareReset, .-CySoftwareReset
 1088              		.section	.text.CyDelay,"ax",%progbits
 1089              		.align	1
 1090              		.global	CyDelay
 1091              		.code	16
 1092              		.thumb_func
 1093              		.type	CyDelay, %function
 1094              	CyDelay:
 1095              	.LFB33:
3092:Generated_Source\PSoC4/CyLib.c **** 
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3095:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3096:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3097:Generated_Source\PSoC4/CyLib.c **** *
3098:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3099:Generated_Source\PSoC4/CyLib.c **** *
3100:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3101:Generated_Source\PSoC4/CyLib.c **** *
3102:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3103:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3104:Generated_Source\PSoC4/CyLib.c **** {
 1096              		.loc 1 3104 0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 0
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100              	.LVL61:
 1101 0000 70B5     		push	{r4, r5, r6, lr}
 1102              		.cfi_def_cfa_offset 16
 1103              		.cfi_offset 4, -16
 1104              		.cfi_offset 5, -12
 1105              		.cfi_offset 6, -8
 1106              		.cfi_offset 14, -4
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1107              		.loc 1 3105 0
 1108 0002 8025     		movs	r5, #128
3104:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1109              		.loc 1 3104 0
 1110 0004 0400     		movs	r4, r0
 1111              		.loc 1 3105 0
 1112 0006 2D02     		lsls	r5, r5, #8
 1113              	.LVL62:
 1114              	.L88:
 1115 0008 064B     		ldr	r3, .L91
 1116 000a AC42     		cmp	r4, r5
 1117 000c 05D9     		bls	.L90
3106:Generated_Source\PSoC4/CyLib.c ****     {
3107:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3108:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 76


3109:Generated_Source\PSoC4/CyLib.c ****          */
3110:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1118              		.loc 1 3110 0
 1119 000e 5868     		ldr	r0, [r3, #4]
 1120 0010 FFF7FEFF 		bl	CyDelayCycles
 1121              	.LVL63:
3111:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1122              		.loc 1 3111 0
 1123 0014 044B     		ldr	r3, .L91+4
 1124 0016 E418     		adds	r4, r4, r3
 1125              	.LVL64:
 1126 0018 F6E7     		b	.L88
 1127              	.L90:
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1128              		.loc 1 3114 0
 1129 001a 9868     		ldr	r0, [r3, #8]
3115:Generated_Source\PSoC4/CyLib.c **** }
 1130              		.loc 1 3115 0
 1131              		@ sp needed
3114:Generated_Source\PSoC4/CyLib.c **** }
 1132              		.loc 1 3114 0
 1133 001c 6043     		muls	r0, r4
 1134 001e FFF7FEFF 		bl	CyDelayCycles
 1135              	.LVL65:
 1136              	.LVL66:
 1137              		.loc 1 3115 0
 1138 0022 70BD     		pop	{r4, r5, r6, pc}
 1139              	.L92:
 1140              		.align	2
 1141              	.L91:
 1142 0024 00000000 		.word	.LANCHOR0
 1143 0028 0080FFFF 		.word	-32768
 1144              		.cfi_endproc
 1145              	.LFE33:
 1146              		.size	CyDelay, .-CyDelay
 1147              		.section	.text.CyDelayUs,"ax",%progbits
 1148              		.align	1
 1149              		.global	CyDelayUs
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	CyDelayUs, %function
 1153              	CyDelayUs:
 1154              	.LFB34:
3116:Generated_Source\PSoC4/CyLib.c **** 
3117:Generated_Source\PSoC4/CyLib.c **** 
3118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3121:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3122:Generated_Source\PSoC4/CyLib.c **** *
3123:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3126:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3127:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 77


 1155              		.loc 1 3127 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              	.LVL67:
 1160 0000 10B5     		push	{r4, lr}
 1161              		.cfi_def_cfa_offset 8
 1162              		.cfi_offset 4, -8
 1163              		.cfi_offset 14, -4
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1164              		.loc 1 3128 0
 1165 0002 034B     		ldr	r3, .L94
3129:Generated_Source\PSoC4/CyLib.c **** }
 1166              		.loc 1 3129 0
 1167              		@ sp needed
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1168              		.loc 1 3128 0
 1169 0004 1B7B     		ldrb	r3, [r3, #12]
 1170 0006 5843     		muls	r0, r3
 1171              	.LVL68:
 1172 0008 FFF7FEFF 		bl	CyDelayCycles
 1173              	.LVL69:
 1174              		.loc 1 3129 0
 1175 000c 10BD     		pop	{r4, pc}
 1176              	.L95:
 1177 000e C046     		.align	2
 1178              	.L94:
 1179 0010 00000000 		.word	.LANCHOR0
 1180              		.cfi_endproc
 1181              	.LFE34:
 1182              		.size	CyDelayUs, .-CyDelayUs
 1183              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1184              		.align	1
 1185              		.global	CySysClkWriteImoFreq
 1186              		.code	16
 1187              		.thumb_func
 1188              		.type	CySysClkWriteImoFreq, %function
 1189              	CySysClkWriteImoFreq:
 1190              	.LFB8:
 818:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1191              		.loc 1 818 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 24
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              	.LVL70:
 1196 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1197              		.cfi_def_cfa_offset 20
 1198              		.cfi_offset 4, -20
 1199              		.cfi_offset 5, -16
 1200              		.cfi_offset 6, -12
 1201              		.cfi_offset 7, -8
 1202              		.cfi_offset 14, -4
 1203 0002 0500     		movs	r5, r0
 1204 0004 87B0     		sub	sp, sp, #28
 1205              		.cfi_def_cfa_offset 48
 840:Generated_Source\PSoC4/CyLib.c **** 
 1206              		.loc 1 840 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 78


 1207 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1208              	.LVL71:
 890:Generated_Source\PSoC4/CyLib.c ****         {
 1209              		.loc 1 890 0
 1210 000a EB1E     		subs	r3, r5, #3
 840:Generated_Source\PSoC4/CyLib.c **** 
 1211              		.loc 1 840 0
 1212 000c 0490     		str	r0, [sp, #16]
 1213              	.LVL72:
 890:Generated_Source\PSoC4/CyLib.c ****         {
 1214              		.loc 1 890 0
 1215 000e 0393     		str	r3, [sp, #12]
 1216 0010 2D2B     		cmp	r3, #45
 1217 0012 5BD8     		bhi	.L98
 892:Generated_Source\PSoC4/CyLib.c ****             {
 1218              		.loc 1 892 0
 1219 0014 304B     		ldr	r3, .L109
 1220 0016 1B78     		ldrb	r3, [r3]
 1221 0018 9D42     		cmp	r5, r3
 1222 001a 04D8     		bhi	.L99
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1223              		.loc 1 894 0
 1224 001c 2F4B     		ldr	r3, .L109+4
 1225 001e 1C78     		ldrb	r4, [r3]
 895:Generated_Source\PSoC4/CyLib.c ****             }
 1226              		.loc 1 895 0
 1227 0020 2F4B     		ldr	r3, .L109+8
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1228              		.loc 1 894 0
 1229 0022 E4B2     		uxtb	r4, r4
 1230              	.LVL73:
 1231 0024 1EE0     		b	.L107
 1232              	.LVL74:
 1233              	.L99:
 897:Generated_Source\PSoC4/CyLib.c ****             {
 1234              		.loc 1 897 0
 1235 0026 2F4B     		ldr	r3, .L109+12
 1236 0028 1B78     		ldrb	r3, [r3]
 1237 002a 9D42     		cmp	r5, r3
 1238 002c 04D8     		bhi	.L101
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1239              		.loc 1 899 0
 1240 002e 2E4B     		ldr	r3, .L109+16
 1241 0030 1C78     		ldrb	r4, [r3]
 900:Generated_Source\PSoC4/CyLib.c ****             }
 1242              		.loc 1 900 0
 1243 0032 2E4B     		ldr	r3, .L109+20
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1244              		.loc 1 899 0
 1245 0034 E4B2     		uxtb	r4, r4
 1246              	.LVL75:
 1247 0036 15E0     		b	.L107
 1248              	.LVL76:
 1249              	.L101:
 902:Generated_Source\PSoC4/CyLib.c ****             {
 1250              		.loc 1 902 0
 1251 0038 2D4B     		ldr	r3, .L109+24
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 79


 1252 003a 1B78     		ldrb	r3, [r3]
 1253 003c 9D42     		cmp	r5, r3
 1254 003e 04D8     		bhi	.L102
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1255              		.loc 1 904 0
 1256 0040 2C4B     		ldr	r3, .L109+28
 1257 0042 1C78     		ldrb	r4, [r3]
 905:Generated_Source\PSoC4/CyLib.c ****             }
 1258              		.loc 1 905 0
 1259 0044 2C4B     		ldr	r3, .L109+32
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1260              		.loc 1 904 0
 1261 0046 E4B2     		uxtb	r4, r4
 1262              	.LVL77:
 1263 0048 0CE0     		b	.L107
 1264              	.LVL78:
 1265              	.L102:
 907:Generated_Source\PSoC4/CyLib.c ****             {
 1266              		.loc 1 907 0
 1267 004a 2C4B     		ldr	r3, .L109+36
 1268 004c 1B78     		ldrb	r3, [r3]
 1269 004e 9D42     		cmp	r5, r3
 1270 0050 04D8     		bhi	.L103
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1271              		.loc 1 909 0
 1272 0052 2B4B     		ldr	r3, .L109+40
 1273 0054 1C78     		ldrb	r4, [r3]
 910:Generated_Source\PSoC4/CyLib.c ****             }
 1274              		.loc 1 910 0
 1275 0056 2B4B     		ldr	r3, .L109+44
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1276              		.loc 1 909 0
 1277 0058 E4B2     		uxtb	r4, r4
 1278              	.LVL79:
 1279 005a 03E0     		b	.L107
 1280              	.LVL80:
 1281              	.L103:
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1282              		.loc 1 914 0
 1283 005c 2A4B     		ldr	r3, .L109+48
 1284 005e 1C78     		ldrb	r4, [r3]
 915:Generated_Source\PSoC4/CyLib.c ****             }
 1285              		.loc 1 915 0
 1286 0060 2A4B     		ldr	r3, .L109+52
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1287              		.loc 1 914 0
 1288 0062 E4B2     		uxtb	r4, r4
 1289              	.LVL81:
 1290              	.L107:
 915:Generated_Source\PSoC4/CyLib.c ****             }
 1291              		.loc 1 915 0
 1292 0064 1B78     		ldrb	r3, [r3]
 919:Generated_Source\PSoC4/CyLib.c **** 
 1293              		.loc 1 919 0
 1294 0066 EA1E     		subs	r2, r5, #3
 915:Generated_Source\PSoC4/CyLib.c ****             }
 1295              		.loc 1 915 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 80


 1296 0068 DBB2     		uxtb	r3, r3
 1297 006a 0193     		str	r3, [sp, #4]
 1298              	.LVL82:
 919:Generated_Source\PSoC4/CyLib.c **** 
 1299              		.loc 1 919 0
 1300 006c 284B     		ldr	r3, .L109+56
 1301 006e 294F     		ldr	r7, .L109+60
 1302 0070 9A5C     		ldrb	r2, [r3, r2]
 1303 0072 0593     		str	r3, [sp, #20]
 1304 0074 0292     		str	r2, [sp, #8]
 1305              	.LVL83:
 931:Generated_Source\PSoC4/CyLib.c ****             {
 1306              		.loc 1 931 0
 1307 0076 2F2A     		cmp	r2, #47
 1308 0078 04D9     		bls	.L104
 931:Generated_Source\PSoC4/CyLib.c ****             {
 1309              		.loc 1 931 0 is_stmt 0 discriminator 1
 1310 007a 2A2D     		cmp	r5, #42
 1311 007c 02D9     		bls	.L104
 934:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1312              		.loc 1 934 0 is_stmt 1
 1313 007e 1926     		movs	r6, #25
 1314 0080 3E60     		str	r6, [r7]
 1315 0082 08E0     		b	.L108
 1316              	.L104:
 943:Generated_Source\PSoC4/CyLib.c ****             }
 1317              		.loc 1 943 0
 1318 0084 3F23     		movs	r3, #63
 1319 0086 3E68     		ldr	r6, [r7]
 1320 0088 1E40     		ands	r6, r3
 1321              	.LVL84:
 955:Generated_Source\PSoC4/CyLib.c ****             {
 1322              		.loc 1 955 0
 1323 008a 029B     		ldr	r3, [sp, #8]
 1324 008c B342     		cmp	r3, r6
 1325 008e 05D2     		bcs	.L105
 958:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1326              		.loc 1 958 0
 1327 0090 204B     		ldr	r3, .L109+60
 1328 0092 029A     		ldr	r2, [sp, #8]
 1329 0094 1A60     		str	r2, [r3]
 1330              	.LVL85:
 1331              	.L108:
 959:Generated_Source\PSoC4/CyLib.c ****             }
 1332              		.loc 1 959 0
 1333 0096 0520     		movs	r0, #5
 1334 0098 FFF7FEFF 		bl	CyDelayCycles
 1335              	.LVL86:
 1336              	.L105:
 963:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1337              		.loc 1 963 0
 1338 009c 1B4B     		ldr	r3, .L109+52
 1339 009e 1E4A     		ldr	r2, .L109+64
 1340 00a0 ED18     		adds	r5, r5, r3
 1341              	.LVL87:
 1342 00a2 2B78     		ldrb	r3, [r5]
 966:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 81


 1343              		.loc 1 966 0
 1344 00a4 0520     		movs	r0, #5
 963:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1345              		.loc 1 963 0
 1346 00a6 DBB2     		uxtb	r3, r3
 1347 00a8 1360     		str	r3, [r2]
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1348              		.loc 1 964 0
 1349 00aa 1C4B     		ldr	r3, .L109+68
 965:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1350              		.loc 1 965 0
 1351 00ac 019A     		ldr	r2, [sp, #4]
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1352              		.loc 1 964 0
 1353 00ae 1C60     		str	r4, [r3]
 965:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1354              		.loc 1 965 0
 1355 00b0 1B4B     		ldr	r3, .L109+72
 1356 00b2 1A60     		str	r2, [r3]
 966:Generated_Source\PSoC4/CyLib.c **** 
 1357              		.loc 1 966 0
 1358 00b4 FFF7FEFF 		bl	CyDelayUs
 1359              	.LVL88:
 968:Generated_Source\PSoC4/CyLib.c ****             {
 1360              		.loc 1 968 0
 1361 00b8 029B     		ldr	r3, [sp, #8]
 1362 00ba B342     		cmp	r3, r6
 1363 00bc 06D9     		bls	.L98
 971:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1364              		.loc 1 971 0
 1365 00be 059B     		ldr	r3, [sp, #20]
 1366 00c0 039A     		ldr	r2, [sp, #12]
 972:Generated_Source\PSoC4/CyLib.c ****             }
 1367              		.loc 1 972 0
 1368 00c2 0520     		movs	r0, #5
 971:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1369              		.loc 1 971 0
 1370 00c4 9B5C     		ldrb	r3, [r3, r2]
 1371 00c6 3B60     		str	r3, [r7]
 972:Generated_Source\PSoC4/CyLib.c ****             }
 1372              		.loc 1 972 0
 1373 00c8 FFF7FEFF 		bl	CyDelayCycles
 1374              	.LVL89:
 1375              	.L98:
 997:Generated_Source\PSoC4/CyLib.c ****     }
 1376              		.loc 1 997 0
 1377 00cc 0498     		ldr	r0, [sp, #16]
 1378 00ce FFF7FEFF 		bl	CyExitCriticalSection
 1379              	.LVL90:
 998:Generated_Source\PSoC4/CyLib.c **** 
 1380              		.loc 1 998 0
 1381 00d2 07B0     		add	sp, sp, #28
 1382              		@ sp needed
 1383 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1384              	.L110:
 1385 00d6 C046     		.align	2
 1386              	.L109:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 82


 1387 00d8 40F3FF0F 		.word	268432192
 1388 00dc 41F3FF0F 		.word	268432193
 1389 00e0 42F3FF0F 		.word	268432194
 1390 00e4 43F3FF0F 		.word	268432195
 1391 00e8 44F3FF0F 		.word	268432196
 1392 00ec 45F3FF0F 		.word	268432197
 1393 00f0 46F3FF0F 		.word	268432198
 1394 00f4 47F3FF0F 		.word	268432199
 1395 00f8 48F3FF0F 		.word	268432200
 1396 00fc 49F3FF0F 		.word	268432201
 1397 0100 4AF3FF0F 		.word	268432202
 1398 0104 4BF3FF0F 		.word	268432203
 1399 0108 4CF3FF0F 		.word	268432204
 1400 010c 4DF3FF0F 		.word	268432205
 1401 0110 00000000 		.word	.LANCHOR1
 1402 0114 2CFF0B40 		.word	1074528044
 1403 0118 28FF0B40 		.word	1074528040
 1404 011c 1CFF0B40 		.word	1074528028
 1405 0120 20FF0B40 		.word	1074528032
 1406              		.cfi_endproc
 1407              	.LFE8:
 1408              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1409              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1410              		.align	1
 1411              		.global	CySysClkEcoStart
 1412              		.code	16
 1413              		.thumb_func
 1414              		.type	CySysClkEcoStart, %function
 1415              	CySysClkEcoStart:
 1416              	.LFB9:
1202:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1417              		.loc 1 1202 0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 0
 1420              		@ frame_needed = 0, uses_anonymous_args = 0
 1421              	.LVL91:
1207:Generated_Source\PSoC4/CyLib.c **** 
 1422              		.loc 1 1207 0
 1423 0000 0123     		movs	r3, #1
1202:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1424              		.loc 1 1202 0
 1425 0002 70B5     		push	{r4, r5, r6, lr}
 1426              		.cfi_def_cfa_offset 16
 1427              		.cfi_offset 4, -16
 1428              		.cfi_offset 5, -12
 1429              		.cfi_offset 6, -8
 1430              		.cfi_offset 14, -4
1202:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1431              		.loc 1 1202 0
 1432 0004 0400     		movs	r4, r0
1213:Generated_Source\PSoC4/CyLib.c **** 
 1433              		.loc 1 1213 0
 1434 0006 8020     		movs	r0, #128
 1435              	.LVL92:
1207:Generated_Source\PSoC4/CyLib.c **** 
 1436              		.loc 1 1207 0
 1437 0008 0E49     		ldr	r1, .L118
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 83


1213:Generated_Source\PSoC4/CyLib.c **** 
 1438              		.loc 1 1213 0
 1439 000a 0002     		lsls	r0, r0, #8
1207:Generated_Source\PSoC4/CyLib.c **** 
 1440              		.loc 1 1207 0
 1441 000c 0A68     		ldr	r2, [r1]
1320:Generated_Source\PSoC4/CyLib.c **** 
 1442              		.loc 1 1320 0
 1443 000e 1D00     		movs	r5, r3
1207:Generated_Source\PSoC4/CyLib.c **** 
 1444              		.loc 1 1207 0
 1445 0010 1A43     		orrs	r2, r3
 1446 0012 0A60     		str	r2, [r1]
1210:Generated_Source\PSoC4/CyLib.c **** 
 1447              		.loc 1 1210 0
 1448 0014 0C49     		ldr	r1, .L118+4
 1449 0016 0D4A     		ldr	r2, .L118+8
 1450 0018 1160     		str	r1, [r2]
1213:Generated_Source\PSoC4/CyLib.c **** 
 1451              		.loc 1 1213 0
 1452 001a 0D49     		ldr	r1, .L118+12
 1453 001c 0A68     		ldr	r2, [r1]
 1454 001e 0243     		orrs	r2, r0
 1455 0020 0A60     		str	r2, [r1]
1314:Generated_Source\PSoC4/CyLib.c ****         {
 1456              		.loc 1 1314 0
 1457 0022 002C     		cmp	r4, #0
 1458 0024 01D1     		bne	.L116
 1459              	.L114:
1203:Generated_Source\PSoC4/CyLib.c **** 
 1460              		.loc 1 1203 0
 1461 0026 0020     		movs	r0, #0
 1462 0028 0AE0     		b	.L113
 1463              	.L116:
1320:Generated_Source\PSoC4/CyLib.c **** 
 1464              		.loc 1 1320 0
 1465 002a 0120     		movs	r0, #1
 1466 002c FFF7FEFF 		bl	CyDelayUs
 1467              	.LVL93:
 1468              	.LBB14:
 1469              	.LBB15:
1386:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
 1470              		.loc 1 1386 0
 1471 0030 084B     		ldr	r3, .L118+16
 1472 0032 1B68     		ldr	r3, [r3]
 1473              	.LBE15:
 1474              	.LBE14:
1322:Generated_Source\PSoC4/CyLib.c ****                 {
 1475              		.loc 1 1322 0
 1476 0034 2B42     		tst	r3, r5
 1477 0036 F6D1     		bne	.L114
1318:Generated_Source\PSoC4/CyLib.c ****             {
 1478              		.loc 1 1318 0
 1479 0038 013C     		subs	r4, r4, #1
 1480              	.LVL94:
 1481 003a 002C     		cmp	r4, #0
 1482 003c F5D1     		bne	.L116
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 84


1316:Generated_Source\PSoC4/CyLib.c **** 
 1483              		.loc 1 1316 0
 1484 003e 1020     		movs	r0, #16
 1485              	.L113:
 1486              	.LVL95:
1332:Generated_Source\PSoC4/CyLib.c **** 
 1487              		.loc 1 1332 0
 1488              		@ sp needed
 1489              	.LVL96:
 1490 0040 70BD     		pop	{r4, r5, r6, pc}
 1491              	.L119:
 1492 0042 C046     		.align	2
 1493              	.L118:
 1494 0044 60F02E40 		.word	1076818016
 1495 0048 02200000 		.word	8194
 1496 004c 78002E40 		.word	1076756600
 1497 0050 10002E40 		.word	1076756496
 1498 0054 0C002E40 		.word	1076756492
 1499              		.cfi_endproc
 1500              	.LFE9:
 1501              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1502              		.section	.text.CySysLvdEnable,"ax",%progbits
 1503              		.align	1
 1504              		.global	CySysLvdEnable
 1505              		.code	16
 1506              		.thumb_func
 1507              		.type	CySysLvdEnable, %function
 1508              	CySysLvdEnable:
 1509              	.LFB13:
2663:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1510              		.loc 1 2663 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514              	.LVL97:
 1515 0000 70B5     		push	{r4, r5, r6, lr}
 1516              		.cfi_def_cfa_offset 16
 1517              		.cfi_offset 4, -16
 1518              		.cfi_offset 5, -12
 1519              		.cfi_offset 6, -8
 1520              		.cfi_offset 14, -4
2665:Generated_Source\PSoC4/CyLib.c **** 
 1521              		.loc 1 2665 0
 1522 0002 0225     		movs	r5, #2
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1523              		.loc 1 2668 0
 1524 0004 1E21     		movs	r1, #30
2665:Generated_Source\PSoC4/CyLib.c **** 
 1525              		.loc 1 2665 0
 1526 0006 0C4C     		ldr	r4, .L121
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1527              		.loc 1 2668 0
 1528 0008 0C4A     		ldr	r2, .L121+4
2665:Generated_Source\PSoC4/CyLib.c **** 
 1529              		.loc 1 2665 0
 1530 000a 2368     		ldr	r3, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 85


 1531              		.loc 1 2668 0
 1532 000c 4000     		lsls	r0, r0, #1
 1533              	.LVL98:
2665:Generated_Source\PSoC4/CyLib.c **** 
 1534              		.loc 1 2665 0
 1535 000e AB43     		bics	r3, r5
 1536 0010 2360     		str	r3, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1537              		.loc 1 2668 0
 1538 0012 1368     		ldr	r3, [r2]
 1539 0014 0840     		ands	r0, r1
 1540 0016 8B43     		bics	r3, r1
 1541 0018 1843     		orrs	r0, r3
 1542 001a 1060     		str	r0, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 1543              		.loc 1 2675 0
 1544 001c FA20     		movs	r0, #250
2672:Generated_Source\PSoC4/CyLib.c **** 
 1545              		.loc 1 2672 0
 1546 001e 1368     		ldr	r3, [r2]
 1547 0020 1D39     		subs	r1, r1, #29
 1548 0022 0B43     		orrs	r3, r1
 1549 0024 1360     		str	r3, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 1550              		.loc 1 2675 0
 1551 0026 8000     		lsls	r0, r0, #2
 1552 0028 FFF7FEFF 		bl	CyDelayUs
 1553              	.LVL99:
 1554              	.LBB16:
 1555              	.LBB17:
2728:Generated_Source\PSoC4/CyLib.c ****     }
 1556              		.loc 1 2728 0
 1557 002c 044B     		ldr	r3, .L121+8
 1558              	.LBE17:
 1559              	.LBE16:
2682:Generated_Source\PSoC4/CyLib.c **** 
 1560              		.loc 1 2682 0
 1561              		@ sp needed
 1562              	.LBB19:
 1563              	.LBB18:
2728:Generated_Source\PSoC4/CyLib.c ****     }
 1564              		.loc 1 2728 0
 1565 002e 1D60     		str	r5, [r3]
 1566              	.LBE18:
 1567              	.LBE19:
2681:Generated_Source\PSoC4/CyLib.c ****     }
 1568              		.loc 1 2681 0
 1569 0030 2368     		ldr	r3, [r4]
 1570 0032 1D43     		orrs	r5, r3
 1571 0034 2560     		str	r5, [r4]
2682:Generated_Source\PSoC4/CyLib.c **** 
 1572              		.loc 1 2682 0
 1573 0036 70BD     		pop	{r4, r5, r6, pc}
 1574              	.L122:
 1575              		.align	2
 1576              	.L121:
 1577 0038 08000B40 		.word	1074462728
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 86


 1578 003c 18000B40 		.word	1074462744
 1579 0040 04000B40 		.word	1074462724
 1580              		.cfi_endproc
 1581              	.LFE13:
 1582              		.size	CySysLvdEnable, .-CySysLvdEnable
 1583              		.global	__aeabi_uidiv
 1584              		.section	.text.CyDelayFreq,"ax",%progbits
 1585              		.align	1
 1586              		.global	CyDelayFreq
 1587              		.code	16
 1588              		.thumb_func
 1589              		.type	CyDelayFreq, %function
 1590              	CyDelayFreq:
 1591              	.LFB35:
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c **** 
3132:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3133:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3134:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3135:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3136:Generated_Source\PSoC4/CyLib.c **** *
3137:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3140:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3141:Generated_Source\PSoC4/CyLib.c **** {
 1592              		.loc 1 3141 0
 1593              		.cfi_startproc
 1594              		@ args = 0, pretend = 0, frame = 0
 1595              		@ frame_needed = 0, uses_anonymous_args = 0
 1596              	.LVL100:
 1597 0000 70B5     		push	{r4, r5, r6, lr}
 1598              		.cfi_def_cfa_offset 16
 1599              		.cfi_offset 4, -16
 1600              		.cfi_offset 5, -12
 1601              		.cfi_offset 6, -8
 1602              		.cfi_offset 14, -4
 1603 0002 0C4C     		ldr	r4, .L126
3142:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1604              		.loc 1 3142 0
 1605 0004 0028     		cmp	r0, #0
 1606 0006 01D0     		beq	.L124
3143:Generated_Source\PSoC4/CyLib.c ****     {
3144:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1607              		.loc 1 3144 0
 1608 0008 2061     		str	r0, [r4, #16]
 1609 000a 01E0     		b	.L125
 1610              	.L124:
3145:Generated_Source\PSoC4/CyLib.c ****     }
3146:Generated_Source\PSoC4/CyLib.c ****     else
3147:Generated_Source\PSoC4/CyLib.c ****     {
3148:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1611              		.loc 1 3148 0
 1612 000c 0A4B     		ldr	r3, .L126+4
 1613 000e 2361     		str	r3, [r4, #16]
 1614              	.L125:
3149:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 87


3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1615              		.loc 1 3151 0
 1616 0010 2569     		ldr	r5, [r4, #16]
 1617 0012 0A4B     		ldr	r3, .L126+8
 1618 0014 0A49     		ldr	r1, .L126+12
 1619 0016 E818     		adds	r0, r5, r3
 1620              	.LVL101:
 1621 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1622              	.LVL102:
3152:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1623              		.loc 1 3152 0
 1624 001c FA21     		movs	r1, #250
 1625 001e 094B     		ldr	r3, .L126+16
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1626              		.loc 1 3151 0
 1627 0020 2073     		strb	r0, [r4, #12]
 1628              		.loc 1 3152 0
 1629 0022 8900     		lsls	r1, r1, #2
 1630 0024 E818     		adds	r0, r5, r3
 1631 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1632              	.LVL103:
 1633 002a A060     		str	r0, [r4, #8]
3153:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1634              		.loc 1 3153 0
 1635 002c C003     		lsls	r0, r0, #15
 1636 002e 6060     		str	r0, [r4, #4]
3154:Generated_Source\PSoC4/CyLib.c **** }
 1637              		.loc 1 3154 0
 1638              		@ sp needed
 1639 0030 70BD     		pop	{r4, r5, r6, pc}
 1640              	.L127:
 1641 0032 C046     		.align	2
 1642              	.L126:
 1643 0034 00000000 		.word	.LANCHOR0
 1644 0038 00366E01 		.word	24000000
 1645 003c 3F420F00 		.word	999999
 1646 0040 40420F00 		.word	1000000
 1647 0044 E7030000 		.word	999
 1648              		.cfi_endproc
 1649              	.LFE35:
 1650              		.size	CyDelayFreq, .-CyDelayFreq
 1651              		.section	.text.CySysTickInit,"ax",%progbits
 1652              		.align	1
 1653              		.global	CySysTickInit
 1654              		.code	16
 1655              		.thumb_func
 1656              		.type	CySysTickInit, %function
 1657              	CySysTickInit:
 1658              	.LFB37:
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** 
3157:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3159:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c **** *
3161:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 88


3162:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3163:Generated_Source\PSoC4/CyLib.c **** *
3164:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default
3165:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact
3166:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3167:Generated_Source\PSoC4/CyLib.c **** *
3168:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3169:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3172:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3173:Generated_Source\PSoC4/CyLib.c **** {
3174:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3175:Generated_Source\PSoC4/CyLib.c ****     {
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3177:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3178:Generated_Source\PSoC4/CyLib.c ****     }
3179:Generated_Source\PSoC4/CyLib.c **** 
3180:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3189:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3190:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3191:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3194:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3195:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3196:Generated_Source\PSoC4/CyLib.c **** *
3197:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3198:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3199:Generated_Source\PSoC4/CyLib.c **** *
3200:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3201:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3202:Generated_Source\PSoC4/CyLib.c **** {
 1659              		.loc 1 3202 0
 1660              		.cfi_startproc
 1661              		@ args = 0, pretend = 0, frame = 0
 1662              		@ frame_needed = 0, uses_anonymous_args = 0
 1663              	.LVL104:
 1664 0000 10B5     		push	{r4, lr}
 1665              		.cfi_def_cfa_offset 8
 1666              		.cfi_offset 4, -8
 1667              		.cfi_offset 14, -4
3203:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3204:Generated_Source\PSoC4/CyLib.c **** 
3205:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3206:Generated_Source\PSoC4/CyLib.c ****     {
3207:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1668              		.loc 1 3207 0
 1669 0002 0024     		movs	r4, #0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 89


 1670              	.LBB30:
 1671              	.LBB31:
 1672              	.LBB32:
3208:Generated_Source\PSoC4/CyLib.c ****     }
3209:Generated_Source\PSoC4/CyLib.c **** 
3210:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3213:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3214:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3217:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3218:Generated_Source\PSoC4/CyLib.c **** }
3219:Generated_Source\PSoC4/CyLib.c **** 
3220:Generated_Source\PSoC4/CyLib.c **** 
3221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3226:Generated_Source\PSoC4/CyLib.c **** *
3227:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3228:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3229:Generated_Source\PSoC4/CyLib.c **** *
3230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3232:Generated_Source\PSoC4/CyLib.c **** {
3233:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3234:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3235:Generated_Source\PSoC4/CyLib.c **** }
3236:Generated_Source\PSoC4/CyLib.c **** 
3237:Generated_Source\PSoC4/CyLib.c **** 
3238:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3239:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3240:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3243:Generated_Source\PSoC4/CyLib.c **** *
3244:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3245:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3246:Generated_Source\PSoC4/CyLib.c **** *
3247:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3248:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3249:Generated_Source\PSoC4/CyLib.c **** {
3250:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
3251:Generated_Source\PSoC4/CyLib.c **** }
3252:Generated_Source\PSoC4/CyLib.c **** 
3253:Generated_Source\PSoC4/CyLib.c **** 
3254:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3255:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3256:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3259:Generated_Source\PSoC4/CyLib.c **** *
3260:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3261:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 90


3262:Generated_Source\PSoC4/CyLib.c **** *
3263:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3264:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3265:Generated_Source\PSoC4/CyLib.c **** {
3266:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
3267:Generated_Source\PSoC4/CyLib.c **** }
3268:Generated_Source\PSoC4/CyLib.c **** 
3269:Generated_Source\PSoC4/CyLib.c **** 
3270:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3271:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3272:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3275:Generated_Source\PSoC4/CyLib.c **** *
3276:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3277:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3278:Generated_Source\PSoC4/CyLib.c **** *
3279:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3280:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3281:Generated_Source\PSoC4/CyLib.c **** {
3282:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
3283:Generated_Source\PSoC4/CyLib.c **** }
3284:Generated_Source\PSoC4/CyLib.c **** 
3285:Generated_Source\PSoC4/CyLib.c **** 
3286:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3287:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3288:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3289:Generated_Source\PSoC4/CyLib.c **** *
3290:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3291:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3292:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3293:Generated_Source\PSoC4/CyLib.c **** *
3294:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3295:Generated_Source\PSoC4/CyLib.c **** *
3296:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3297:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3298:Generated_Source\PSoC4/CyLib.c **** {
3299:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
3300:Generated_Source\PSoC4/CyLib.c **** }
3301:Generated_Source\PSoC4/CyLib.c **** 
3302:Generated_Source\PSoC4/CyLib.c **** 
3303:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3304:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3305:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3306:Generated_Source\PSoC4/CyLib.c **** *
3307:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3308:Generated_Source\PSoC4/CyLib.c **** *
3309:Generated_Source\PSoC4/CyLib.c **** * \return
3310:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3311:Generated_Source\PSoC4/CyLib.c **** *
3312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3313:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3314:Generated_Source\PSoC4/CyLib.c **** {
3315:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
3316:Generated_Source\PSoC4/CyLib.c **** }
3317:Generated_Source\PSoC4/CyLib.c **** 
3318:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 91


3319:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3320:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3321:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3322:Generated_Source\PSoC4/CyLib.c **** *
3323:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3324:Generated_Source\PSoC4/CyLib.c **** *
3325:Generated_Source\PSoC4/CyLib.c **** * \return
3326:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3327:Generated_Source\PSoC4/CyLib.c **** *
3328:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3329:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3330:Generated_Source\PSoC4/CyLib.c **** {
3331:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
3332:Generated_Source\PSoC4/CyLib.c **** }
3333:Generated_Source\PSoC4/CyLib.c **** 
3334:Generated_Source\PSoC4/CyLib.c **** 
3335:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3336:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3337:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3338:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3339:Generated_Source\PSoC4/CyLib.c ****     *
3340:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3341:Generated_Source\PSoC4/CyLib.c ****     *
3342:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3343:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3344:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3345:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3346:Generated_Source\PSoC4/CyLib.c ****     *
3347:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change
3348:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be
3349:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3352:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3355:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3356:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3357:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3358:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3359:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3360:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3361:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3362:Generated_Source\PSoC4/CyLib.c ****     {
3363:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
3364:Generated_Source\PSoC4/CyLib.c ****         {
3365:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1673              		.loc 1 3365 0
 1674 0004 0421     		movs	r1, #4
 1675              	.LBE32:
 1676              	.LBE31:
 1677              	.LBE30:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1678              		.loc 1 3207 0
 1679 0006 0C4B     		ldr	r3, .L129
 1680              	.LBB37:
 1681              	.LBB38:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 92


2834:Generated_Source\PSoC4/CyLib.c **** 
 1682              		.loc 1 2834 0
 1683 0008 0C4A     		ldr	r2, .L129+4
 1684              	.LBE38:
 1685              	.LBE37:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1686              		.loc 1 3207 0
 1687 000a 1C60     		str	r4, [r3]
 1688              	.LVL105:
 1689 000c 1C61     		str	r4, [r3, #16]
 1690 000e 5C60     		str	r4, [r3, #4]
 1691              	.LVL106:
 1692 0010 9C60     		str	r4, [r3, #8]
 1693              	.LVL107:
 1694 0012 DC60     		str	r4, [r3, #12]
 1695              	.LVL108:
 1696              	.LBB41:
 1697              	.LBB39:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1698              		.loc 1 2834 0
 1699 0014 0A4B     		ldr	r3, .L129+8
 1700              	.LVL109:
 1701              	.LBE39:
 1702              	.LBE41:
3218:Generated_Source\PSoC4/CyLib.c **** 
 1703              		.loc 1 3218 0
 1704              		@ sp needed
 1705              	.LBB42:
 1706              	.LBB40:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1707              		.loc 1 2834 0
 1708 0016 1A60     		str	r2, [r3]
 1709              	.LVL110:
 1710              	.LBE40:
 1711              	.LBE42:
 1712              	.LBB43:
 1713              	.LBB35:
 1714              	.LBB33:
 1715              		.loc 1 3365 0
 1716 0018 0A4A     		ldr	r2, .L129+12
 1717 001a 1368     		ldr	r3, [r2]
 1718 001c 0B43     		orrs	r3, r1
 1719              	.LBE33:
 1720              	.LBE35:
 1721              	.LBE43:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1722              		.loc 1 3216 0
 1723 001e FA21     		movs	r1, #250
 1724              	.LBB44:
 1725              	.LBB36:
 1726              	.LBB34:
 1727              		.loc 1 3365 0
 1728 0020 1360     		str	r3, [r2]
 1729              	.LVL111:
 1730              	.LBE34:
 1731              	.LBE36:
 1732              	.LBE44:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 93


3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1733              		.loc 1 3216 0
 1734 0022 094B     		ldr	r3, .L129+16
 1735 0024 8900     		lsls	r1, r1, #2
 1736 0026 1869     		ldr	r0, [r3, #16]
 1737 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1738              	.LVL112:
 1739              	.LBB45:
 1740              	.LBB46:
3299:Generated_Source\PSoC4/CyLib.c **** }
 1741              		.loc 1 3299 0
 1742 002c 074B     		ldr	r3, .L129+20
 1743 002e 1860     		str	r0, [r3]
 1744              	.LVL113:
 1745              	.LBE46:
 1746              	.LBE45:
 1747              	.LBB47:
 1748              	.LBB48:
3366:Generated_Source\PSoC4/CyLib.c ****         }
3367:Generated_Source\PSoC4/CyLib.c ****         else
3368:Generated_Source\PSoC4/CyLib.c ****         {
3369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
3370:Generated_Source\PSoC4/CyLib.c ****         }
3371:Generated_Source\PSoC4/CyLib.c ****     }
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3376:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c ****     *
3378:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3379:Generated_Source\PSoC4/CyLib.c ****     *
3380:Generated_Source\PSoC4/CyLib.c ****     *  \return
3381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3382:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3383:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3384:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3385:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3386:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3387:Generated_Source\PSoC4/CyLib.c ****     {
3388:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
3389:Generated_Source\PSoC4/CyLib.c ****     }
3390:Generated_Source\PSoC4/CyLib.c **** 
3391:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3392:Generated_Source\PSoC4/CyLib.c **** 
3393:Generated_Source\PSoC4/CyLib.c **** 
3394:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3395:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3396:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3397:Generated_Source\PSoC4/CyLib.c **** *
3398:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3399:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3400:Generated_Source\PSoC4/CyLib.c **** *
3401:Generated_Source\PSoC4/CyLib.c **** * \return
3402:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3403:Generated_Source\PSoC4/CyLib.c **** *
3404:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 94


3405:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3406:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3407:Generated_Source\PSoC4/CyLib.c **** *
3408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3409:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3410:Generated_Source\PSoC4/CyLib.c **** {
3411:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
3412:Generated_Source\PSoC4/CyLib.c **** }
3413:Generated_Source\PSoC4/CyLib.c **** 
3414:Generated_Source\PSoC4/CyLib.c **** 
3415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3417:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3420:Generated_Source\PSoC4/CyLib.c **** *
3421:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3422:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3423:Generated_Source\PSoC4/CyLib.c **** {
3424:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1749              		.loc 1 3424 0
 1750 0030 074B     		ldr	r3, .L129+24
 1751 0032 1C60     		str	r4, [r3]
 1752              	.LBE48:
 1753              	.LBE47:
3218:Generated_Source\PSoC4/CyLib.c **** 
 1754              		.loc 1 3218 0
 1755 0034 10BD     		pop	{r4, pc}
 1756              	.L130:
 1757 0036 C046     		.align	2
 1758              	.L129:
 1759 0038 00000000 		.word	.LANCHOR2
 1760 003c 00000000 		.word	CySysTickServiceCallbacks
 1761 0040 3C000020 		.word	536870972
 1762 0044 10E000E0 		.word	-536813552
 1763 0048 00000000 		.word	.LANCHOR0
 1764 004c 14E000E0 		.word	-536813548
 1765 0050 18E000E0 		.word	-536813544
 1766              		.cfi_endproc
 1767              	.LFE37:
 1768              		.size	CySysTickInit, .-CySysTickInit
 1769              		.section	.text.CySysTickStop,"ax",%progbits
 1770              		.align	1
 1771              		.global	CySysTickStop
 1772              		.code	16
 1773              		.thumb_func
 1774              		.type	CySysTickStop, %function
 1775              	CySysTickStop:
 1776              	.LFB39:
3249:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1777              		.loc 1 3249 0
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 0
 1780              		@ frame_needed = 0, uses_anonymous_args = 0
 1781              		@ link register save eliminated.
3250:Generated_Source\PSoC4/CyLib.c **** }
 1782              		.loc 1 3250 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 95


 1783 0000 0121     		movs	r1, #1
 1784 0002 024A     		ldr	r2, .L132
3251:Generated_Source\PSoC4/CyLib.c **** 
 1785              		.loc 1 3251 0
 1786              		@ sp needed
3250:Generated_Source\PSoC4/CyLib.c **** }
 1787              		.loc 1 3250 0
 1788 0004 1368     		ldr	r3, [r2]
 1789 0006 8B43     		bics	r3, r1
 1790 0008 1360     		str	r3, [r2]
3251:Generated_Source\PSoC4/CyLib.c **** 
 1791              		.loc 1 3251 0
 1792 000a 7047     		bx	lr
 1793              	.L133:
 1794              		.align	2
 1795              	.L132:
 1796 000c 10E000E0 		.word	-536813552
 1797              		.cfi_endproc
 1798              	.LFE39:
 1799              		.size	CySysTickStop, .-CySysTickStop
 1800              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1801              		.align	1
 1802              		.global	CySysTickEnableInterrupt
 1803              		.code	16
 1804              		.thumb_func
 1805              		.type	CySysTickEnableInterrupt, %function
 1806              	CySysTickEnableInterrupt:
 1807              	.LFB40:
3265:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1808              		.loc 1 3265 0
 1809              		.cfi_startproc
 1810              		@ args = 0, pretend = 0, frame = 0
 1811              		@ frame_needed = 0, uses_anonymous_args = 0
 1812              		@ link register save eliminated.
3266:Generated_Source\PSoC4/CyLib.c **** }
 1813              		.loc 1 3266 0
 1814 0000 0221     		movs	r1, #2
 1815 0002 024A     		ldr	r2, .L135
3267:Generated_Source\PSoC4/CyLib.c **** 
 1816              		.loc 1 3267 0
 1817              		@ sp needed
3266:Generated_Source\PSoC4/CyLib.c **** }
 1818              		.loc 1 3266 0
 1819 0004 1368     		ldr	r3, [r2]
 1820 0006 0B43     		orrs	r3, r1
 1821 0008 1360     		str	r3, [r2]
3267:Generated_Source\PSoC4/CyLib.c **** 
 1822              		.loc 1 3267 0
 1823 000a 7047     		bx	lr
 1824              	.L136:
 1825              		.align	2
 1826              	.L135:
 1827 000c 10E000E0 		.word	-536813552
 1828              		.cfi_endproc
 1829              	.LFE40:
 1830              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1831              		.section	.text.CySysTickEnable,"ax",%progbits
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 96


 1832              		.align	1
 1833              		.global	CySysTickEnable
 1834              		.code	16
 1835              		.thumb_func
 1836              		.type	CySysTickEnable, %function
 1837              	CySysTickEnable:
 1838              	.LFB38:
3232:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1839              		.loc 1 3232 0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 0
 1842              		@ frame_needed = 0, uses_anonymous_args = 0
 1843 0000 10B5     		push	{r4, lr}
 1844              		.cfi_def_cfa_offset 8
 1845              		.cfi_offset 4, -8
 1846              		.cfi_offset 14, -4
3233:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1847              		.loc 1 3233 0
 1848 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1849              	.LVL114:
3234:Generated_Source\PSoC4/CyLib.c **** }
 1850              		.loc 1 3234 0
 1851 0006 0121     		movs	r1, #1
 1852 0008 024A     		ldr	r2, .L138
3235:Generated_Source\PSoC4/CyLib.c **** 
 1853              		.loc 1 3235 0
 1854              		@ sp needed
3234:Generated_Source\PSoC4/CyLib.c **** }
 1855              		.loc 1 3234 0
 1856 000a 1368     		ldr	r3, [r2]
 1857 000c 0B43     		orrs	r3, r1
 1858 000e 1360     		str	r3, [r2]
3235:Generated_Source\PSoC4/CyLib.c **** 
 1859              		.loc 1 3235 0
 1860 0010 10BD     		pop	{r4, pc}
 1861              	.L139:
 1862 0012 C046     		.align	2
 1863              	.L138:
 1864 0014 10E000E0 		.word	-536813552
 1865              		.cfi_endproc
 1866              	.LFE38:
 1867              		.size	CySysTickEnable, .-CySysTickEnable
 1868              		.section	.text.CySysTickStart,"ax",%progbits
 1869              		.align	1
 1870              		.global	CySysTickStart
 1871              		.code	16
 1872              		.thumb_func
 1873              		.type	CySysTickStart, %function
 1874              	CySysTickStart:
 1875              	.LFB36:
3173:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1876              		.loc 1 3173 0
 1877              		.cfi_startproc
 1878              		@ args = 0, pretend = 0, frame = 0
 1879              		@ frame_needed = 0, uses_anonymous_args = 0
 1880 0000 10B5     		push	{r4, lr}
 1881              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 97


 1882              		.cfi_offset 4, -8
 1883              		.cfi_offset 14, -4
3174:Generated_Source\PSoC4/CyLib.c ****     {
 1884              		.loc 1 3174 0
 1885 0002 054C     		ldr	r4, .L142
 1886 0004 6369     		ldr	r3, [r4, #20]
 1887 0006 002B     		cmp	r3, #0
 1888 0008 03D1     		bne	.L141
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1889              		.loc 1 3176 0
 1890 000a FFF7FEFF 		bl	CySysTickInit
 1891              	.LVL115:
3177:Generated_Source\PSoC4/CyLib.c ****     }
 1892              		.loc 1 3177 0
 1893 000e 0123     		movs	r3, #1
 1894 0010 6361     		str	r3, [r4, #20]
 1895              	.L141:
3180:Generated_Source\PSoC4/CyLib.c **** }
 1896              		.loc 1 3180 0
 1897 0012 FFF7FEFF 		bl	CySysTickEnable
 1898              	.LVL116:
3181:Generated_Source\PSoC4/CyLib.c **** 
 1899              		.loc 1 3181 0
 1900              		@ sp needed
 1901 0016 10BD     		pop	{r4, pc}
 1902              	.L143:
 1903              		.align	2
 1904              	.L142:
 1905 0018 00000000 		.word	.LANCHOR2
 1906              		.cfi_endproc
 1907              	.LFE36:
 1908              		.size	CySysTickStart, .-CySysTickStart
 1909              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1910              		.align	1
 1911              		.global	CySysTickDisableInterrupt
 1912              		.code	16
 1913              		.thumb_func
 1914              		.type	CySysTickDisableInterrupt, %function
 1915              	CySysTickDisableInterrupt:
 1916              	.LFB41:
3281:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1917              		.loc 1 3281 0
 1918              		.cfi_startproc
 1919              		@ args = 0, pretend = 0, frame = 0
 1920              		@ frame_needed = 0, uses_anonymous_args = 0
 1921              		@ link register save eliminated.
3282:Generated_Source\PSoC4/CyLib.c **** }
 1922              		.loc 1 3282 0
 1923 0000 0221     		movs	r1, #2
 1924 0002 024A     		ldr	r2, .L145
3283:Generated_Source\PSoC4/CyLib.c **** 
 1925              		.loc 1 3283 0
 1926              		@ sp needed
3282:Generated_Source\PSoC4/CyLib.c **** }
 1927              		.loc 1 3282 0
 1928 0004 1368     		ldr	r3, [r2]
 1929 0006 8B43     		bics	r3, r1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 98


 1930 0008 1360     		str	r3, [r2]
3283:Generated_Source\PSoC4/CyLib.c **** 
 1931              		.loc 1 3283 0
 1932 000a 7047     		bx	lr
 1933              	.L146:
 1934              		.align	2
 1935              	.L145:
 1936 000c 10E000E0 		.word	-536813552
 1937              		.cfi_endproc
 1938              	.LFE41:
 1939              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1940              		.section	.text.CySysTickSetReload,"ax",%progbits
 1941              		.align	1
 1942              		.global	CySysTickSetReload
 1943              		.code	16
 1944              		.thumb_func
 1945              		.type	CySysTickSetReload, %function
 1946              	CySysTickSetReload:
 1947              	.LFB42:
3298:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1948              		.loc 1 3298 0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 0, uses_anonymous_args = 0
 1952              		@ link register save eliminated.
 1953              	.LVL117:
3299:Generated_Source\PSoC4/CyLib.c **** }
 1954              		.loc 1 3299 0
 1955 0000 024B     		ldr	r3, .L148
 1956 0002 0002     		lsls	r0, r0, #8
 1957              	.LVL118:
 1958 0004 000A     		lsrs	r0, r0, #8
 1959 0006 1860     		str	r0, [r3]
3300:Generated_Source\PSoC4/CyLib.c **** 
 1960              		.loc 1 3300 0
 1961              		@ sp needed
 1962 0008 7047     		bx	lr
 1963              	.L149:
 1964 000a C046     		.align	2
 1965              	.L148:
 1966 000c 14E000E0 		.word	-536813548
 1967              		.cfi_endproc
 1968              	.LFE42:
 1969              		.size	CySysTickSetReload, .-CySysTickSetReload
 1970              		.section	.text.CySysTickGetReload,"ax",%progbits
 1971              		.align	1
 1972              		.global	CySysTickGetReload
 1973              		.code	16
 1974              		.thumb_func
 1975              		.type	CySysTickGetReload, %function
 1976              	CySysTickGetReload:
 1977              	.LFB43:
3314:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1978              		.loc 1 3314 0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 0
 1981              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 99


 1982              		@ link register save eliminated.
3315:Generated_Source\PSoC4/CyLib.c **** }
 1983              		.loc 1 3315 0
 1984 0000 024B     		ldr	r3, .L151
3316:Generated_Source\PSoC4/CyLib.c **** 
 1985              		.loc 1 3316 0
 1986              		@ sp needed
3315:Generated_Source\PSoC4/CyLib.c **** }
 1987              		.loc 1 3315 0
 1988 0002 1868     		ldr	r0, [r3]
 1989 0004 0002     		lsls	r0, r0, #8
 1990 0006 000A     		lsrs	r0, r0, #8
3316:Generated_Source\PSoC4/CyLib.c **** 
 1991              		.loc 1 3316 0
 1992 0008 7047     		bx	lr
 1993              	.L152:
 1994 000a C046     		.align	2
 1995              	.L151:
 1996 000c 14E000E0 		.word	-536813548
 1997              		.cfi_endproc
 1998              	.LFE43:
 1999              		.size	CySysTickGetReload, .-CySysTickGetReload
 2000              		.section	.text.CySysTickGetValue,"ax",%progbits
 2001              		.align	1
 2002              		.global	CySysTickGetValue
 2003              		.code	16
 2004              		.thumb_func
 2005              		.type	CySysTickGetValue, %function
 2006              	CySysTickGetValue:
 2007              	.LFB44:
3330:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2008              		.loc 1 3330 0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
 2012              		@ link register save eliminated.
3331:Generated_Source\PSoC4/CyLib.c **** }
 2013              		.loc 1 3331 0
 2014 0000 024B     		ldr	r3, .L154
3332:Generated_Source\PSoC4/CyLib.c **** 
 2015              		.loc 1 3332 0
 2016              		@ sp needed
3331:Generated_Source\PSoC4/CyLib.c **** }
 2017              		.loc 1 3331 0
 2018 0002 1868     		ldr	r0, [r3]
 2019 0004 0002     		lsls	r0, r0, #8
 2020 0006 000A     		lsrs	r0, r0, #8
3332:Generated_Source\PSoC4/CyLib.c **** 
 2021              		.loc 1 3332 0
 2022 0008 7047     		bx	lr
 2023              	.L155:
 2024 000a C046     		.align	2
 2025              	.L154:
 2026 000c 18E000E0 		.word	-536813544
 2027              		.cfi_endproc
 2028              	.LFE44:
 2029              		.size	CySysTickGetValue, .-CySysTickGetValue
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 100


 2030              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2031              		.align	1
 2032              		.global	CySysTickSetClockSource
 2033              		.code	16
 2034              		.thumb_func
 2035              		.type	CySysTickSetClockSource, %function
 2036              	CySysTickSetClockSource:
 2037              	.LFB45:
3362:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2038              		.loc 1 3362 0
 2039              		.cfi_startproc
 2040              		@ args = 0, pretend = 0, frame = 0
 2041              		@ frame_needed = 0, uses_anonymous_args = 0
 2042              		@ link register save eliminated.
 2043              	.LVL119:
 2044 0000 044B     		ldr	r3, .L160
 2045 0002 0421     		movs	r1, #4
 2046              	.LBB51:
 2047              	.LBB52:
3365:Generated_Source\PSoC4/CyLib.c ****         }
 2048              		.loc 1 3365 0
 2049 0004 1A68     		ldr	r2, [r3]
 2050              	.LBE52:
 2051              	.LBE51:
3363:Generated_Source\PSoC4/CyLib.c ****         {
 2052              		.loc 1 3363 0
 2053 0006 0128     		cmp	r0, #1
 2054 0008 01D1     		bne	.L157
 2055              	.LVL120:
 2056              	.LBB54:
 2057              	.LBB53:
3365:Generated_Source\PSoC4/CyLib.c ****         }
 2058              		.loc 1 3365 0
 2059 000a 0A43     		orrs	r2, r1
 2060 000c 00E0     		b	.L159
 2061              	.LVL121:
 2062              	.L157:
 2063              	.LBE53:
 2064              	.LBE54:
3369:Generated_Source\PSoC4/CyLib.c ****         }
 2065              		.loc 1 3369 0
 2066 000e 8A43     		bics	r2, r1
 2067              	.L159:
 2068 0010 1A60     		str	r2, [r3]
3371:Generated_Source\PSoC4/CyLib.c **** 
 2069              		.loc 1 3371 0
 2070              		@ sp needed
 2071 0012 7047     		bx	lr
 2072              	.L161:
 2073              		.align	2
 2074              	.L160:
 2075 0014 10E000E0 		.word	-536813552
 2076              		.cfi_endproc
 2077              	.LFE45:
 2078              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2079              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2080              		.align	1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 101


 2081              		.global	CySysTickGetClockSource
 2082              		.code	16
 2083              		.thumb_func
 2084              		.type	CySysTickGetClockSource, %function
 2085              	CySysTickGetClockSource:
 2086              	.LFB46:
3387:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2087              		.loc 1 3387 0
 2088              		.cfi_startproc
 2089              		@ args = 0, pretend = 0, frame = 0
 2090              		@ frame_needed = 0, uses_anonymous_args = 0
 2091              		@ link register save eliminated.
3388:Generated_Source\PSoC4/CyLib.c ****     }
 2092              		.loc 1 3388 0
 2093 0000 024B     		ldr	r3, .L163
3389:Generated_Source\PSoC4/CyLib.c **** 
 2094              		.loc 1 3389 0
 2095              		@ sp needed
3388:Generated_Source\PSoC4/CyLib.c ****     }
 2096              		.loc 1 3388 0
 2097 0002 1868     		ldr	r0, [r3]
 2098 0004 4007     		lsls	r0, r0, #29
 2099 0006 C00F     		lsrs	r0, r0, #31
3389:Generated_Source\PSoC4/CyLib.c **** 
 2100              		.loc 1 3389 0
 2101 0008 7047     		bx	lr
 2102              	.L164:
 2103 000a C046     		.align	2
 2104              	.L163:
 2105 000c 10E000E0 		.word	-536813552
 2106              		.cfi_endproc
 2107              	.LFE46:
 2108              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2109              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2110              		.align	1
 2111              		.global	CySysTickGetCountFlag
 2112              		.code	16
 2113              		.thumb_func
 2114              		.type	CySysTickGetCountFlag, %function
 2115              	CySysTickGetCountFlag:
 2116              	.LFB47:
3410:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2117              		.loc 1 3410 0
 2118              		.cfi_startproc
 2119              		@ args = 0, pretend = 0, frame = 0
 2120              		@ frame_needed = 0, uses_anonymous_args = 0
 2121              		@ link register save eliminated.
3411:Generated_Source\PSoC4/CyLib.c **** }
 2122              		.loc 1 3411 0
 2123 0000 024B     		ldr	r3, .L166
3412:Generated_Source\PSoC4/CyLib.c **** 
 2124              		.loc 1 3412 0
 2125              		@ sp needed
3411:Generated_Source\PSoC4/CyLib.c **** }
 2126              		.loc 1 3411 0
 2127 0002 1868     		ldr	r0, [r3]
 2128 0004 C003     		lsls	r0, r0, #15
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 102


 2129 0006 C00F     		lsrs	r0, r0, #31
3412:Generated_Source\PSoC4/CyLib.c **** 
 2130              		.loc 1 3412 0
 2131 0008 7047     		bx	lr
 2132              	.L167:
 2133 000a C046     		.align	2
 2134              	.L166:
 2135 000c 10E000E0 		.word	-536813552
 2136              		.cfi_endproc
 2137              	.LFE47:
 2138              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2139              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2140              		.align	1
 2141              		.code	16
 2142              		.thumb_func
 2143              		.type	CySysTickServiceCallbacks, %function
 2144              	CySysTickServiceCallbacks:
 2145              	.LFB51:
3425:Generated_Source\PSoC4/CyLib.c **** }
3426:Generated_Source\PSoC4/CyLib.c **** 
3427:Generated_Source\PSoC4/CyLib.c **** 
3428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3431:Generated_Source\PSoC4/CyLib.c **** *
3432:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3433:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3434:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3435:Generated_Source\PSoC4/CyLib.c **** *
3436:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3437:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3438:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3439:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3440:Generated_Source\PSoC4/CyLib.c **** *  functions.
3441:Generated_Source\PSoC4/CyLib.c **** *
3442:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3443:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3444:Generated_Source\PSoC4/CyLib.c **** *
3445:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3446:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3447:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3448:Generated_Source\PSoC4/CyLib.c **** *
3449:Generated_Source\PSoC4/CyLib.c **** * \return
3450:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3451:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3452:Generated_Source\PSoC4/CyLib.c **** *
3453:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3454:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3455:Generated_Source\PSoC4/CyLib.c **** *
3456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3457:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3458:Generated_Source\PSoC4/CyLib.c **** {
3459:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3460:Generated_Source\PSoC4/CyLib.c **** 
3461:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3462:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3463:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 103


3464:Generated_Source\PSoC4/CyLib.c **** }
3465:Generated_Source\PSoC4/CyLib.c **** 
3466:Generated_Source\PSoC4/CyLib.c **** 
3467:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3468:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3469:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3472:Generated_Source\PSoC4/CyLib.c **** *
3473:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3474:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3475:Generated_Source\PSoC4/CyLib.c **** *
3476:Generated_Source\PSoC4/CyLib.c **** * \return
3477:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3478:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3479:Generated_Source\PSoC4/CyLib.c **** *
3480:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3481:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3482:Generated_Source\PSoC4/CyLib.c **** {
3483:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3484:Generated_Source\PSoC4/CyLib.c **** }
3485:Generated_Source\PSoC4/CyLib.c **** 
3486:Generated_Source\PSoC4/CyLib.c **** 
3487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3490:Generated_Source\PSoC4/CyLib.c **** *
3491:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3492:Generated_Source\PSoC4/CyLib.c **** *
3493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3494:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3495:Generated_Source\PSoC4/CyLib.c **** {
 2146              		.loc 1 3495 0
 2147              		.cfi_startproc
 2148              		@ args = 0, pretend = 0, frame = 0
 2149              		@ frame_needed = 0, uses_anonymous_args = 0
 2150 0000 10B5     		push	{r4, lr}
 2151              		.cfi_def_cfa_offset 8
 2152              		.cfi_offset 4, -8
 2153              		.cfi_offset 14, -4
3496:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3499:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2154              		.loc 1 3499 0
 2155 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2156              	.LVL122:
 2157 0006 0128     		cmp	r0, #1
 2158 0008 08D1     		bne	.L168
 2159 000a 0024     		movs	r4, #0
 2160              	.L171:
 2161              	.LBB57:
3500:Generated_Source\PSoC4/CyLib.c ****     {
3501:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3502:Generated_Source\PSoC4/CyLib.c ****         {
3503:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2162              		.loc 1 3503 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 104


 2163 000c 044B     		ldr	r3, .L177
 2164 000e E358     		ldr	r3, [r4, r3]
 2165 0010 002B     		cmp	r3, #0
 2166 0012 00D0     		beq	.L170
3504:Generated_Source\PSoC4/CyLib.c ****             {
3505:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2167              		.loc 1 3505 0
 2168 0014 9847     		blx	r3
 2169              	.LVL123:
 2170              	.L170:
 2171 0016 0434     		adds	r4, r4, #4
3501:Generated_Source\PSoC4/CyLib.c ****         {
 2172              		.loc 1 3501 0
 2173 0018 142C     		cmp	r4, #20
 2174 001a F7D1     		bne	.L171
 2175              	.L168:
 2176              	.LBE57:
3506:Generated_Source\PSoC4/CyLib.c ****             }
3507:Generated_Source\PSoC4/CyLib.c ****         }
3508:Generated_Source\PSoC4/CyLib.c ****     }
3509:Generated_Source\PSoC4/CyLib.c **** }
 2177              		.loc 1 3509 0
 2178              		@ sp needed
 2179 001c 10BD     		pop	{r4, pc}
 2180              	.L178:
 2181 001e C046     		.align	2
 2182              	.L177:
 2183 0020 00000000 		.word	.LANCHOR2
 2184              		.cfi_endproc
 2185              	.LFE51:
 2186              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2187              		.section	.text.CySysTickClear,"ax",%progbits
 2188              		.align	1
 2189              		.global	CySysTickClear
 2190              		.code	16
 2191              		.thumb_func
 2192              		.type	CySysTickClear, %function
 2193              	CySysTickClear:
 2194              	.LFB48:
3423:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2195              		.loc 1 3423 0
 2196              		.cfi_startproc
 2197              		@ args = 0, pretend = 0, frame = 0
 2198              		@ frame_needed = 0, uses_anonymous_args = 0
 2199              		@ link register save eliminated.
3424:Generated_Source\PSoC4/CyLib.c **** }
 2200              		.loc 1 3424 0
 2201 0000 0022     		movs	r2, #0
 2202 0002 014B     		ldr	r3, .L180
3425:Generated_Source\PSoC4/CyLib.c **** 
 2203              		.loc 1 3425 0
 2204              		@ sp needed
3424:Generated_Source\PSoC4/CyLib.c **** }
 2205              		.loc 1 3424 0
 2206 0004 1A60     		str	r2, [r3]
3425:Generated_Source\PSoC4/CyLib.c **** 
 2207              		.loc 1 3425 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 105


 2208 0006 7047     		bx	lr
 2209              	.L181:
 2210              		.align	2
 2211              	.L180:
 2212 0008 18E000E0 		.word	-536813544
 2213              		.cfi_endproc
 2214              	.LFE48:
 2215              		.size	CySysTickClear, .-CySysTickClear
 2216              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2217              		.align	1
 2218              		.global	CySysTickSetCallback
 2219              		.code	16
 2220              		.thumb_func
 2221              		.type	CySysTickSetCallback, %function
 2222              	CySysTickSetCallback:
 2223              	.LFB49:
3458:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2224              		.loc 1 3458 0
 2225              		.cfi_startproc
 2226              		@ args = 0, pretend = 0, frame = 0
 2227              		@ frame_needed = 0, uses_anonymous_args = 0
 2228              		@ link register save eliminated.
 2229              	.LVL124:
3461:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2230              		.loc 1 3461 0
 2231 0000 024A     		ldr	r2, .L183
 2232 0002 8300     		lsls	r3, r0, #2
 2233 0004 9858     		ldr	r0, [r3, r2]
 2234              	.LVL125:
3464:Generated_Source\PSoC4/CyLib.c **** 
 2235              		.loc 1 3464 0
 2236              		@ sp needed
3462:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2237              		.loc 1 3462 0
 2238 0006 9950     		str	r1, [r3, r2]
3464:Generated_Source\PSoC4/CyLib.c **** 
 2239              		.loc 1 3464 0
 2240 0008 7047     		bx	lr
 2241              	.L184:
 2242 000a C046     		.align	2
 2243              	.L183:
 2244 000c 00000000 		.word	.LANCHOR2
 2245              		.cfi_endproc
 2246              	.LFE49:
 2247              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2248              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2249              		.align	1
 2250              		.global	CySysTickGetCallback
 2251              		.code	16
 2252              		.thumb_func
 2253              		.type	CySysTickGetCallback, %function
 2254              	CySysTickGetCallback:
 2255              	.LFB50:
3482:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2256              		.loc 1 3482 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 106


 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260              		@ link register save eliminated.
 2261              	.LVL126:
3483:Generated_Source\PSoC4/CyLib.c **** }
 2262              		.loc 1 3483 0
 2263 0000 014B     		ldr	r3, .L186
 2264 0002 8000     		lsls	r0, r0, #2
 2265              	.LVL127:
 2266 0004 C058     		ldr	r0, [r0, r3]
3484:Generated_Source\PSoC4/CyLib.c **** 
 2267              		.loc 1 3484 0
 2268              		@ sp needed
 2269 0006 7047     		bx	lr
 2270              	.L187:
 2271              		.align	2
 2272              	.L186:
 2273 0008 00000000 		.word	.LANCHOR2
 2274              		.cfi_endproc
 2275              	.LFE50:
 2276              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2277              		.section	.text.CyGetUniqueId,"ax",%progbits
 2278              		.align	1
 2279              		.global	CyGetUniqueId
 2280              		.code	16
 2281              		.thumb_func
 2282              		.type	CyGetUniqueId, %function
 2283              	CyGetUniqueId:
 2284              	.LFB52:
3510:Generated_Source\PSoC4/CyLib.c **** 
3511:Generated_Source\PSoC4/CyLib.c **** 
3512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3514:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3515:Generated_Source\PSoC4/CyLib.c **** *
3516:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3517:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3518:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3519:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3520:Generated_Source\PSoC4/CyLib.c **** *
3521:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3522:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3523:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3524:Generated_Source\PSoC4/CyLib.c **** *
3525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3526:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3527:Generated_Source\PSoC4/CyLib.c **** {
 2285              		.loc 1 3527 0
 2286              		.cfi_startproc
 2287              		@ args = 0, pretend = 0, frame = 0
 2288              		@ frame_needed = 0, uses_anonymous_args = 0
 2289              		@ link register save eliminated.
 2290              	.LVL128:
3528:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2291              		.loc 1 3529 0
 2292 0000 144B     		ldr	r3, .L189
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 107


3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
3532:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
3533:Generated_Source\PSoC4/CyLib.c **** 
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
3537:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
3538:Generated_Source\PSoC4/CyLib.c **** #else
3539:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3540:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3541:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3542:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3543:Generated_Source\PSoC4/CyLib.c **** 
3544:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3545:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3546:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3547:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3549:Generated_Source\PSoC4/CyLib.c **** }
 2293              		.loc 1 3549 0
 2294              		@ sp needed
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2295              		.loc 1 3529 0
 2296 0002 1A78     		ldrb	r2, [r3]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2297              		.loc 1 3530 0
 2298 0004 144B     		ldr	r3, .L189+4
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2299              		.loc 1 3529 0
 2300 0006 D1B2     		uxtb	r1, r2
 2301 0008 0160     		str	r1, [r0]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2302              		.loc 1 3530 0
 2303 000a 1B78     		ldrb	r3, [r3]
 2304 000c 1B02     		lsls	r3, r3, #8
 2305 000e 0B43     		orrs	r3, r1
 2306 0010 1A00     		movs	r2, r3
 2307 0012 0360     		str	r3, [r0]
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2308              		.loc 1 3531 0
 2309 0014 114B     		ldr	r3, .L189+8
 2310 0016 1B78     		ldrb	r3, [r3]
 2311 0018 1B04     		lsls	r3, r3, #16
 2312 001a 1343     		orrs	r3, r2
3532:Generated_Source\PSoC4/CyLib.c **** 
 2313              		.loc 1 3532 0
 2314 001c 104A     		ldr	r2, .L189+12
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2315              		.loc 1 3531 0
 2316 001e 0360     		str	r3, [r0]
3532:Generated_Source\PSoC4/CyLib.c **** 
 2317              		.loc 1 3532 0
 2318 0020 1278     		ldrb	r2, [r2]
 2319 0022 1206     		lsls	r2, r2, #24
 2320 0024 1343     		orrs	r3, r2
 2321 0026 0360     		str	r3, [r0]
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 108


 2322              		.loc 1 3534 0
 2323 0028 0E4B     		ldr	r3, .L189+16
 2324 002a 1A78     		ldrb	r2, [r3]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2325              		.loc 1 3535 0
 2326 002c 0E4B     		ldr	r3, .L189+20
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2327              		.loc 1 3534 0
 2328 002e D1B2     		uxtb	r1, r2
 2329 0030 4160     		str	r1, [r0, #4]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2330              		.loc 1 3535 0
 2331 0032 1B78     		ldrb	r3, [r3]
 2332 0034 1B02     		lsls	r3, r3, #8
 2333 0036 0B43     		orrs	r3, r1
 2334 0038 1A00     		movs	r2, r3
 2335 003a 4360     		str	r3, [r0, #4]
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2336              		.loc 1 3536 0
 2337 003c 0B4B     		ldr	r3, .L189+24
 2338 003e 1B78     		ldrb	r3, [r3]
 2339 0040 1B04     		lsls	r3, r3, #16
 2340 0042 1343     		orrs	r3, r2
3537:Generated_Source\PSoC4/CyLib.c **** #else
 2341              		.loc 1 3537 0
 2342 0044 0A4A     		ldr	r2, .L189+28
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2343              		.loc 1 3536 0
 2344 0046 4360     		str	r3, [r0, #4]
3537:Generated_Source\PSoC4/CyLib.c **** #else
 2345              		.loc 1 3537 0
 2346 0048 1278     		ldrb	r2, [r2]
 2347 004a 1206     		lsls	r2, r2, #24
 2348 004c 1343     		orrs	r3, r2
 2349 004e 4360     		str	r3, [r0, #4]
 2350              		.loc 1 3549 0
 2351 0050 7047     		bx	lr
 2352              	.L190:
 2353 0052 C046     		.align	2
 2354              	.L189:
 2355 0054 78F2FF0F 		.word	268431992
 2356 0058 79F2FF0F 		.word	268431993
 2357 005c 7AF2FF0F 		.word	268431994
 2358 0060 7BF2FF0F 		.word	268431995
 2359 0064 7CF2FF0F 		.word	268431996
 2360 0068 7DF2FF0F 		.word	268431997
 2361 006c 7EF2FF0F 		.word	268431998
 2362 0070 7FF2FF0F 		.word	268431999
 2363              		.cfi_endproc
 2364              	.LFE52:
 2365              		.size	CyGetUniqueId, .-CyGetUniqueId
 2366              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2367              		.align	1
 2368              		.global	CySysSetRamAccessArbPriority
 2369              		.code	16
 2370              		.thumb_func
 2371              		.type	CySysSetRamAccessArbPriority, %function
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 109


 2372              	CySysSetRamAccessArbPriority:
 2373              	.LFB53:
3550:Generated_Source\PSoC4/CyLib.c **** 
3551:Generated_Source\PSoC4/CyLib.c **** 
3552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3553:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3554:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3555:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3556:Generated_Source\PSoC4/CyLib.c ****     *
3557:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3558:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3559:Generated_Source\PSoC4/CyLib.c ****     *  details.
3560:Generated_Source\PSoC4/CyLib.c ****     *
3561:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3562:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3563:Generated_Source\PSoC4/CyLib.c ****     *
3564:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3565:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3566:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3567:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3568:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3569:Generated_Source\PSoC4/CyLib.c ****     *
3570:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3571:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3572:Generated_Source\PSoC4/CyLib.c ****     {
 2374              		.loc 1 3572 0
 2375              		.cfi_startproc
 2376              		@ args = 0, pretend = 0, frame = 0
 2377              		@ frame_needed = 0, uses_anonymous_args = 0
 2378              		@ link register save eliminated.
 2379              	.LVL129:
3573:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3574:Generated_Source\PSoC4/CyLib.c **** 
3575:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2380              		.loc 1 3575 0
 2381 0000 0549     		ldr	r1, .L192
 2382 0002 064B     		ldr	r3, .L192+4
 2383 0004 0A68     		ldr	r2, [r1]
3576:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2384              		.loc 1 3576 0
 2385 0006 4004     		lsls	r0, r0, #17
 2386              	.LVL130:
3575:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2387              		.loc 1 3575 0
 2388 0008 1340     		ands	r3, r2
 2389              	.LVL131:
 2390              		.loc 1 3576 0
 2391 000a C022     		movs	r2, #192
 2392 000c D202     		lsls	r2, r2, #11
 2393 000e 1040     		ands	r0, r2
 2394 0010 1843     		orrs	r0, r3
 2395              	.LVL132:
3577:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2396              		.loc 1 3577 0
 2397 0012 0860     		str	r0, [r1]
3578:Generated_Source\PSoC4/CyLib.c ****     }
 2398              		.loc 1 3578 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 110


 2399              		@ sp needed
 2400 0014 7047     		bx	lr
 2401              	.L193:
 2402 0016 C046     		.align	2
 2403              	.L192:
 2404 0018 38001040 		.word	1074790456
 2405 001c FFFFF9FF 		.word	-393217
 2406              		.cfi_endproc
 2407              	.LFE53:
 2408              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2409              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2410              		.align	1
 2411              		.global	CySysSetFlashAccessArbPriority
 2412              		.code	16
 2413              		.thumb_func
 2414              		.type	CySysSetFlashAccessArbPriority, %function
 2415              	CySysSetFlashAccessArbPriority:
 2416              	.LFB54:
3579:Generated_Source\PSoC4/CyLib.c **** 
3580:Generated_Source\PSoC4/CyLib.c **** 
3581:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3582:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3583:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3584:Generated_Source\PSoC4/CyLib.c ****     *
3585:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3586:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3587:Generated_Source\PSoC4/CyLib.c ****     *  details.
3588:Generated_Source\PSoC4/CyLib.c ****     *
3589:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3590:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3591:Generated_Source\PSoC4/CyLib.c ****     *
3592:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3593:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3594:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3595:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3596:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3597:Generated_Source\PSoC4/CyLib.c ****     *
3598:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3599:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3600:Generated_Source\PSoC4/CyLib.c ****     {
 2417              		.loc 1 3600 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 0
 2420              		@ frame_needed = 0, uses_anonymous_args = 0
 2421              		@ link register save eliminated.
 2422              	.LVL133:
3601:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3602:Generated_Source\PSoC4/CyLib.c **** 
3603:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2423              		.loc 1 3603 0
 2424 0000 0549     		ldr	r1, .L195
 2425 0002 064B     		ldr	r3, .L195+4
 2426 0004 0A68     		ldr	r2, [r1]
3604:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2427              		.loc 1 3604 0
 2428 0006 4004     		lsls	r0, r0, #17
 2429              	.LVL134:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 111


3603:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2430              		.loc 1 3603 0
 2431 0008 1340     		ands	r3, r2
 2432              	.LVL135:
 2433              		.loc 1 3604 0
 2434 000a C022     		movs	r2, #192
 2435 000c D202     		lsls	r2, r2, #11
 2436 000e 1040     		ands	r0, r2
 2437 0010 1843     		orrs	r0, r3
 2438              	.LVL136:
3605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2439              		.loc 1 3605 0
 2440 0012 0860     		str	r0, [r1]
3606:Generated_Source\PSoC4/CyLib.c ****     }
 2441              		.loc 1 3606 0
 2442              		@ sp needed
 2443 0014 7047     		bx	lr
 2444              	.L196:
 2445 0016 C046     		.align	2
 2446              	.L195:
 2447 0018 30001040 		.word	1074790448
 2448 001c FFFFF9FF 		.word	-393217
 2449              		.cfi_endproc
 2450              	.LFE54:
 2451              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2452              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2453              		.align	1
 2454              		.global	CySysSetDmacAccessArbPriority
 2455              		.code	16
 2456              		.thumb_func
 2457              		.type	CySysSetDmacAccessArbPriority, %function
 2458              	CySysSetDmacAccessArbPriority:
 2459              	.LFB55:
3607:Generated_Source\PSoC4/CyLib.c **** 
3608:Generated_Source\PSoC4/CyLib.c **** 
3609:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3610:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3611:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3612:Generated_Source\PSoC4/CyLib.c ****     *
3613:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3614:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3615:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3616:Generated_Source\PSoC4/CyLib.c ****     *
3617:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3618:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3619:Generated_Source\PSoC4/CyLib.c ****     *
3620:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3621:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3622:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3623:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3624:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3625:Generated_Source\PSoC4/CyLib.c ****     *
3626:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3627:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3628:Generated_Source\PSoC4/CyLib.c ****     {
 2460              		.loc 1 3628 0
 2461              		.cfi_startproc
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 112


 2462              		@ args = 0, pretend = 0, frame = 0
 2463              		@ frame_needed = 0, uses_anonymous_args = 0
 2464              		@ link register save eliminated.
 2465              	.LVL137:
3629:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3630:Generated_Source\PSoC4/CyLib.c **** 
3631:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2466              		.loc 1 3631 0
 2467 0000 0549     		ldr	r1, .L198
 2468 0002 064B     		ldr	r3, .L198+4
 2469 0004 0A68     		ldr	r2, [r1]
3632:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2470              		.loc 1 3632 0
 2471 0006 4004     		lsls	r0, r0, #17
 2472              	.LVL138:
3631:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2473              		.loc 1 3631 0
 2474 0008 1340     		ands	r3, r2
 2475              	.LVL139:
 2476              		.loc 1 3632 0
 2477 000a C022     		movs	r2, #192
 2478 000c D202     		lsls	r2, r2, #11
 2479 000e 1040     		ands	r0, r2
 2480 0010 1843     		orrs	r0, r3
 2481              	.LVL140:
3633:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2482              		.loc 1 3633 0
 2483 0012 0860     		str	r0, [r1]
3634:Generated_Source\PSoC4/CyLib.c ****     }
 2484              		.loc 1 3634 0
 2485              		@ sp needed
 2486 0014 7047     		bx	lr
 2487              	.L199:
 2488 0016 C046     		.align	2
 2489              	.L198:
 2490 0018 3C001040 		.word	1074790460
 2491 001c FFFFF9FF 		.word	-393217
 2492              		.cfi_endproc
 2493              	.LFE55:
 2494              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2495              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2496              		.align	1
 2497              		.global	CySysSetPeripheralAccessArbPriority
 2498              		.code	16
 2499              		.thumb_func
 2500              		.type	CySysSetPeripheralAccessArbPriority, %function
 2501              	CySysSetPeripheralAccessArbPriority:
 2502              	.LFB56:
3635:Generated_Source\PSoC4/CyLib.c **** 
3636:Generated_Source\PSoC4/CyLib.c **** 
3637:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3638:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3639:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3640:Generated_Source\PSoC4/CyLib.c ****     *
3641:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3642:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3643:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 113


3644:Generated_Source\PSoC4/CyLib.c ****     *
3645:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3646:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3647:Generated_Source\PSoC4/CyLib.c ****     *
3648:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3649:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3650:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3651:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3652:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3653:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3654:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3655:Generated_Source\PSoC4/CyLib.c ****     *
3656:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3657:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3658:Generated_Source\PSoC4/CyLib.c ****     {
 2503              		.loc 1 3658 0
 2504              		.cfi_startproc
 2505              		@ args = 0, pretend = 0, frame = 0
 2506              		@ frame_needed = 0, uses_anonymous_args = 0
 2507              		@ link register save eliminated.
 2508              	.LVL141:
3659:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3660:Generated_Source\PSoC4/CyLib.c **** 
3661:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2509              		.loc 1 3661 0
 2510 0000 0028     		cmp	r0, #0
 2511 0002 01D1     		bne	.L201
3662:Generated_Source\PSoC4/CyLib.c ****         {
3663:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2512              		.loc 1 3663 0
 2513 0004 0948     		ldr	r0, .L205
 2514              	.LVL142:
 2515 0006 06E0     		b	.L204
 2516              	.LVL143:
 2517              	.L201:
3664:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3665:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
3666:Generated_Source\PSoC4/CyLib.c ****         } else
3667:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3668:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2518              		.loc 1 3668 0
 2519 0008 0128     		cmp	r0, #1
 2520 000a 01D1     		bne	.L203
3669:Generated_Source\PSoC4/CyLib.c ****         {
3670:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2521              		.loc 1 3670 0
 2522 000c 0848     		ldr	r0, .L205+4
 2523              	.LVL144:
 2524 000e 02E0     		b	.L204
 2525              	.LVL145:
 2526              	.L203:
3671:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3673:Generated_Source\PSoC4/CyLib.c ****         } else
3674:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3675:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3676:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 114


 2527              		.loc 1 3676 0
 2528 0010 0228     		cmp	r0, #2
 2529 0012 09D1     		bne	.L200
3677:Generated_Source\PSoC4/CyLib.c ****         {
3678:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2530              		.loc 1 3678 0
 2531 0014 0748     		ldr	r0, .L205+8
 2532              	.LVL146:
 2533              	.L204:
 2534 0016 0268     		ldr	r2, [r0]
 2535 0018 074B     		ldr	r3, .L205+12
3679:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2536              		.loc 1 3679 0
 2537 001a 4904     		lsls	r1, r1, #17
 2538              	.LVL147:
3678:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2539              		.loc 1 3678 0
 2540 001c 1340     		ands	r3, r2
 2541              	.LVL148:
 2542              		.loc 1 3679 0
 2543 001e C022     		movs	r2, #192
 2544 0020 D202     		lsls	r2, r2, #11
 2545 0022 1140     		ands	r1, r2
 2546 0024 1943     		orrs	r1, r3
 2547              	.LVL149:
3680:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2548              		.loc 1 3680 0
 2549 0026 0160     		str	r1, [r0]
 2550              	.LVL150:
 2551              	.L200:
3681:Generated_Source\PSoC4/CyLib.c ****         } else
3682:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3683:Generated_Source\PSoC4/CyLib.c ****         {
3684:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3685:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3686:Generated_Source\PSoC4/CyLib.c ****         }
3687:Generated_Source\PSoC4/CyLib.c ****     }
 2552              		.loc 1 3687 0
 2553              		@ sp needed
 2554 0028 7047     		bx	lr
 2555              	.L206:
 2556 002a C046     		.align	2
 2557              	.L205:
 2558 002c 00011040 		.word	1074790656
 2559 0030 04011040 		.word	1074790660
 2560 0034 08011040 		.word	1074790664
 2561 0038 FFFFF9FF 		.word	-393217
 2562              		.cfi_endproc
 2563              	.LFE56:
 2564              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2565              		.global	CySysClkPumpConfig
 2566              		.global	cyImoFreqMhz2Reg
 2567              		.global	CySysTickInitVar
 2568              		.global	cydelay32kMs
 2569              		.global	cydelayFreqMhz
 2570              		.global	cydelayFreqKhz
 2571              		.global	cydelayFreqHz
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 115


 2572              		.section	.rodata
 2573              		.set	.LANCHOR1,. + 0
 2574              		.type	cyImoFreqMhz2Reg, %object
 2575              		.size	cyImoFreqMhz2Reg, 46
 2576              	cyImoFreqMhz2Reg:
 2577 0000 03       		.byte	3
 2578 0001 04       		.byte	4
 2579 0002 05       		.byte	5
 2580 0003 06       		.byte	6
 2581 0004 07       		.byte	7
 2582 0005 08       		.byte	8
 2583 0006 09       		.byte	9
 2584 0007 0A       		.byte	10
 2585 0008 0B       		.byte	11
 2586 0009 0C       		.byte	12
 2587 000a 0E       		.byte	14
 2588 000b 0F       		.byte	15
 2589 000c 10       		.byte	16
 2590 000d 11       		.byte	17
 2591 000e 12       		.byte	18
 2592 000f 13       		.byte	19
 2593 0010 14       		.byte	20
 2594 0011 15       		.byte	21
 2595 0012 16       		.byte	22
 2596 0013 17       		.byte	23
 2597 0014 18       		.byte	24
 2598 0015 19       		.byte	25
 2599 0016 1B       		.byte	27
 2600 0017 1C       		.byte	28
 2601 0018 1D       		.byte	29
 2602 0019 1E       		.byte	30
 2603 001a 1F       		.byte	31
 2604 001b 20       		.byte	32
 2605 001c 21       		.byte	33
 2606 001d 22       		.byte	34
 2607 001e 23       		.byte	35
 2608 001f 25       		.byte	37
 2609 0020 26       		.byte	38
 2610 0021 27       		.byte	39
 2611 0022 28       		.byte	40
 2612 0023 29       		.byte	41
 2613 0024 2A       		.byte	42
 2614 0025 2B       		.byte	43
 2615 0026 2E       		.byte	46
 2616 0027 2F       		.byte	47
 2617 0028 30       		.byte	48
 2618 0029 31       		.byte	49
 2619 002a 32       		.byte	50
 2620 002b 33       		.byte	51
 2621 002c 34       		.byte	52
 2622 002d 35       		.byte	53
 2623              		.data
 2624              		.align	2
 2625              		.set	.LANCHOR0,. + 0
 2626              		.type	CySysClkPumpConfig, %object
 2627              		.size	CySysClkPumpConfig, 4
 2628              	CySysClkPumpConfig:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 116


 2629 0000 01000000 		.word	1
 2630              		.type	cydelay32kMs, %object
 2631              		.size	cydelay32kMs, 4
 2632              	cydelay32kMs:
 2633 0004 0000E02E 		.word	786432000
 2634              		.type	cydelayFreqKhz, %object
 2635              		.size	cydelayFreqKhz, 4
 2636              	cydelayFreqKhz:
 2637 0008 C05D0000 		.word	24000
 2638              		.type	cydelayFreqMhz, %object
 2639              		.size	cydelayFreqMhz, 1
 2640              	cydelayFreqMhz:
 2641 000c 18       		.byte	24
 2642 000d 000000   		.space	3
 2643              		.type	cydelayFreqHz, %object
 2644              		.size	cydelayFreqHz, 4
 2645              	cydelayFreqHz:
 2646 0010 00366E01 		.word	24000000
 2647              		.bss
 2648              		.align	2
 2649              		.set	.LANCHOR2,. + 0
 2650              		.type	CySysTickCallbacks, %object
 2651              		.size	CySysTickCallbacks, 20
 2652              	CySysTickCallbacks:
 2653 0000 00000000 		.space	20
 2653      00000000 
 2653      00000000 
 2653      00000000 
 2653      00000000 
 2654              		.type	CySysTickInitVar, %object
 2655              		.size	CySysTickInitVar, 4
 2656              	CySysTickInitVar:
 2657 0014 00000000 		.space	4
 2658              		.text
 2659              	.Letext0:
 2660              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2661              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2662              		.section	.debug_info,"",%progbits
 2663              	.Ldebug_info0:
 2664 0000 6F0D0000 		.4byte	0xd6f
 2665 0004 0400     		.2byte	0x4
 2666 0006 00000000 		.4byte	.Ldebug_abbrev0
 2667 000a 04       		.byte	0x4
 2668 000b 01       		.uleb128 0x1
 2669 000c 10040000 		.4byte	.LASF121
 2670 0010 0C       		.byte	0xc
 2671 0011 EF070000 		.4byte	.LASF122
 2672 0015 7E060000 		.4byte	.LASF123
 2673 0019 70000000 		.4byte	.Ldebug_ranges0+0x70
 2674 001d 00000000 		.4byte	0
 2675 0021 00000000 		.4byte	.Ldebug_line0
 2676 0025 02       		.uleb128 0x2
 2677 0026 01       		.byte	0x1
 2678 0027 06       		.byte	0x6
 2679 0028 0E010000 		.4byte	.LASF0
 2680 002c 02       		.uleb128 0x2
 2681 002d 01       		.byte	0x1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 117


 2682 002e 08       		.byte	0x8
 2683 002f 98050000 		.4byte	.LASF1
 2684 0033 02       		.uleb128 0x2
 2685 0034 02       		.byte	0x2
 2686 0035 05       		.byte	0x5
 2687 0036 AD050000 		.4byte	.LASF2
 2688 003a 02       		.uleb128 0x2
 2689 003b 02       		.byte	0x2
 2690 003c 07       		.byte	0x7
 2691 003d E8020000 		.4byte	.LASF3
 2692 0041 02       		.uleb128 0x2
 2693 0042 04       		.byte	0x4
 2694 0043 05       		.byte	0x5
 2695 0044 4D010000 		.4byte	.LASF4
 2696 0048 02       		.uleb128 0x2
 2697 0049 04       		.byte	0x4
 2698 004a 07       		.byte	0x7
 2699 004b 70020000 		.4byte	.LASF5
 2700 004f 02       		.uleb128 0x2
 2701 0050 08       		.byte	0x8
 2702 0051 05       		.byte	0x5
 2703 0052 00010000 		.4byte	.LASF6
 2704 0056 02       		.uleb128 0x2
 2705 0057 08       		.byte	0x8
 2706 0058 07       		.byte	0x7
 2707 0059 84000000 		.4byte	.LASF7
 2708 005d 03       		.uleb128 0x3
 2709 005e 04       		.byte	0x4
 2710 005f 05       		.byte	0x5
 2711 0060 696E7400 		.ascii	"int\000"
 2712 0064 02       		.uleb128 0x2
 2713 0065 04       		.byte	0x4
 2714 0066 07       		.byte	0x7
 2715 0067 54020000 		.4byte	.LASF8
 2716 006b 04       		.uleb128 0x4
 2717 006c 78010000 		.4byte	.LASF9
 2718 0070 02       		.byte	0x2
 2719 0071 FC01     		.2byte	0x1fc
 2720 0073 2C000000 		.4byte	0x2c
 2721 0077 04       		.uleb128 0x4
 2722 0078 17000000 		.4byte	.LASF10
 2723 007c 02       		.byte	0x2
 2724 007d FD01     		.2byte	0x1fd
 2725 007f 3A000000 		.4byte	0x3a
 2726 0083 04       		.uleb128 0x4
 2727 0084 B8010000 		.4byte	.LASF11
 2728 0088 02       		.byte	0x2
 2729 0089 FE01     		.2byte	0x1fe
 2730 008b 48000000 		.4byte	0x48
 2731 008f 02       		.uleb128 0x2
 2732 0090 04       		.byte	0x4
 2733 0091 04       		.byte	0x4
 2734 0092 FE040000 		.4byte	.LASF12
 2735 0096 02       		.uleb128 0x2
 2736 0097 08       		.byte	0x8
 2737 0098 04       		.byte	0x4
 2738 0099 94010000 		.4byte	.LASF13
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 118


 2739 009d 02       		.uleb128 0x2
 2740 009e 01       		.byte	0x1
 2741 009f 08       		.byte	0x8
 2742 00a0 14060000 		.4byte	.LASF14
 2743 00a4 04       		.uleb128 0x4
 2744 00a5 C4070000 		.4byte	.LASF15
 2745 00a9 02       		.byte	0x2
 2746 00aa 9E02     		.2byte	0x29e
 2747 00ac 48000000 		.4byte	0x48
 2748 00b0 04       		.uleb128 0x4
 2749 00b1 65050000 		.4byte	.LASF16
 2750 00b5 02       		.byte	0x2
 2751 00b6 A602     		.2byte	0x2a6
 2752 00b8 BC000000 		.4byte	0xbc
 2753 00bc 05       		.uleb128 0x5
 2754 00bd 6B000000 		.4byte	0x6b
 2755 00c1 04       		.uleb128 0x4
 2756 00c2 94030000 		.4byte	.LASF17
 2757 00c6 02       		.byte	0x2
 2758 00c7 A802     		.2byte	0x2a8
 2759 00c9 CD000000 		.4byte	0xcd
 2760 00cd 05       		.uleb128 0x5
 2761 00ce 83000000 		.4byte	0x83
 2762 00d2 04       		.uleb128 0x4
 2763 00d3 19060000 		.4byte	.LASF18
 2764 00d7 02       		.byte	0x2
 2765 00d8 B802     		.2byte	0x2b8
 2766 00da DE000000 		.4byte	0xde
 2767 00de 06       		.uleb128 0x6
 2768 00df 04       		.byte	0x4
 2769 00e0 E4000000 		.4byte	0xe4
 2770 00e4 07       		.uleb128 0x7
 2771 00e5 02       		.uleb128 0x2
 2772 00e6 08       		.byte	0x8
 2773 00e7 04       		.byte	0x4
 2774 00e8 FC030000 		.4byte	.LASF19
 2775 00ec 02       		.uleb128 0x2
 2776 00ed 04       		.byte	0x4
 2777 00ee 07       		.byte	0x7
 2778 00ef BD030000 		.4byte	.LASF20
 2779 00f3 04       		.uleb128 0x4
 2780 00f4 29050000 		.4byte	.LASF21
 2781 00f8 03       		.byte	0x3
 2782 00f9 0801     		.2byte	0x108
 2783 00fb DE000000 		.4byte	0xde
 2784 00ff 08       		.uleb128 0x8
 2785 0100 BF010000 		.4byte	.LASF29
 2786 0104 01       		.byte	0x1
 2787 0105 6505     		.2byte	0x565
 2788 0107 83000000 		.4byte	0x83
 2789 010b 01       		.byte	0x1
 2790 010c 1D010000 		.4byte	0x11d
 2791 0110 09       		.uleb128 0x9
 2792 0111 35080000 		.4byte	.LASF22
 2793 0115 01       		.byte	0x1
 2794 0116 6705     		.2byte	0x567
 2795 0118 83000000 		.4byte	0x83
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 119


 2796 011c 00       		.byte	0
 2797 011d 0A       		.uleb128 0xa
 2798 011e A1010000 		.4byte	.LASF23
 2799 0122 01       		.byte	0x1
 2800 0123 A60A     		.2byte	0xaa6
 2801 0125 01       		.byte	0x1
 2802 0126 0B       		.uleb128 0xb
 2803 0127 02030000 		.4byte	.LASF25
 2804 012b 01       		.byte	0x1
 2805 012c 210D     		.2byte	0xd21
 2806 012e 01       		.byte	0x1
 2807 012f 40010000 		.4byte	0x140
 2808 0133 0C       		.uleb128 0xc
 2809 0134 24020000 		.4byte	.LASF27
 2810 0138 01       		.byte	0x1
 2811 0139 210D     		.2byte	0xd21
 2812 013b 83000000 		.4byte	0x83
 2813 013f 00       		.byte	0
 2814 0140 0D       		.uleb128 0xd
 2815 0141 FA050000 		.4byte	.LASF124
 2816 0145 01       		.byte	0x1
 2817 0146 A60D     		.2byte	0xda6
 2818 0148 01       		.byte	0x1
 2819 0149 58010000 		.4byte	0x158
 2820 014d 0E       		.uleb128 0xe
 2821 014e 6900     		.ascii	"i\000"
 2822 0150 01       		.byte	0x1
 2823 0151 A80D     		.2byte	0xda8
 2824 0153 83000000 		.4byte	0x83
 2825 0157 00       		.byte	0
 2826 0158 0A       		.uleb128 0xa
 2827 0159 61020000 		.4byte	.LASF24
 2828 015d 01       		.byte	0x1
 2829 015e 5E0D     		.2byte	0xd5e
 2830 0160 01       		.byte	0x1
 2831 0161 0B       		.uleb128 0xb
 2832 0162 22080000 		.4byte	.LASF26
 2833 0166 01       		.byte	0x1
 2834 0167 E10C     		.2byte	0xce1
 2835 0169 01       		.byte	0x1
 2836 016a 7B010000 		.4byte	0x17b
 2837 016e 0C       		.uleb128 0xc
 2838 016f 1E020000 		.4byte	.LASF28
 2839 0173 01       		.byte	0x1
 2840 0174 E10C     		.2byte	0xce1
 2841 0176 83000000 		.4byte	0x83
 2842 017a 00       		.byte	0
 2843 017b 08       		.uleb128 0x8
 2844 017c 6D030000 		.4byte	.LASF30
 2845 0180 01       		.byte	0x1
 2846 0181 070B     		.2byte	0xb07
 2847 0183 D2000000 		.4byte	0xd2
 2848 0187 01       		.byte	0x1
 2849 0188 BD010000 		.4byte	0x1bd
 2850 018c 0C       		.uleb128 0xc
 2851 018d 29030000 		.4byte	.LASF31
 2852 0191 01       		.byte	0x1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 120


 2853 0192 070B     		.2byte	0xb07
 2854 0194 6B000000 		.4byte	0x6b
 2855 0198 0C       		.uleb128 0xc
 2856 0199 08040000 		.4byte	.LASF32
 2857 019d 01       		.byte	0x1
 2858 019e 070B     		.2byte	0xb07
 2859 01a0 D2000000 		.4byte	0xd2
 2860 01a4 09       		.uleb128 0x9
 2861 01a5 53000000 		.4byte	.LASF33
 2862 01a9 01       		.byte	0x1
 2863 01aa 090B     		.2byte	0xb09
 2864 01ac D2000000 		.4byte	0xd2
 2865 01b0 09       		.uleb128 0x9
 2866 01b1 00000000 		.4byte	.LASF34
 2867 01b5 01       		.byte	0x1
 2868 01b6 0A0B     		.2byte	0xb0a
 2869 01b8 BD010000 		.4byte	0x1bd
 2870 01bc 00       		.byte	0
 2871 01bd 06       		.uleb128 0x6
 2872 01be 04       		.byte	0x4
 2873 01bf D2000000 		.4byte	0xd2
 2874 01c3 0F       		.uleb128 0xf
 2875 01c4 CD070000 		.4byte	.LASF35
 2876 01c8 01       		.byte	0x1
 2877 01c9 69       		.byte	0x69
 2878 01ca 00000000 		.4byte	.LFB2
 2879 01ce 14000000 		.4byte	.LFE2-.LFB2
 2880 01d2 01       		.uleb128 0x1
 2881 01d3 9C       		.byte	0x9c
 2882 01d4 0F       		.uleb128 0xf
 2883 01d5 9D020000 		.4byte	.LASF36
 2884 01d9 01       		.byte	0x1
 2885 01da 8A       		.byte	0x8a
 2886 01db 00000000 		.4byte	.LFB3
 2887 01df 10000000 		.4byte	.LFE3-.LFB3
 2888 01e3 01       		.uleb128 0x1
 2889 01e4 9C       		.byte	0x9c
 2890 01e5 10       		.uleb128 0x10
 2891 01e6 27000000 		.4byte	.LASF39
 2892 01ea 01       		.byte	0x1
 2893 01eb 4802     		.2byte	0x248
 2894 01ed 00000000 		.4byte	.LFB4
 2895 01f1 20000000 		.4byte	.LFE4-.LFB4
 2896 01f5 01       		.uleb128 0x1
 2897 01f6 9C       		.byte	0x9c
 2898 01f7 3E020000 		.4byte	0x23e
 2899 01fb 11       		.uleb128 0x11
 2900 01fc D5050000 		.4byte	.LASF41
 2901 0200 01       		.byte	0x1
 2902 0201 4802     		.2byte	0x248
 2903 0203 83000000 		.4byte	0x83
 2904 0207 00000000 		.4byte	.LLST0
 2905 020b 12       		.uleb128 0x12
 2906 020c 2B010000 		.4byte	.LASF37
 2907 0210 01       		.byte	0x1
 2908 0211 4A02     		.2byte	0x24a
 2909 0213 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 121


 2910 0217 2C000000 		.4byte	.LLST1
 2911 021b 12       		.uleb128 0x12
 2912 021c 1B080000 		.4byte	.LASF38
 2913 0220 01       		.byte	0x1
 2914 0221 4B02     		.2byte	0x24b
 2915 0223 83000000 		.4byte	0x83
 2916 0227 3F000000 		.4byte	.LLST2
 2917 022b 13       		.uleb128 0x13
 2918 022c 08000000 		.4byte	.LVL1
 2919 0230 510D0000 		.4byte	0xd51
 2920 0234 13       		.uleb128 0x13
 2921 0235 1A000000 		.4byte	.LVL4
 2922 0239 5C0D0000 		.4byte	0xd5c
 2923 023d 00       		.byte	0
 2924 023e 10       		.uleb128 0x10
 2925 023f 7F030000 		.4byte	.LASF40
 2926 0243 01       		.byte	0x1
 2927 0244 9502     		.2byte	0x295
 2928 0246 00000000 		.4byte	.LFB5
 2929 024a 34000000 		.4byte	.LFE5-.LFB5
 2930 024e 01       		.uleb128 0x1
 2931 024f 9C       		.byte	0x9c
 2932 0250 63020000 		.4byte	0x263
 2933 0254 14       		.uleb128 0x14
 2934 0255 8D010000 		.4byte	.LASF42
 2935 0259 01       		.byte	0x1
 2936 025a 9502     		.2byte	0x295
 2937 025c 83000000 		.4byte	0x83
 2938 0260 01       		.uleb128 0x1
 2939 0261 50       		.byte	0x50
 2940 0262 00       		.byte	0
 2941 0263 15       		.uleb128 0x15
 2942 0264 DA010000 		.4byte	.LASF49
 2943 0268 01       		.byte	0x1
 2944 0269 BA02     		.2byte	0x2ba
 2945 026b 83000000 		.4byte	0x83
 2946 026f 00000000 		.4byte	.LFB6
 2947 0273 18000000 		.4byte	.LFE6-.LFB6
 2948 0277 01       		.uleb128 0x1
 2949 0278 9C       		.byte	0x9c
 2950 0279 B0020000 		.4byte	0x2b0
 2951 027d 12       		.uleb128 0x12
 2952 027e 2B010000 		.4byte	.LASF37
 2953 0282 01       		.byte	0x1
 2954 0283 BC02     		.2byte	0x2bc
 2955 0285 6B000000 		.4byte	0x6b
 2956 0289 5D000000 		.4byte	.LLST3
 2957 028d 12       		.uleb128 0x12
 2958 028e A6040000 		.4byte	.LASF43
 2959 0292 01       		.byte	0x1
 2960 0293 BD02     		.2byte	0x2bd
 2961 0295 83000000 		.4byte	0x83
 2962 0299 70000000 		.4byte	.LLST4
 2963 029d 13       		.uleb128 0x13
 2964 029e 06000000 		.4byte	.LVL7
 2965 02a2 510D0000 		.4byte	0xd51
 2966 02a6 13       		.uleb128 0x13
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 122


 2967 02a7 0E000000 		.4byte	.LVL9
 2968 02ab 5C0D0000 		.4byte	0xd5c
 2969 02af 00       		.byte	0
 2970 02b0 10       		.uleb128 0x10
 2971 02b1 36060000 		.4byte	.LASF44
 2972 02b5 01       		.byte	0x1
 2973 02b6 F702     		.2byte	0x2f7
 2974 02b8 00000000 		.4byte	.LFB7
 2975 02bc 2C000000 		.4byte	.LFE7-.LFB7
 2976 02c0 01       		.uleb128 0x1
 2977 02c1 9C       		.byte	0x9c
 2978 02c2 F9020000 		.4byte	0x2f9
 2979 02c6 11       		.uleb128 0x11
 2980 02c7 A8070000 		.4byte	.LASF45
 2981 02cb 01       		.byte	0x1
 2982 02cc F702     		.2byte	0x2f7
 2983 02ce 83000000 		.4byte	0x83
 2984 02d2 92000000 		.4byte	.LLST5
 2985 02d6 12       		.uleb128 0x12
 2986 02d7 2B010000 		.4byte	.LASF37
 2987 02db 01       		.byte	0x1
 2988 02dc F902     		.2byte	0x2f9
 2989 02de 6B000000 		.4byte	0x6b
 2990 02e2 BE000000 		.4byte	.LLST6
 2991 02e6 13       		.uleb128 0x13
 2992 02e7 08000000 		.4byte	.LVL12
 2993 02eb 510D0000 		.4byte	0xd51
 2994 02ef 13       		.uleb128 0x13
 2995 02f0 22000000 		.4byte	.LVL14
 2996 02f4 5C0D0000 		.4byte	0xd5c
 2997 02f8 00       		.byte	0
 2998 02f9 16       		.uleb128 0x16
 2999 02fa 62070000 		.4byte	.LASF46
 3000 02fe 01       		.byte	0x1
 3001 02ff 4205     		.2byte	0x542
 3002 0301 00000000 		.4byte	.LFB10
 3003 0305 24000000 		.4byte	.LFE10-.LFB10
 3004 0309 01       		.uleb128 0x1
 3005 030a 9C       		.byte	0x9c
 3006 030b 17       		.uleb128 0x17
 3007 030c FF000000 		.4byte	0xff
 3008 0310 00000000 		.4byte	.LFB11
 3009 0314 10000000 		.4byte	.LFE11-.LFB11
 3010 0318 01       		.uleb128 0x1
 3011 0319 9C       		.byte	0x9c
 3012 031a 28030000 		.4byte	0x328
 3013 031e 18       		.uleb128 0x18
 3014 031f 10010000 		.4byte	0x110
 3015 0323 D1000000 		.4byte	.LLST7
 3016 0327 00       		.byte	0
 3017 0328 10       		.uleb128 0x10
 3018 0329 B0070000 		.4byte	.LASF47
 3019 032d 01       		.byte	0x1
 3020 032e 9405     		.2byte	0x594
 3021 0330 00000000 		.4byte	.LFB12
 3022 0334 30000000 		.4byte	.LFE12-.LFB12
 3023 0338 01       		.uleb128 0x1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 123


 3024 0339 9C       		.byte	0x9c
 3025 033a 71030000 		.4byte	0x371
 3026 033e 11       		.uleb128 0x11
 3027 033f A8070000 		.4byte	.LASF45
 3028 0343 01       		.byte	0x1
 3029 0344 9405     		.2byte	0x594
 3030 0346 83000000 		.4byte	0x83
 3031 034a F3000000 		.4byte	.LLST8
 3032 034e 12       		.uleb128 0x12
 3033 034f 2B010000 		.4byte	.LASF37
 3034 0353 01       		.byte	0x1
 3035 0354 9605     		.2byte	0x596
 3036 0356 6B000000 		.4byte	0x6b
 3037 035a 1F010000 		.4byte	.LLST9
 3038 035e 13       		.uleb128 0x13
 3039 035f 14000000 		.4byte	.LVL18
 3040 0363 510D0000 		.4byte	0xd51
 3041 0367 13       		.uleb128 0x13
 3042 0368 26000000 		.4byte	.LVL20
 3043 036c 5C0D0000 		.4byte	0xd5c
 3044 0370 00       		.byte	0
 3045 0371 16       		.uleb128 0x16
 3046 0372 43070000 		.4byte	.LASF48
 3047 0376 01       		.byte	0x1
 3048 0377 840A     		.2byte	0xa84
 3049 0379 00000000 		.4byte	.LFB14
 3050 037d 20000000 		.4byte	.LFE14-.LFB14
 3051 0381 01       		.uleb128 0x1
 3052 0382 9C       		.byte	0x9c
 3053 0383 19       		.uleb128 0x19
 3054 0384 82020000 		.4byte	.LASF92
 3055 0388 01       		.byte	0x1
 3056 0389 960A     		.2byte	0xa96
 3057 038b 83000000 		.4byte	0x83
 3058 038f 00000000 		.4byte	.LFB15
 3059 0393 10000000 		.4byte	.LFE15-.LFB15
 3060 0397 01       		.uleb128 0x1
 3061 0398 9C       		.byte	0x9c
 3062 0399 1A       		.uleb128 0x1a
 3063 039a 1D010000 		.4byte	0x11d
 3064 039e 00000000 		.4byte	.LFB16
 3065 03a2 0C000000 		.4byte	.LFE16-.LFB16
 3066 03a6 01       		.uleb128 0x1
 3067 03a7 9C       		.byte	0x9c
 3068 03a8 15       		.uleb128 0x15
 3069 03a9 D4020000 		.4byte	.LASF50
 3070 03ad 01       		.byte	0x1
 3071 03ae C00A     		.2byte	0xac0
 3072 03b0 83000000 		.4byte	0x83
 3073 03b4 00000000 		.4byte	.LFB17
 3074 03b8 14000000 		.4byte	.LFE17-.LFB17
 3075 03bc 01       		.uleb128 0x1
 3076 03bd 9C       		.byte	0x9c
 3077 03be E3030000 		.4byte	0x3e3
 3078 03c2 11       		.uleb128 0x11
 3079 03c3 A6050000 		.4byte	.LASF51
 3080 03c7 01       		.byte	0x1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 124


 3081 03c8 C00A     		.2byte	0xac0
 3082 03ca 83000000 		.4byte	0x83
 3083 03ce 32010000 		.4byte	.LLST10
 3084 03d2 12       		.uleb128 0x12
 3085 03d3 A9030000 		.4byte	.LASF52
 3086 03d7 01       		.byte	0x1
 3087 03d8 C20A     		.2byte	0xac2
 3088 03da 83000000 		.4byte	0x83
 3089 03de 50010000 		.4byte	.LLST11
 3090 03e2 00       		.byte	0
 3091 03e3 15       		.uleb128 0x15
 3092 03e4 61000000 		.4byte	.LASF53
 3093 03e8 01       		.byte	0x1
 3094 03e9 D70A     		.2byte	0xad7
 3095 03eb 83000000 		.4byte	0x83
 3096 03ef 00000000 		.4byte	.LFB18
 3097 03f3 10000000 		.4byte	.LFE18-.LFB18
 3098 03f7 01       		.uleb128 0x1
 3099 03f8 9C       		.byte	0x9c
 3100 03f9 0C040000 		.4byte	0x40c
 3101 03fd 1B       		.uleb128 0x1b
 3102 03fe 1E000000 		.4byte	.LASF54
 3103 0402 01       		.byte	0x1
 3104 0403 D90A     		.2byte	0xad9
 3105 0405 83000000 		.4byte	0x83
 3106 0409 01       		.uleb128 0x1
 3107 040a 50       		.byte	0x50
 3108 040b 00       		.byte	0
 3109 040c 10       		.uleb128 0x10
 3110 040d AC000000 		.4byte	.LASF55
 3111 0411 01       		.byte	0x1
 3112 0412 EE0A     		.2byte	0xaee
 3113 0414 00000000 		.4byte	.LFB19
 3114 0418 0C000000 		.4byte	.LFE19-.LFB19
 3115 041c 01       		.uleb128 0x1
 3116 041d 9C       		.byte	0x9c
 3117 041e 31040000 		.4byte	0x431
 3118 0422 14       		.uleb128 0x14
 3119 0423 D5010000 		.4byte	.LASF56
 3120 0427 01       		.byte	0x1
 3121 0428 EE0A     		.2byte	0xaee
 3122 042a 83000000 		.4byte	0x83
 3123 042e 01       		.uleb128 0x1
 3124 042f 50       		.byte	0x50
 3125 0430 00       		.byte	0
 3126 0431 17       		.uleb128 0x17
 3127 0432 7B010000 		.4byte	0x17b
 3128 0436 00000000 		.4byte	.LFB20
 3129 043a 0E000000 		.4byte	.LFE20-.LFB20
 3130 043e 01       		.uleb128 0x1
 3131 043f 9C       		.byte	0x9c
 3132 0440 65040000 		.4byte	0x465
 3133 0444 1C       		.uleb128 0x1c
 3134 0445 8C010000 		.4byte	0x18c
 3135 0449 72010000 		.4byte	.LLST12
 3136 044d 1D       		.uleb128 0x1d
 3137 044e 98010000 		.4byte	0x198
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 125


 3138 0452 01       		.uleb128 0x1
 3139 0453 51       		.byte	0x51
 3140 0454 1E       		.uleb128 0x1e
 3141 0455 A4010000 		.4byte	0x1a4
 3142 0459 01       		.uleb128 0x1
 3143 045a 50       		.byte	0x50
 3144 045b 1F       		.uleb128 0x1f
 3145 045c B0010000 		.4byte	0x1b0
 3146 0460 00000020 		.4byte	0x20000000
 3147 0464 00       		.byte	0
 3148 0465 15       		.uleb128 0x15
 3149 0466 C3050000 		.4byte	.LASF57
 3150 046a 01       		.byte	0x1
 3151 046b 290B     		.2byte	0xb29
 3152 046d D2000000 		.4byte	0xd2
 3153 0471 00000000 		.4byte	.LFB21
 3154 0475 0C000000 		.4byte	.LFE21-.LFB21
 3155 0479 01       		.uleb128 0x1
 3156 047a 9C       		.byte	0x9c
 3157 047b A0040000 		.4byte	0x4a0
 3158 047f 11       		.uleb128 0x11
 3159 0480 29030000 		.4byte	.LASF31
 3160 0484 01       		.byte	0x1
 3161 0485 290B     		.2byte	0xb29
 3162 0487 6B000000 		.4byte	0x6b
 3163 048b 93010000 		.4byte	.LLST13
 3164 048f 20       		.uleb128 0x20
 3165 0490 00000000 		.4byte	.LASF34
 3166 0494 01       		.byte	0x1
 3167 0495 2B0B     		.2byte	0xb2b
 3168 0497 BD010000 		.4byte	0x1bd
 3169 049b 00000020 		.4byte	0x20000000
 3170 049f 00       		.byte	0
 3171 04a0 15       		.uleb128 0x15
 3172 04a1 1A030000 		.4byte	.LASF58
 3173 04a5 01       		.byte	0x1
 3174 04a6 3F0B     		.2byte	0xb3f
 3175 04a8 D2000000 		.4byte	0xd2
 3176 04ac 00000000 		.4byte	.LFB22
 3177 04b0 10000000 		.4byte	.LFE22-.LFB22
 3178 04b4 01       		.uleb128 0x1
 3179 04b5 9C       		.byte	0x9c
 3180 04b6 F7040000 		.4byte	0x4f7
 3181 04ba 11       		.uleb128 0x11
 3182 04bb 29030000 		.4byte	.LASF31
 3183 04bf 01       		.byte	0x1
 3184 04c0 3F0B     		.2byte	0xb3f
 3185 04c2 6B000000 		.4byte	0x6b
 3186 04c6 B4010000 		.4byte	.LLST14
 3187 04ca 14       		.uleb128 0x14
 3188 04cb 08040000 		.4byte	.LASF32
 3189 04cf 01       		.byte	0x1
 3190 04d0 3F0B     		.2byte	0xb3f
 3191 04d2 D2000000 		.4byte	0xd2
 3192 04d6 01       		.uleb128 0x1
 3193 04d7 51       		.byte	0x51
 3194 04d8 1B       		.uleb128 0x1b
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 126


 3195 04d9 53000000 		.4byte	.LASF33
 3196 04dd 01       		.byte	0x1
 3197 04de 410B     		.2byte	0xb41
 3198 04e0 D2000000 		.4byte	0xd2
 3199 04e4 01       		.uleb128 0x1
 3200 04e5 50       		.byte	0x50
 3201 04e6 20       		.uleb128 0x20
 3202 04e7 00000000 		.4byte	.LASF34
 3203 04eb 01       		.byte	0x1
 3204 04ec 420B     		.2byte	0xb42
 3205 04ee BD010000 		.4byte	0x1bd
 3206 04f2 00000020 		.4byte	0x20000000
 3207 04f6 00       		.byte	0
 3208 04f7 15       		.uleb128 0x15
 3209 04f8 3B050000 		.4byte	.LASF59
 3210 04fc 01       		.byte	0x1
 3211 04fd 5B0B     		.2byte	0xb5b
 3212 04ff D2000000 		.4byte	0xd2
 3213 0503 00000000 		.4byte	.LFB23
 3214 0507 10000000 		.4byte	.LFE23-.LFB23
 3215 050b 01       		.uleb128 0x1
 3216 050c 9C       		.byte	0x9c
 3217 050d 32050000 		.4byte	0x532
 3218 0511 11       		.uleb128 0x11
 3219 0512 29030000 		.4byte	.LASF31
 3220 0516 01       		.byte	0x1
 3221 0517 5B0B     		.2byte	0xb5b
 3222 0519 6B000000 		.4byte	0x6b
 3223 051d D5010000 		.4byte	.LLST15
 3224 0521 20       		.uleb128 0x20
 3225 0522 00000000 		.4byte	.LASF34
 3226 0526 01       		.byte	0x1
 3227 0527 5D0B     		.2byte	0xb5d
 3228 0529 BD010000 		.4byte	0x1bd
 3229 052d 00000020 		.4byte	0x20000000
 3230 0531 00       		.byte	0
 3231 0532 10       		.uleb128 0x10
 3232 0533 ED040000 		.4byte	.LASF60
 3233 0537 01       		.byte	0x1
 3234 0538 6E0B     		.2byte	0xb6e
 3235 053a 00000000 		.4byte	.LFB24
 3236 053e 34000000 		.4byte	.LFE24-.LFB24
 3237 0542 01       		.uleb128 0x1
 3238 0543 9C       		.byte	0x9c
 3239 0544 AB050000 		.4byte	0x5ab
 3240 0548 11       		.uleb128 0x11
 3241 0549 29030000 		.4byte	.LASF31
 3242 054d 01       		.byte	0x1
 3243 054e 6E0B     		.2byte	0xb6e
 3244 0550 6B000000 		.4byte	0x6b
 3245 0554 F6010000 		.4byte	.LLST16
 3246 0558 11       		.uleb128 0x11
 3247 0559 30030000 		.4byte	.LASF61
 3248 055d 01       		.byte	0x1
 3249 055e 6E0B     		.2byte	0xb6e
 3250 0560 6B000000 		.4byte	0x6b
 3251 0564 17020000 		.4byte	.LLST17
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 127


 3252 0568 12       		.uleb128 0x12
 3253 0569 2B010000 		.4byte	.LASF37
 3254 056d 01       		.byte	0x1
 3255 056e 700B     		.2byte	0xb70
 3256 0570 6B000000 		.4byte	0x6b
 3257 0574 38020000 		.4byte	.LLST18
 3258 0578 12       		.uleb128 0x12
 3259 0579 9B010000 		.4byte	.LASF62
 3260 057d 01       		.byte	0x1
 3261 057e 710B     		.2byte	0xb71
 3262 0580 83000000 		.4byte	0x83
 3263 0584 4B020000 		.4byte	.LLST19
 3264 0588 12       		.uleb128 0x12
 3265 0589 1E020000 		.4byte	.LASF28
 3266 058d 01       		.byte	0x1
 3267 058e 720B     		.2byte	0xb72
 3268 0590 83000000 		.4byte	0x83
 3269 0594 5E020000 		.4byte	.LLST20
 3270 0598 13       		.uleb128 0x13
 3271 0599 18000000 		.4byte	.LVL39
 3272 059d 510D0000 		.4byte	0xd51
 3273 05a1 13       		.uleb128 0x13
 3274 05a2 2C000000 		.4byte	.LVL43
 3275 05a6 5C0D0000 		.4byte	0xd5c
 3276 05aa 00       		.byte	0
 3277 05ab 15       		.uleb128 0x15
 3278 05ac F2010000 		.4byte	.LASF63
 3279 05b0 01       		.byte	0x1
 3280 05b1 900B     		.2byte	0xb90
 3281 05b3 6B000000 		.4byte	0x6b
 3282 05b7 00000000 		.4byte	.LFB25
 3283 05bb 20000000 		.4byte	.LFE25-.LFB25
 3284 05bf 01       		.uleb128 0x1
 3285 05c0 9C       		.byte	0x9c
 3286 05c1 E6050000 		.4byte	0x5e6
 3287 05c5 11       		.uleb128 0x11
 3288 05c6 29030000 		.4byte	.LASF31
 3289 05ca 01       		.byte	0x1
 3290 05cb 900B     		.2byte	0xb90
 3291 05cd 6B000000 		.4byte	0x6b
 3292 05d1 7C020000 		.4byte	.LLST21
 3293 05d5 12       		.uleb128 0x12
 3294 05d6 30030000 		.4byte	.LASF61
 3295 05da 01       		.byte	0x1
 3296 05db 920B     		.2byte	0xb92
 3297 05dd 6B000000 		.4byte	0x6b
 3298 05e1 9D020000 		.4byte	.LLST22
 3299 05e5 00       		.byte	0
 3300 05e6 10       		.uleb128 0x10
 3301 05e7 B7050000 		.4byte	.LASF64
 3302 05eb 01       		.byte	0x1
 3303 05ec A50B     		.2byte	0xba5
 3304 05ee 00000000 		.4byte	.LFB26
 3305 05f2 14000000 		.4byte	.LFE26-.LFB26
 3306 05f6 01       		.uleb128 0x1
 3307 05f7 9C       		.byte	0x9c
 3308 05f8 0D060000 		.4byte	0x60d
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 128


 3309 05fc 11       		.uleb128 0x11
 3310 05fd 29030000 		.4byte	.LASF31
 3311 0601 01       		.byte	0x1
 3312 0602 A50B     		.2byte	0xba5
 3313 0604 6B000000 		.4byte	0x6b
 3314 0608 BE020000 		.4byte	.LLST23
 3315 060c 00       		.byte	0
 3316 060d 15       		.uleb128 0x15
 3317 060e F2000000 		.4byte	.LASF65
 3318 0612 01       		.byte	0x1
 3319 0613 B70B     		.2byte	0xbb7
 3320 0615 6B000000 		.4byte	0x6b
 3321 0619 00000000 		.4byte	.LFB27
 3322 061d 18000000 		.4byte	.LFE27-.LFB27
 3323 0621 01       		.uleb128 0x1
 3324 0622 9C       		.byte	0x9c
 3325 0623 38060000 		.4byte	0x638
 3326 0627 11       		.uleb128 0x11
 3327 0628 29030000 		.4byte	.LASF31
 3328 062c 01       		.byte	0x1
 3329 062d B70B     		.2byte	0xbb7
 3330 062f 6B000000 		.4byte	0x6b
 3331 0633 DF020000 		.4byte	.LLST24
 3332 0637 00       		.byte	0
 3333 0638 10       		.uleb128 0x10
 3334 0639 56010000 		.4byte	.LASF66
 3335 063d 01       		.byte	0x1
 3336 063e C70B     		.2byte	0xbc7
 3337 0640 00000000 		.4byte	.LFB28
 3338 0644 14000000 		.4byte	.LFE28-.LFB28
 3339 0648 01       		.uleb128 0x1
 3340 0649 9C       		.byte	0x9c
 3341 064a 5F060000 		.4byte	0x65f
 3342 064e 11       		.uleb128 0x11
 3343 064f 29030000 		.4byte	.LASF31
 3344 0653 01       		.byte	0x1
 3345 0654 C70B     		.2byte	0xbc7
 3346 0656 6B000000 		.4byte	0x6b
 3347 065a 00030000 		.4byte	.LLST25
 3348 065e 00       		.byte	0
 3349 065f 10       		.uleb128 0x10
 3350 0660 C4020000 		.4byte	.LASF67
 3351 0664 01       		.byte	0x1
 3352 0665 D50B     		.2byte	0xbd5
 3353 0667 00000000 		.4byte	.LFB29
 3354 066b 14000000 		.4byte	.LFE29-.LFB29
 3355 066f 01       		.uleb128 0x1
 3356 0670 9C       		.byte	0x9c
 3357 0671 86060000 		.4byte	0x686
 3358 0675 11       		.uleb128 0x11
 3359 0676 29030000 		.4byte	.LASF31
 3360 067a 01       		.byte	0x1
 3361 067b D50B     		.2byte	0xbd5
 3362 067d 6B000000 		.4byte	0x6b
 3363 0681 21030000 		.4byte	.LLST26
 3364 0685 00       		.byte	0
 3365 0686 10       		.uleb128 0x10
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 129


 3366 0687 EA030000 		.4byte	.LASF68
 3367 068b 01       		.byte	0x1
 3368 068c E40B     		.2byte	0xbe4
 3369 068e 00000000 		.4byte	.LFB30
 3370 0692 14000000 		.4byte	.LFE30-.LFB30
 3371 0696 01       		.uleb128 0x1
 3372 0697 9C       		.byte	0x9c
 3373 0698 AD060000 		.4byte	0x6ad
 3374 069c 11       		.uleb128 0x11
 3375 069d 29030000 		.4byte	.LASF31
 3376 06a1 01       		.byte	0x1
 3377 06a2 E40B     		.2byte	0xbe4
 3378 06a4 6B000000 		.4byte	0x6b
 3379 06a8 42030000 		.4byte	.LLST27
 3380 06ac 00       		.byte	0
 3381 06ad 10       		.uleb128 0x10
 3382 06ae 74050000 		.4byte	.LASF69
 3383 06b2 01       		.byte	0x1
 3384 06b3 F30B     		.2byte	0xbf3
 3385 06b5 00000000 		.4byte	.LFB31
 3386 06b9 04000000 		.4byte	.LFE31-.LFB31
 3387 06bd 01       		.uleb128 0x1
 3388 06be 9C       		.byte	0x9c
 3389 06bf D2060000 		.4byte	0x6d2
 3390 06c3 14       		.uleb128 0x14
 3391 06c4 A6050000 		.4byte	.LASF51
 3392 06c8 01       		.byte	0x1
 3393 06c9 F30B     		.2byte	0xbf3
 3394 06cb 6B000000 		.4byte	0x6b
 3395 06cf 01       		.uleb128 0x1
 3396 06d0 50       		.byte	0x50
 3397 06d1 00       		.byte	0
 3398 06d2 16       		.uleb128 0x16
 3399 06d3 C9000000 		.4byte	.LASF70
 3400 06d7 01       		.byte	0x1
 3401 06d8 0B0C     		.2byte	0xc0b
 3402 06da 00000000 		.4byte	.LFB32
 3403 06de 18000000 		.4byte	.LFE32-.LFB32
 3404 06e2 01       		.uleb128 0x1
 3405 06e3 9C       		.byte	0x9c
 3406 06e4 10       		.uleb128 0x10
 3407 06e5 09070000 		.4byte	.LASF71
 3408 06e9 01       		.byte	0x1
 3409 06ea 1F0C     		.2byte	0xc1f
 3410 06ec 00000000 		.4byte	.LFB33
 3411 06f0 2C000000 		.4byte	.LFE33-.LFB33
 3412 06f4 01       		.uleb128 0x1
 3413 06f5 9C       		.byte	0x9c
 3414 06f6 1D070000 		.4byte	0x71d
 3415 06fa 11       		.uleb128 0x11
 3416 06fb 4A050000 		.4byte	.LASF72
 3417 06ff 01       		.byte	0x1
 3418 0700 1F0C     		.2byte	0xc1f
 3419 0702 83000000 		.4byte	0x83
 3420 0706 63030000 		.4byte	.LLST28
 3421 070a 13       		.uleb128 0x13
 3422 070b 14000000 		.4byte	.LVL63
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 130


 3423 070f 670D0000 		.4byte	0xd67
 3424 0713 13       		.uleb128 0x13
 3425 0714 22000000 		.4byte	.LVL65
 3426 0718 670D0000 		.4byte	0xd67
 3427 071c 00       		.byte	0
 3428 071d 10       		.uleb128 0x10
 3429 071e F0050000 		.4byte	.LASF73
 3430 0722 01       		.byte	0x1
 3431 0723 360C     		.2byte	0xc36
 3432 0725 00000000 		.4byte	.LFB34
 3433 0729 14000000 		.4byte	.LFE34-.LFB34
 3434 072d 01       		.uleb128 0x1
 3435 072e 9C       		.byte	0x9c
 3436 072f 4D070000 		.4byte	0x74d
 3437 0733 11       		.uleb128 0x11
 3438 0734 0E080000 		.4byte	.LASF74
 3439 0738 01       		.byte	0x1
 3440 0739 360C     		.2byte	0xc36
 3441 073b 77000000 		.4byte	0x77
 3442 073f 81030000 		.4byte	.LLST29
 3443 0743 13       		.uleb128 0x13
 3444 0744 0C000000 		.4byte	.LVL69
 3445 0748 670D0000 		.4byte	0xd67
 3446 074c 00       		.byte	0
 3447 074d 10       		.uleb128 0x10
 3448 074e 39030000 		.4byte	.LASF75
 3449 0752 01       		.byte	0x1
 3450 0753 3103     		.2byte	0x331
 3451 0755 00000000 		.4byte	.LFB8
 3452 0759 24010000 		.4byte	.LFE8-.LFB8
 3453 075d 01       		.uleb128 0x1
 3454 075e 9C       		.byte	0x9c
 3455 075f 17080000 		.4byte	0x817
 3456 0763 11       		.uleb128 0x11
 3457 0764 1A010000 		.4byte	.LASF76
 3458 0768 01       		.byte	0x1
 3459 0769 3103     		.2byte	0x331
 3460 076b 83000000 		.4byte	0x83
 3461 076f A2030000 		.4byte	.LLST30
 3462 0773 12       		.uleb128 0x12
 3463 0774 0F000000 		.4byte	.LASF77
 3464 0778 01       		.byte	0x1
 3465 0779 3703     		.2byte	0x337
 3466 077b 6B000000 		.4byte	0x6b
 3467 077f E1030000 		.4byte	.LLST31
 3468 0783 12       		.uleb128 0x12
 3469 0784 9E040000 		.4byte	.LASF78
 3470 0788 01       		.byte	0x1
 3471 0789 3803     		.2byte	0x338
 3472 078b 6B000000 		.4byte	0x6b
 3473 078f 20040000 		.4byte	.LLST32
 3474 0793 12       		.uleb128 0x12
 3475 0794 DE070000 		.4byte	.LASF79
 3476 0798 01       		.byte	0x1
 3477 0799 3903     		.2byte	0x339
 3478 079b 6B000000 		.4byte	0x6b
 3479 079f 34040000 		.4byte	.LLST33
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 131


 3480 07a3 12       		.uleb128 0x12
 3481 07a4 6F000000 		.4byte	.LASF80
 3482 07a8 01       		.byte	0x1
 3483 07a9 3A03     		.2byte	0x33a
 3484 07ab 6B000000 		.4byte	0x6b
 3485 07af 48040000 		.4byte	.LLST34
 3486 07b3 1B       		.uleb128 0x1b
 3487 07b4 2B010000 		.4byte	.LASF37
 3488 07b8 01       		.byte	0x1
 3489 07b9 4503     		.2byte	0x345
 3490 07bb 6B000000 		.4byte	0x6b
 3491 07bf 02       		.uleb128 0x2
 3492 07c0 91       		.byte	0x91
 3493 07c1 60       		.sleb128 -32
 3494 07c2 13       		.uleb128 0x13
 3495 07c3 0A000000 		.4byte	.LVL71
 3496 07c7 510D0000 		.4byte	0xd51
 3497 07cb 21       		.uleb128 0x21
 3498 07cc 9C000000 		.4byte	.LVL86
 3499 07d0 670D0000 		.4byte	0xd67
 3500 07d4 DE070000 		.4byte	0x7de
 3501 07d8 22       		.uleb128 0x22
 3502 07d9 01       		.uleb128 0x1
 3503 07da 50       		.byte	0x50
 3504 07db 01       		.uleb128 0x1
 3505 07dc 35       		.byte	0x35
 3506 07dd 00       		.byte	0
 3507 07de 21       		.uleb128 0x21
 3508 07df B8000000 		.4byte	.LVL88
 3509 07e3 1D070000 		.4byte	0x71d
 3510 07e7 F1070000 		.4byte	0x7f1
 3511 07eb 22       		.uleb128 0x22
 3512 07ec 01       		.uleb128 0x1
 3513 07ed 50       		.byte	0x50
 3514 07ee 01       		.uleb128 0x1
 3515 07ef 35       		.byte	0x35
 3516 07f0 00       		.byte	0
 3517 07f1 21       		.uleb128 0x21
 3518 07f2 CC000000 		.4byte	.LVL89
 3519 07f6 670D0000 		.4byte	0xd67
 3520 07fa 04080000 		.4byte	0x804
 3521 07fe 22       		.uleb128 0x22
 3522 07ff 01       		.uleb128 0x1
 3523 0800 50       		.byte	0x50
 3524 0801 01       		.uleb128 0x1
 3525 0802 35       		.byte	0x35
 3526 0803 00       		.byte	0
 3527 0804 23       		.uleb128 0x23
 3528 0805 D2000000 		.4byte	.LVL90
 3529 0809 5C0D0000 		.4byte	0xd5c
 3530 080d 22       		.uleb128 0x22
 3531 080e 01       		.uleb128 0x1
 3532 080f 50       		.byte	0x50
 3533 0810 04       		.uleb128 0x4
 3534 0811 91       		.byte	0x91
 3535 0812 60       		.sleb128 -32
 3536 0813 94       		.byte	0x94
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 132


 3537 0814 01       		.byte	0x1
 3538 0815 00       		.byte	0
 3539 0816 00       		.byte	0
 3540 0817 15       		.uleb128 0x15
 3541 0818 DF050000 		.4byte	.LASF81
 3542 081c 01       		.byte	0x1
 3543 081d B104     		.2byte	0x4b1
 3544 081f A4000000 		.4byte	0xa4
 3545 0823 00000000 		.4byte	.LFB9
 3546 0827 58000000 		.4byte	.LFE9-.LFB9
 3547 082b 01       		.uleb128 0x1
 3548 082c 9C       		.byte	0x9c
 3549 082d 86080000 		.4byte	0x886
 3550 0831 11       		.uleb128 0x11
 3551 0832 9E070000 		.4byte	.LASF82
 3552 0836 01       		.byte	0x1
 3553 0837 B104     		.2byte	0x4b1
 3554 0839 83000000 		.4byte	0x83
 3555 083d 5B040000 		.4byte	.LLST35
 3556 0841 12       		.uleb128 0x12
 3557 0842 A9030000 		.4byte	.LASF52
 3558 0846 01       		.byte	0x1
 3559 0847 B304     		.2byte	0x4b3
 3560 0849 A4000000 		.4byte	0xa4
 3561 084d 79040000 		.4byte	.LLST36
 3562 0851 24       		.uleb128 0x24
 3563 0852 FF000000 		.4byte	0xff
 3564 0856 30000000 		.4byte	.LBB14
 3565 085a 04000000 		.4byte	.LBE14-.LBB14
 3566 085e 01       		.byte	0x1
 3567 085f 2A05     		.2byte	0x52a
 3568 0861 75080000 		.4byte	0x875
 3569 0865 25       		.uleb128 0x25
 3570 0866 30000000 		.4byte	.LBB15
 3571 086a 04000000 		.4byte	.LBE15-.LBB15
 3572 086e 26       		.uleb128 0x26
 3573 086f 10010000 		.4byte	0x110
 3574 0873 00       		.byte	0
 3575 0874 00       		.byte	0
 3576 0875 23       		.uleb128 0x23
 3577 0876 30000000 		.4byte	.LVL93
 3578 087a 1D070000 		.4byte	0x71d
 3579 087e 22       		.uleb128 0x22
 3580 087f 01       		.uleb128 0x1
 3581 0880 50       		.byte	0x50
 3582 0881 02       		.uleb128 0x2
 3583 0882 75       		.byte	0x75
 3584 0883 00       		.sleb128 0
 3585 0884 00       		.byte	0
 3586 0885 00       		.byte	0
 3587 0886 10       		.uleb128 0x10
 3588 0887 1A050000 		.4byte	.LASF83
 3589 088b 01       		.byte	0x1
 3590 088c 660A     		.2byte	0xa66
 3591 088e 00000000 		.4byte	.LFB13
 3592 0892 44000000 		.4byte	.LFE13-.LFB13
 3593 0896 01       		.uleb128 0x1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 133


 3594 0897 9C       		.byte	0x9c
 3595 0898 CE080000 		.4byte	0x8ce
 3596 089c 11       		.uleb128 0x11
 3597 089d 6A050000 		.4byte	.LASF84
 3598 08a1 01       		.byte	0x1
 3599 08a2 660A     		.2byte	0xa66
 3600 08a4 83000000 		.4byte	0x83
 3601 08a8 98040000 		.4byte	.LLST37
 3602 08ac 27       		.uleb128 0x27
 3603 08ad 1D010000 		.4byte	0x11d
 3604 08b1 2C000000 		.4byte	.LBB16
 3605 08b5 00000000 		.4byte	.Ldebug_ranges0+0
 3606 08b9 01       		.byte	0x1
 3607 08ba 760A     		.2byte	0xa76
 3608 08bc 23       		.uleb128 0x23
 3609 08bd 2C000000 		.4byte	.LVL99
 3610 08c1 1D070000 		.4byte	0x71d
 3611 08c5 22       		.uleb128 0x22
 3612 08c6 01       		.uleb128 0x1
 3613 08c7 50       		.byte	0x50
 3614 08c8 03       		.uleb128 0x3
 3615 08c9 0A       		.byte	0xa
 3616 08ca E803     		.2byte	0x3e8
 3617 08cc 00       		.byte	0
 3618 08cd 00       		.byte	0
 3619 08ce 28       		.uleb128 0x28
 3620 08cf 1F010000 		.4byte	.LASF85
 3621 08d3 01       		.byte	0x1
 3622 08d4 440C     		.2byte	0xc44
 3623 08d6 00000000 		.4byte	.LFB35
 3624 08da 48000000 		.4byte	.LFE35-.LFB35
 3625 08de 01       		.uleb128 0x1
 3626 08df 9C       		.byte	0x9c
 3627 08e0 F5080000 		.4byte	0x8f5
 3628 08e4 11       		.uleb128 0x11
 3629 08e5 1A010000 		.4byte	.LASF76
 3630 08e9 01       		.byte	0x1
 3631 08ea 440C     		.2byte	0xc44
 3632 08ec 83000000 		.4byte	0x83
 3633 08f0 B9040000 		.4byte	.LLST38
 3634 08f4 00       		.byte	0
 3635 08f5 28       		.uleb128 0x28
 3636 08f6 10020000 		.4byte	.LASF86
 3637 08fa 01       		.byte	0x1
 3638 08fb 810C     		.2byte	0xc81
 3639 08fd 00000000 		.4byte	.LFB37
 3640 0901 54000000 		.4byte	.LFE37-.LFB37
 3641 0905 01       		.uleb128 0x1
 3642 0906 9C       		.byte	0x9c
 3643 0907 B4090000 		.4byte	0x9b4
 3644 090b 29       		.uleb128 0x29
 3645 090c 6900     		.ascii	"i\000"
 3646 090e 01       		.byte	0x1
 3647 090f 830C     		.2byte	0xc83
 3648 0911 83000000 		.4byte	0x83
 3649 0915 DA040000 		.4byte	.LLST39
 3650 0919 2A       		.uleb128 0x2a
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 134


 3651 091a 26010000 		.4byte	0x126
 3652 091e 04000000 		.4byte	.LBB30
 3653 0922 18000000 		.4byte	.Ldebug_ranges0+0x18
 3654 0926 01       		.byte	0x1
 3655 0927 8D0C     		.2byte	0xc8d
 3656 0929 46090000 		.4byte	0x946
 3657 092d 1C       		.uleb128 0x1c
 3658 092e 33010000 		.4byte	0x133
 3659 0932 1E050000 		.4byte	.LLST40
 3660 0936 2B       		.uleb128 0x2b
 3661 0937 18000000 		.4byte	.Ldebug_ranges0+0x18
 3662 093b 1C       		.uleb128 0x1c
 3663 093c 33010000 		.4byte	0x133
 3664 0940 1E050000 		.4byte	.LLST40
 3665 0944 00       		.byte	0
 3666 0945 00       		.byte	0
 3667 0946 2A       		.uleb128 0x2a
 3668 0947 7B010000 		.4byte	0x17b
 3669 094b 08000000 		.4byte	.LBB37
 3670 094f 38000000 		.4byte	.Ldebug_ranges0+0x38
 3671 0953 01       		.byte	0x1
 3672 0954 8A0C     		.2byte	0xc8a
 3673 0956 85090000 		.4byte	0x985
 3674 095a 1C       		.uleb128 0x1c
 3675 095b 98010000 		.4byte	0x198
 3676 095f 32050000 		.4byte	.LLST42
 3677 0963 1C       		.uleb128 0x1c
 3678 0964 8C010000 		.4byte	0x18c
 3679 0968 4A050000 		.4byte	.LLST43
 3680 096c 2B       		.uleb128 0x2b
 3681 096d 38000000 		.4byte	.Ldebug_ranges0+0x38
 3682 0971 18       		.uleb128 0x18
 3683 0972 A4010000 		.4byte	0x1a4
 3684 0976 5E050000 		.4byte	.LLST44
 3685 097a 1F       		.uleb128 0x1f
 3686 097b B0010000 		.4byte	0x1b0
 3687 097f 00000020 		.4byte	0x20000000
 3688 0983 00       		.byte	0
 3689 0984 00       		.byte	0
 3690 0985 24       		.uleb128 0x24
 3691 0986 61010000 		.4byte	0x161
 3692 098a 2C000000 		.4byte	.LBB45
 3693 098e 04000000 		.4byte	.LBE45-.LBB45
 3694 0992 01       		.byte	0x1
 3695 0993 900C     		.2byte	0xc90
 3696 0995 A3090000 		.4byte	0x9a3
 3697 0999 1C       		.uleb128 0x1c
 3698 099a 6E010000 		.4byte	0x16e
 3699 099e 81050000 		.4byte	.LLST45
 3700 09a2 00       		.byte	0
 3701 09a3 2C       		.uleb128 0x2c
 3702 09a4 58010000 		.4byte	0x158
 3703 09a8 30000000 		.4byte	.LBB47
 3704 09ac 04000000 		.4byte	.LBE47-.LBB47
 3705 09b0 01       		.byte	0x1
 3706 09b1 910C     		.2byte	0xc91
 3707 09b3 00       		.byte	0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 135


 3708 09b4 16       		.uleb128 0x16
 3709 09b5 90070000 		.4byte	.LASF87
 3710 09b9 01       		.byte	0x1
 3711 09ba B00C     		.2byte	0xcb0
 3712 09bc 00000000 		.4byte	.LFB39
 3713 09c0 10000000 		.4byte	.LFE39-.LFB39
 3714 09c4 01       		.uleb128 0x1
 3715 09c5 9C       		.byte	0x9c
 3716 09c6 16       		.uleb128 0x16
 3717 09c7 D9000000 		.4byte	.LASF88
 3718 09cb 01       		.byte	0x1
 3719 09cc C00C     		.2byte	0xcc0
 3720 09ce 00000000 		.4byte	.LFB40
 3721 09d2 10000000 		.4byte	.LFE40-.LFB40
 3722 09d6 01       		.uleb128 0x1
 3723 09d7 9C       		.byte	0x9c
 3724 09d8 10       		.uleb128 0x10
 3725 09d9 26060000 		.4byte	.LASF89
 3726 09dd 01       		.byte	0x1
 3727 09de 9F0C     		.2byte	0xc9f
 3728 09e0 00000000 		.4byte	.LFB38
 3729 09e4 18000000 		.4byte	.LFE38-.LFB38
 3730 09e8 01       		.uleb128 0x1
 3731 09e9 9C       		.byte	0x9c
 3732 09ea F8090000 		.4byte	0x9f8
 3733 09ee 13       		.uleb128 0x13
 3734 09ef 06000000 		.4byte	.LVL114
 3735 09f3 C6090000 		.4byte	0x9c6
 3736 09f7 00       		.byte	0
 3737 09f8 10       		.uleb128 0x10
 3738 09f9 9A030000 		.4byte	.LASF90
 3739 09fd 01       		.byte	0x1
 3740 09fe 640C     		.2byte	0xc64
 3741 0a00 00000000 		.4byte	.LFB36
 3742 0a04 1C000000 		.4byte	.LFE36-.LFB36
 3743 0a08 01       		.uleb128 0x1
 3744 0a09 9C       		.byte	0x9c
 3745 0a0a 210A0000 		.4byte	0xa21
 3746 0a0e 13       		.uleb128 0x13
 3747 0a0f 0E000000 		.4byte	.LVL115
 3748 0a13 F5080000 		.4byte	0x8f5
 3749 0a17 13       		.uleb128 0x13
 3750 0a18 16000000 		.4byte	.LVL116
 3751 0a1c D8090000 		.4byte	0x9d8
 3752 0a20 00       		.byte	0
 3753 0a21 16       		.uleb128 0x16
 3754 0a22 29070000 		.4byte	.LASF91
 3755 0a26 01       		.byte	0x1
 3756 0a27 D00C     		.2byte	0xcd0
 3757 0a29 00000000 		.4byte	.LFB41
 3758 0a2d 10000000 		.4byte	.LFE41-.LFB41
 3759 0a31 01       		.uleb128 0x1
 3760 0a32 9C       		.byte	0x9c
 3761 0a33 17       		.uleb128 0x17
 3762 0a34 61010000 		.4byte	0x161
 3763 0a38 00000000 		.4byte	.LFB42
 3764 0a3c 10000000 		.4byte	.LFE42-.LFB42
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 136


 3765 0a40 01       		.uleb128 0x1
 3766 0a41 9C       		.byte	0x9c
 3767 0a42 500A0000 		.4byte	0xa50
 3768 0a46 1C       		.uleb128 0x1c
 3769 0a47 6E010000 		.4byte	0x16e
 3770 0a4b 94050000 		.4byte	.LLST46
 3771 0a4f 00       		.byte	0
 3772 0a50 19       		.uleb128 0x19
 3773 0a51 3A010000 		.4byte	.LASF93
 3774 0a55 01       		.byte	0x1
 3775 0a56 F10C     		.2byte	0xcf1
 3776 0a58 83000000 		.4byte	0x83
 3777 0a5c 00000000 		.4byte	.LFB43
 3778 0a60 10000000 		.4byte	.LFE43-.LFB43
 3779 0a64 01       		.uleb128 0x1
 3780 0a65 9C       		.byte	0x9c
 3781 0a66 19       		.uleb128 0x19
 3782 0a67 CD040000 		.4byte	.LASF94
 3783 0a6b 01       		.byte	0x1
 3784 0a6c 010D     		.2byte	0xd01
 3785 0a6e 83000000 		.4byte	0x83
 3786 0a72 00000000 		.4byte	.LFB44
 3787 0a76 10000000 		.4byte	.LFE44-.LFB44
 3788 0a7a 01       		.uleb128 0x1
 3789 0a7b 9C       		.byte	0x9c
 3790 0a7c 17       		.uleb128 0x17
 3791 0a7d 26010000 		.4byte	0x126
 3792 0a81 00000000 		.4byte	.LFB45
 3793 0a85 18000000 		.4byte	.LFE45-.LFB45
 3794 0a89 01       		.uleb128 0x1
 3795 0a8a 9C       		.byte	0x9c
 3796 0a8b A60A0000 		.4byte	0xaa6
 3797 0a8f 1D       		.uleb128 0x1d
 3798 0a90 33010000 		.4byte	0x133
 3799 0a94 01       		.uleb128 0x1
 3800 0a95 50       		.byte	0x50
 3801 0a96 2B       		.uleb128 0x2b
 3802 0a97 58000000 		.4byte	.Ldebug_ranges0+0x58
 3803 0a9b 1C       		.uleb128 0x1c
 3804 0a9c 33010000 		.4byte	0x133
 3805 0aa0 B5050000 		.4byte	.LLST47
 3806 0aa4 00       		.byte	0
 3807 0aa5 00       		.byte	0
 3808 0aa6 19       		.uleb128 0x19
 3809 0aa7 11070000 		.4byte	.LASF95
 3810 0aab 01       		.byte	0x1
 3811 0aac 3A0D     		.2byte	0xd3a
 3812 0aae 83000000 		.4byte	0x83
 3813 0ab2 00000000 		.4byte	.LFB46
 3814 0ab6 10000000 		.4byte	.LFE46-.LFB46
 3815 0aba 01       		.uleb128 0x1
 3816 0abb 9C       		.byte	0x9c
 3817 0abc 19       		.uleb128 0x19
 3818 0abd 3E020000 		.4byte	.LASF96
 3819 0ac1 01       		.byte	0x1
 3820 0ac2 510D     		.2byte	0xd51
 3821 0ac4 83000000 		.4byte	0x83
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 137


 3822 0ac8 00000000 		.4byte	.LFB47
 3823 0acc 10000000 		.4byte	.LFE47-.LFB47
 3824 0ad0 01       		.uleb128 0x1
 3825 0ad1 9C       		.byte	0x9c
 3826 0ad2 2D       		.uleb128 0x2d
 3827 0ad3 40010000 		.4byte	0x140
 3828 0ad7 00000000 		.4byte	.LFB51
 3829 0adb 24000000 		.4byte	.LFE51-.LFB51
 3830 0adf 01       		.uleb128 0x1
 3831 0ae0 9C       		.byte	0x9c
 3832 0ae1 070B0000 		.4byte	0xb07
 3833 0ae5 26       		.uleb128 0x26
 3834 0ae6 4D010000 		.4byte	0x14d
 3835 0aea 2E       		.uleb128 0x2e
 3836 0aeb 0C000000 		.4byte	.LBB57
 3837 0aef 10000000 		.4byte	.LBE57-.LBB57
 3838 0af3 FD0A0000 		.4byte	0xafd
 3839 0af7 26       		.uleb128 0x26
 3840 0af8 4D010000 		.4byte	0x14d
 3841 0afc 00       		.byte	0
 3842 0afd 13       		.uleb128 0x13
 3843 0afe 06000000 		.4byte	.LVL122
 3844 0b02 BC0A0000 		.4byte	0xabc
 3845 0b06 00       		.byte	0
 3846 0b07 1A       		.uleb128 0x1a
 3847 0b08 58010000 		.4byte	0x158
 3848 0b0c 00000000 		.4byte	.LFB48
 3849 0b10 0C000000 		.4byte	.LFE48-.LFB48
 3850 0b14 01       		.uleb128 0x1
 3851 0b15 9C       		.byte	0x9c
 3852 0b16 15       		.uleb128 0x15
 3853 0b17 4D060000 		.4byte	.LASF97
 3854 0b1b 01       		.byte	0x1
 3855 0b1c 810D     		.2byte	0xd81
 3856 0b1e F3000000 		.4byte	0xf3
 3857 0b22 00000000 		.4byte	.LFB49
 3858 0b26 10000000 		.4byte	.LFE49-.LFB49
 3859 0b2a 01       		.uleb128 0x1
 3860 0b2b 9C       		.byte	0x9c
 3861 0b2c 5D0B0000 		.4byte	0xb5d
 3862 0b30 11       		.uleb128 0x11
 3863 0b31 29030000 		.4byte	.LASF31
 3864 0b35 01       		.byte	0x1
 3865 0b36 810D     		.2byte	0xd81
 3866 0b38 83000000 		.4byte	0x83
 3867 0b3c C9050000 		.4byte	.LLST48
 3868 0b40 14       		.uleb128 0x14
 3869 0b41 B3040000 		.4byte	.LASF98
 3870 0b45 01       		.byte	0x1
 3871 0b46 810D     		.2byte	0xd81
 3872 0b48 F3000000 		.4byte	0xf3
 3873 0b4c 01       		.uleb128 0x1
 3874 0b4d 51       		.byte	0x51
 3875 0b4e 1B       		.uleb128 0x1b
 3876 0b4f 5A000000 		.4byte	.LASF99
 3877 0b53 01       		.byte	0x1
 3878 0b54 830D     		.2byte	0xd83
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 138


 3879 0b56 F3000000 		.4byte	0xf3
 3880 0b5a 01       		.uleb128 0x1
 3881 0b5b 50       		.byte	0x50
 3882 0b5c 00       		.byte	0
 3883 0b5d 15       		.uleb128 0x15
 3884 0b5e 63010000 		.4byte	.LASF100
 3885 0b62 01       		.byte	0x1
 3886 0b63 990D     		.2byte	0xd99
 3887 0b65 F3000000 		.4byte	0xf3
 3888 0b69 00000000 		.4byte	.LFB50
 3889 0b6d 0C000000 		.4byte	.LFE50-.LFB50
 3890 0b71 01       		.uleb128 0x1
 3891 0b72 9C       		.byte	0x9c
 3892 0b73 880B0000 		.4byte	0xb88
 3893 0b77 11       		.uleb128 0x11
 3894 0b78 29030000 		.4byte	.LASF31
 3895 0b7c 01       		.byte	0x1
 3896 0b7d 990D     		.2byte	0xd99
 3897 0b7f 83000000 		.4byte	0x83
 3898 0b83 EA050000 		.4byte	.LLST49
 3899 0b87 00       		.byte	0
 3900 0b88 10       		.uleb128 0x10
 3901 0b89 30020000 		.4byte	.LASF101
 3902 0b8d 01       		.byte	0x1
 3903 0b8e C60D     		.2byte	0xdc6
 3904 0b90 00000000 		.4byte	.LFB52
 3905 0b94 74000000 		.4byte	.LFE52-.LFB52
 3906 0b98 01       		.uleb128 0x1
 3907 0b99 9C       		.byte	0x9c
 3908 0b9a AD0B0000 		.4byte	0xbad
 3909 0b9e 14       		.uleb128 0x14
 3910 0b9f 75060000 		.4byte	.LASF102
 3911 0ba3 01       		.byte	0x1
 3912 0ba4 C60D     		.2byte	0xdc6
 3913 0ba6 AD0B0000 		.4byte	0xbad
 3914 0baa 01       		.uleb128 0x1
 3915 0bab 50       		.byte	0x50
 3916 0bac 00       		.byte	0
 3917 0bad 06       		.uleb128 0x6
 3918 0bae 04       		.byte	0x4
 3919 0baf 83000000 		.4byte	0x83
 3920 0bb3 10       		.uleb128 0x10
 3921 0bb4 7B050000 		.4byte	.LASF103
 3922 0bb8 01       		.byte	0x1
 3923 0bb9 F30D     		.2byte	0xdf3
 3924 0bbb 00000000 		.4byte	.LFB53
 3925 0bbf 20000000 		.4byte	.LFE53-.LFB53
 3926 0bc3 01       		.uleb128 0x1
 3927 0bc4 9C       		.byte	0x9c
 3928 0bc5 EA0B0000 		.4byte	0xbea
 3929 0bc9 11       		.uleb128 0x11
 3930 0bca B6030000 		.4byte	.LASF104
 3931 0bce 01       		.byte	0x1
 3932 0bcf F30D     		.2byte	0xdf3
 3933 0bd1 83000000 		.4byte	0x83
 3934 0bd5 0B060000 		.4byte	.LLST50
 3935 0bd9 12       		.uleb128 0x12
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 139


 3936 0bda FB020000 		.4byte	.LASF105
 3937 0bde 01       		.byte	0x1
 3938 0bdf F50D     		.2byte	0xdf5
 3939 0be1 83000000 		.4byte	0x83
 3940 0be5 2C060000 		.4byte	.LLST51
 3941 0be9 00       		.byte	0
 3942 0bea 10       		.uleb128 0x10
 3943 0beb 4E030000 		.4byte	.LASF106
 3944 0bef 01       		.byte	0x1
 3945 0bf0 0F0E     		.2byte	0xe0f
 3946 0bf2 00000000 		.4byte	.LFB54
 3947 0bf6 20000000 		.4byte	.LFE54-.LFB54
 3948 0bfa 01       		.uleb128 0x1
 3949 0bfb 9C       		.byte	0x9c
 3950 0bfc 210C0000 		.4byte	0xc21
 3951 0c00 11       		.uleb128 0x11
 3952 0c01 B6030000 		.4byte	.LASF104
 3953 0c05 01       		.byte	0x1
 3954 0c06 0F0E     		.2byte	0xe0f
 3955 0c08 83000000 		.4byte	0x83
 3956 0c0c 4A060000 		.4byte	.LLST52
 3957 0c10 12       		.uleb128 0x12
 3958 0c11 FB020000 		.4byte	.LASF105
 3959 0c15 01       		.byte	0x1
 3960 0c16 110E     		.2byte	0xe11
 3961 0c18 83000000 		.4byte	0x83
 3962 0c1c 6B060000 		.4byte	.LLST53
 3963 0c20 00       		.byte	0
 3964 0c21 10       		.uleb128 0x10
 3965 0c22 72070000 		.4byte	.LASF107
 3966 0c26 01       		.byte	0x1
 3967 0c27 2B0E     		.2byte	0xe2b
 3968 0c29 00000000 		.4byte	.LFB55
 3969 0c2d 20000000 		.4byte	.LFE55-.LFB55
 3970 0c31 01       		.uleb128 0x1
 3971 0c32 9C       		.byte	0x9c
 3972 0c33 580C0000 		.4byte	0xc58
 3973 0c37 11       		.uleb128 0x11
 3974 0c38 B6030000 		.4byte	.LASF104
 3975 0c3c 01       		.byte	0x1
 3976 0c3d 2B0E     		.2byte	0xe2b
 3977 0c3f 83000000 		.4byte	0x83
 3978 0c43 89060000 		.4byte	.LLST54
 3979 0c47 12       		.uleb128 0x12
 3980 0c48 FB020000 		.4byte	.LASF105
 3981 0c4c 01       		.byte	0x1
 3982 0c4d 2D0E     		.2byte	0xe2d
 3983 0c4f 83000000 		.4byte	0x83
 3984 0c53 AA060000 		.4byte	.LLST55
 3985 0c57 00       		.byte	0
 3986 0c58 10       		.uleb128 0x10
 3987 0c59 C6030000 		.4byte	.LASF108
 3988 0c5d 01       		.byte	0x1
 3989 0c5e 490E     		.2byte	0xe49
 3990 0c60 00000000 		.4byte	.LFB56
 3991 0c64 3C000000 		.4byte	.LFE56-.LFB56
 3992 0c68 01       		.uleb128 0x1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 140


 3993 0c69 9C       		.byte	0x9c
 3994 0c6a 9F0C0000 		.4byte	0xc9f
 3995 0c6e 11       		.uleb128 0x11
 3996 0c6f B9000000 		.4byte	.LASF109
 3997 0c73 01       		.byte	0x1
 3998 0c74 490E     		.2byte	0xe49
 3999 0c76 83000000 		.4byte	0x83
 4000 0c7a C8060000 		.4byte	.LLST56
 4001 0c7e 11       		.uleb128 0x11
 4002 0c7f B6030000 		.4byte	.LASF104
 4003 0c83 01       		.byte	0x1
 4004 0c84 490E     		.2byte	0xe49
 4005 0c86 83000000 		.4byte	0x83
 4006 0c8a 1B070000 		.4byte	.LLST57
 4007 0c8e 12       		.uleb128 0x12
 4008 0c8f FB020000 		.4byte	.LASF105
 4009 0c93 01       		.byte	0x1
 4010 0c94 4B0E     		.2byte	0xe4b
 4011 0c96 83000000 		.4byte	0x83
 4012 0c9a 3C070000 		.4byte	.LLST58
 4013 0c9e 00       		.byte	0
 4014 0c9f 2F       		.uleb128 0x2f
 4015 0ca0 F3000000 		.4byte	0xf3
 4016 0ca4 AF0C0000 		.4byte	0xcaf
 4017 0ca8 30       		.uleb128 0x30
 4018 0ca9 EC000000 		.4byte	0xec
 4019 0cad 04       		.byte	0x4
 4020 0cae 00       		.byte	0
 4021 0caf 31       		.uleb128 0x31
 4022 0cb0 62060000 		.4byte	.LASF110
 4023 0cb4 01       		.byte	0x1
 4024 0cb5 22       		.byte	0x22
 4025 0cb6 9F0C0000 		.4byte	0xc9f
 4026 0cba 05       		.uleb128 0x5
 4027 0cbb 03       		.byte	0x3
 4028 0cbc 00000000 		.4byte	CySysTickCallbacks
 4029 0cc0 32       		.uleb128 0x32
 4030 0cc1 DF040000 		.4byte	.LASF111
 4031 0cc5 01       		.byte	0x1
 4032 0cc6 1B       		.byte	0x1b
 4033 0cc7 83000000 		.4byte	0x83
 4034 0ccb 05       		.uleb128 0x5
 4035 0ccc 03       		.byte	0x3
 4036 0ccd 00000000 		.4byte	cydelayFreqHz
 4037 0cd1 32       		.uleb128 0x32
 4038 0cd2 7E010000 		.4byte	.LASF112
 4039 0cd6 01       		.byte	0x1
 4040 0cd7 1C       		.byte	0x1c
 4041 0cd8 83000000 		.4byte	0x83
 4042 0cdc 05       		.uleb128 0x5
 4043 0cdd 03       		.byte	0x3
 4044 0cde 00000000 		.4byte	cydelayFreqKhz
 4045 0ce2 32       		.uleb128 0x32
 4046 0ce3 53070000 		.4byte	.LASF113
 4047 0ce7 01       		.byte	0x1
 4048 0ce8 1D       		.byte	0x1d
 4049 0ce9 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 141


 4050 0ced 05       		.uleb128 0x5
 4051 0cee 03       		.byte	0x3
 4052 0cef 00000000 		.4byte	cydelayFreqMhz
 4053 0cf3 32       		.uleb128 0x32
 4054 0cf4 03020000 		.4byte	.LASF114
 4055 0cf8 01       		.byte	0x1
 4056 0cf9 1E       		.byte	0x1e
 4057 0cfa 83000000 		.4byte	0x83
 4058 0cfe 05       		.uleb128 0x5
 4059 0cff 03       		.byte	0x3
 4060 0d00 00000000 		.4byte	cydelay32kMs
 4061 0d04 32       		.uleb128 0x32
 4062 0d05 9B000000 		.4byte	.LASF115
 4063 0d09 01       		.byte	0x1
 4064 0d0a 36       		.byte	0x36
 4065 0d0b 83000000 		.4byte	0x83
 4066 0d0f 05       		.uleb128 0x5
 4067 0d10 03       		.byte	0x3
 4068 0d11 00000000 		.4byte	CySysTickInitVar
 4069 0d15 2F       		.uleb128 0x2f
 4070 0d16 250D0000 		.4byte	0xd25
 4071 0d1a 250D0000 		.4byte	0xd25
 4072 0d1e 30       		.uleb128 0x30
 4073 0d1f EC000000 		.4byte	0xec
 4074 0d23 2D       		.byte	0x2d
 4075 0d24 00       		.byte	0
 4076 0d25 33       		.uleb128 0x33
 4077 0d26 6B000000 		.4byte	0x6b
 4078 0d2a 32       		.uleb128 0x32
 4079 0d2b BC040000 		.4byte	.LASF116
 4080 0d2f 01       		.byte	0x1
 4081 0d30 3B       		.byte	0x3b
 4082 0d31 3B0D0000 		.4byte	0xd3b
 4083 0d35 05       		.uleb128 0x5
 4084 0d36 03       		.byte	0x3
 4085 0d37 00000000 		.4byte	cyImoFreqMhz2Reg
 4086 0d3b 33       		.uleb128 0x33
 4087 0d3c 150D0000 		.4byte	0xd15
 4088 0d40 32       		.uleb128 0x32
 4089 0d41 40000000 		.4byte	.LASF117
 4090 0d45 01       		.byte	0x1
 4091 0d46 58       		.byte	0x58
 4092 0d47 83000000 		.4byte	0x83
 4093 0d4b 05       		.uleb128 0x5
 4094 0d4c 03       		.byte	0x3
 4095 0d4d 00000000 		.4byte	CySysClkPumpConfig
 4096 0d51 34       		.uleb128 0x34
 4097 0d52 AD020000 		.4byte	.LASF118
 4098 0d56 AD020000 		.4byte	.LASF118
 4099 0d5a 03       		.byte	0x3
 4100 0d5b F8       		.byte	0xf8
 4101 0d5c 34       		.uleb128 0x34
 4102 0d5d 04050000 		.4byte	.LASF119
 4103 0d61 04050000 		.4byte	.LASF119
 4104 0d65 03       		.byte	0x3
 4105 0d66 F9       		.byte	0xf9
 4106 0d67 34       		.uleb128 0x34
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 142


 4107 0d68 57050000 		.4byte	.LASF120
 4108 0d6c 57050000 		.4byte	.LASF120
 4109 0d70 03       		.byte	0x3
 4110 0d71 EF       		.byte	0xef
 4111 0d72 00       		.byte	0
 4112              		.section	.debug_abbrev,"",%progbits
 4113              	.Ldebug_abbrev0:
 4114 0000 01       		.uleb128 0x1
 4115 0001 11       		.uleb128 0x11
 4116 0002 01       		.byte	0x1
 4117 0003 25       		.uleb128 0x25
 4118 0004 0E       		.uleb128 0xe
 4119 0005 13       		.uleb128 0x13
 4120 0006 0B       		.uleb128 0xb
 4121 0007 03       		.uleb128 0x3
 4122 0008 0E       		.uleb128 0xe
 4123 0009 1B       		.uleb128 0x1b
 4124 000a 0E       		.uleb128 0xe
 4125 000b 55       		.uleb128 0x55
 4126 000c 17       		.uleb128 0x17
 4127 000d 11       		.uleb128 0x11
 4128 000e 01       		.uleb128 0x1
 4129 000f 10       		.uleb128 0x10
 4130 0010 17       		.uleb128 0x17
 4131 0011 00       		.byte	0
 4132 0012 00       		.byte	0
 4133 0013 02       		.uleb128 0x2
 4134 0014 24       		.uleb128 0x24
 4135 0015 00       		.byte	0
 4136 0016 0B       		.uleb128 0xb
 4137 0017 0B       		.uleb128 0xb
 4138 0018 3E       		.uleb128 0x3e
 4139 0019 0B       		.uleb128 0xb
 4140 001a 03       		.uleb128 0x3
 4141 001b 0E       		.uleb128 0xe
 4142 001c 00       		.byte	0
 4143 001d 00       		.byte	0
 4144 001e 03       		.uleb128 0x3
 4145 001f 24       		.uleb128 0x24
 4146 0020 00       		.byte	0
 4147 0021 0B       		.uleb128 0xb
 4148 0022 0B       		.uleb128 0xb
 4149 0023 3E       		.uleb128 0x3e
 4150 0024 0B       		.uleb128 0xb
 4151 0025 03       		.uleb128 0x3
 4152 0026 08       		.uleb128 0x8
 4153 0027 00       		.byte	0
 4154 0028 00       		.byte	0
 4155 0029 04       		.uleb128 0x4
 4156 002a 16       		.uleb128 0x16
 4157 002b 00       		.byte	0
 4158 002c 03       		.uleb128 0x3
 4159 002d 0E       		.uleb128 0xe
 4160 002e 3A       		.uleb128 0x3a
 4161 002f 0B       		.uleb128 0xb
 4162 0030 3B       		.uleb128 0x3b
 4163 0031 05       		.uleb128 0x5
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 143


 4164 0032 49       		.uleb128 0x49
 4165 0033 13       		.uleb128 0x13
 4166 0034 00       		.byte	0
 4167 0035 00       		.byte	0
 4168 0036 05       		.uleb128 0x5
 4169 0037 35       		.uleb128 0x35
 4170 0038 00       		.byte	0
 4171 0039 49       		.uleb128 0x49
 4172 003a 13       		.uleb128 0x13
 4173 003b 00       		.byte	0
 4174 003c 00       		.byte	0
 4175 003d 06       		.uleb128 0x6
 4176 003e 0F       		.uleb128 0xf
 4177 003f 00       		.byte	0
 4178 0040 0B       		.uleb128 0xb
 4179 0041 0B       		.uleb128 0xb
 4180 0042 49       		.uleb128 0x49
 4181 0043 13       		.uleb128 0x13
 4182 0044 00       		.byte	0
 4183 0045 00       		.byte	0
 4184 0046 07       		.uleb128 0x7
 4185 0047 15       		.uleb128 0x15
 4186 0048 00       		.byte	0
 4187 0049 27       		.uleb128 0x27
 4188 004a 19       		.uleb128 0x19
 4189 004b 00       		.byte	0
 4190 004c 00       		.byte	0
 4191 004d 08       		.uleb128 0x8
 4192 004e 2E       		.uleb128 0x2e
 4193 004f 01       		.byte	0x1
 4194 0050 3F       		.uleb128 0x3f
 4195 0051 19       		.uleb128 0x19
 4196 0052 03       		.uleb128 0x3
 4197 0053 0E       		.uleb128 0xe
 4198 0054 3A       		.uleb128 0x3a
 4199 0055 0B       		.uleb128 0xb
 4200 0056 3B       		.uleb128 0x3b
 4201 0057 05       		.uleb128 0x5
 4202 0058 27       		.uleb128 0x27
 4203 0059 19       		.uleb128 0x19
 4204 005a 49       		.uleb128 0x49
 4205 005b 13       		.uleb128 0x13
 4206 005c 20       		.uleb128 0x20
 4207 005d 0B       		.uleb128 0xb
 4208 005e 01       		.uleb128 0x1
 4209 005f 13       		.uleb128 0x13
 4210 0060 00       		.byte	0
 4211 0061 00       		.byte	0
 4212 0062 09       		.uleb128 0x9
 4213 0063 34       		.uleb128 0x34
 4214 0064 00       		.byte	0
 4215 0065 03       		.uleb128 0x3
 4216 0066 0E       		.uleb128 0xe
 4217 0067 3A       		.uleb128 0x3a
 4218 0068 0B       		.uleb128 0xb
 4219 0069 3B       		.uleb128 0x3b
 4220 006a 05       		.uleb128 0x5
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 144


 4221 006b 49       		.uleb128 0x49
 4222 006c 13       		.uleb128 0x13
 4223 006d 00       		.byte	0
 4224 006e 00       		.byte	0
 4225 006f 0A       		.uleb128 0xa
 4226 0070 2E       		.uleb128 0x2e
 4227 0071 00       		.byte	0
 4228 0072 3F       		.uleb128 0x3f
 4229 0073 19       		.uleb128 0x19
 4230 0074 03       		.uleb128 0x3
 4231 0075 0E       		.uleb128 0xe
 4232 0076 3A       		.uleb128 0x3a
 4233 0077 0B       		.uleb128 0xb
 4234 0078 3B       		.uleb128 0x3b
 4235 0079 05       		.uleb128 0x5
 4236 007a 27       		.uleb128 0x27
 4237 007b 19       		.uleb128 0x19
 4238 007c 20       		.uleb128 0x20
 4239 007d 0B       		.uleb128 0xb
 4240 007e 00       		.byte	0
 4241 007f 00       		.byte	0
 4242 0080 0B       		.uleb128 0xb
 4243 0081 2E       		.uleb128 0x2e
 4244 0082 01       		.byte	0x1
 4245 0083 3F       		.uleb128 0x3f
 4246 0084 19       		.uleb128 0x19
 4247 0085 03       		.uleb128 0x3
 4248 0086 0E       		.uleb128 0xe
 4249 0087 3A       		.uleb128 0x3a
 4250 0088 0B       		.uleb128 0xb
 4251 0089 3B       		.uleb128 0x3b
 4252 008a 05       		.uleb128 0x5
 4253 008b 27       		.uleb128 0x27
 4254 008c 19       		.uleb128 0x19
 4255 008d 20       		.uleb128 0x20
 4256 008e 0B       		.uleb128 0xb
 4257 008f 01       		.uleb128 0x1
 4258 0090 13       		.uleb128 0x13
 4259 0091 00       		.byte	0
 4260 0092 00       		.byte	0
 4261 0093 0C       		.uleb128 0xc
 4262 0094 05       		.uleb128 0x5
 4263 0095 00       		.byte	0
 4264 0096 03       		.uleb128 0x3
 4265 0097 0E       		.uleb128 0xe
 4266 0098 3A       		.uleb128 0x3a
 4267 0099 0B       		.uleb128 0xb
 4268 009a 3B       		.uleb128 0x3b
 4269 009b 05       		.uleb128 0x5
 4270 009c 49       		.uleb128 0x49
 4271 009d 13       		.uleb128 0x13
 4272 009e 00       		.byte	0
 4273 009f 00       		.byte	0
 4274 00a0 0D       		.uleb128 0xd
 4275 00a1 2E       		.uleb128 0x2e
 4276 00a2 01       		.byte	0x1
 4277 00a3 03       		.uleb128 0x3
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 145


 4278 00a4 0E       		.uleb128 0xe
 4279 00a5 3A       		.uleb128 0x3a
 4280 00a6 0B       		.uleb128 0xb
 4281 00a7 3B       		.uleb128 0x3b
 4282 00a8 05       		.uleb128 0x5
 4283 00a9 27       		.uleb128 0x27
 4284 00aa 19       		.uleb128 0x19
 4285 00ab 20       		.uleb128 0x20
 4286 00ac 0B       		.uleb128 0xb
 4287 00ad 01       		.uleb128 0x1
 4288 00ae 13       		.uleb128 0x13
 4289 00af 00       		.byte	0
 4290 00b0 00       		.byte	0
 4291 00b1 0E       		.uleb128 0xe
 4292 00b2 34       		.uleb128 0x34
 4293 00b3 00       		.byte	0
 4294 00b4 03       		.uleb128 0x3
 4295 00b5 08       		.uleb128 0x8
 4296 00b6 3A       		.uleb128 0x3a
 4297 00b7 0B       		.uleb128 0xb
 4298 00b8 3B       		.uleb128 0x3b
 4299 00b9 05       		.uleb128 0x5
 4300 00ba 49       		.uleb128 0x49
 4301 00bb 13       		.uleb128 0x13
 4302 00bc 00       		.byte	0
 4303 00bd 00       		.byte	0
 4304 00be 0F       		.uleb128 0xf
 4305 00bf 2E       		.uleb128 0x2e
 4306 00c0 00       		.byte	0
 4307 00c1 3F       		.uleb128 0x3f
 4308 00c2 19       		.uleb128 0x19
 4309 00c3 03       		.uleb128 0x3
 4310 00c4 0E       		.uleb128 0xe
 4311 00c5 3A       		.uleb128 0x3a
 4312 00c6 0B       		.uleb128 0xb
 4313 00c7 3B       		.uleb128 0x3b
 4314 00c8 0B       		.uleb128 0xb
 4315 00c9 27       		.uleb128 0x27
 4316 00ca 19       		.uleb128 0x19
 4317 00cb 11       		.uleb128 0x11
 4318 00cc 01       		.uleb128 0x1
 4319 00cd 12       		.uleb128 0x12
 4320 00ce 06       		.uleb128 0x6
 4321 00cf 40       		.uleb128 0x40
 4322 00d0 18       		.uleb128 0x18
 4323 00d1 9742     		.uleb128 0x2117
 4324 00d3 19       		.uleb128 0x19
 4325 00d4 00       		.byte	0
 4326 00d5 00       		.byte	0
 4327 00d6 10       		.uleb128 0x10
 4328 00d7 2E       		.uleb128 0x2e
 4329 00d8 01       		.byte	0x1
 4330 00d9 3F       		.uleb128 0x3f
 4331 00da 19       		.uleb128 0x19
 4332 00db 03       		.uleb128 0x3
 4333 00dc 0E       		.uleb128 0xe
 4334 00dd 3A       		.uleb128 0x3a
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 146


 4335 00de 0B       		.uleb128 0xb
 4336 00df 3B       		.uleb128 0x3b
 4337 00e0 05       		.uleb128 0x5
 4338 00e1 27       		.uleb128 0x27
 4339 00e2 19       		.uleb128 0x19
 4340 00e3 11       		.uleb128 0x11
 4341 00e4 01       		.uleb128 0x1
 4342 00e5 12       		.uleb128 0x12
 4343 00e6 06       		.uleb128 0x6
 4344 00e7 40       		.uleb128 0x40
 4345 00e8 18       		.uleb128 0x18
 4346 00e9 9742     		.uleb128 0x2117
 4347 00eb 19       		.uleb128 0x19
 4348 00ec 01       		.uleb128 0x1
 4349 00ed 13       		.uleb128 0x13
 4350 00ee 00       		.byte	0
 4351 00ef 00       		.byte	0
 4352 00f0 11       		.uleb128 0x11
 4353 00f1 05       		.uleb128 0x5
 4354 00f2 00       		.byte	0
 4355 00f3 03       		.uleb128 0x3
 4356 00f4 0E       		.uleb128 0xe
 4357 00f5 3A       		.uleb128 0x3a
 4358 00f6 0B       		.uleb128 0xb
 4359 00f7 3B       		.uleb128 0x3b
 4360 00f8 05       		.uleb128 0x5
 4361 00f9 49       		.uleb128 0x49
 4362 00fa 13       		.uleb128 0x13
 4363 00fb 02       		.uleb128 0x2
 4364 00fc 17       		.uleb128 0x17
 4365 00fd 00       		.byte	0
 4366 00fe 00       		.byte	0
 4367 00ff 12       		.uleb128 0x12
 4368 0100 34       		.uleb128 0x34
 4369 0101 00       		.byte	0
 4370 0102 03       		.uleb128 0x3
 4371 0103 0E       		.uleb128 0xe
 4372 0104 3A       		.uleb128 0x3a
 4373 0105 0B       		.uleb128 0xb
 4374 0106 3B       		.uleb128 0x3b
 4375 0107 05       		.uleb128 0x5
 4376 0108 49       		.uleb128 0x49
 4377 0109 13       		.uleb128 0x13
 4378 010a 02       		.uleb128 0x2
 4379 010b 17       		.uleb128 0x17
 4380 010c 00       		.byte	0
 4381 010d 00       		.byte	0
 4382 010e 13       		.uleb128 0x13
 4383 010f 898201   		.uleb128 0x4109
 4384 0112 00       		.byte	0
 4385 0113 11       		.uleb128 0x11
 4386 0114 01       		.uleb128 0x1
 4387 0115 31       		.uleb128 0x31
 4388 0116 13       		.uleb128 0x13
 4389 0117 00       		.byte	0
 4390 0118 00       		.byte	0
 4391 0119 14       		.uleb128 0x14
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 147


 4392 011a 05       		.uleb128 0x5
 4393 011b 00       		.byte	0
 4394 011c 03       		.uleb128 0x3
 4395 011d 0E       		.uleb128 0xe
 4396 011e 3A       		.uleb128 0x3a
 4397 011f 0B       		.uleb128 0xb
 4398 0120 3B       		.uleb128 0x3b
 4399 0121 05       		.uleb128 0x5
 4400 0122 49       		.uleb128 0x49
 4401 0123 13       		.uleb128 0x13
 4402 0124 02       		.uleb128 0x2
 4403 0125 18       		.uleb128 0x18
 4404 0126 00       		.byte	0
 4405 0127 00       		.byte	0
 4406 0128 15       		.uleb128 0x15
 4407 0129 2E       		.uleb128 0x2e
 4408 012a 01       		.byte	0x1
 4409 012b 3F       		.uleb128 0x3f
 4410 012c 19       		.uleb128 0x19
 4411 012d 03       		.uleb128 0x3
 4412 012e 0E       		.uleb128 0xe
 4413 012f 3A       		.uleb128 0x3a
 4414 0130 0B       		.uleb128 0xb
 4415 0131 3B       		.uleb128 0x3b
 4416 0132 05       		.uleb128 0x5
 4417 0133 27       		.uleb128 0x27
 4418 0134 19       		.uleb128 0x19
 4419 0135 49       		.uleb128 0x49
 4420 0136 13       		.uleb128 0x13
 4421 0137 11       		.uleb128 0x11
 4422 0138 01       		.uleb128 0x1
 4423 0139 12       		.uleb128 0x12
 4424 013a 06       		.uleb128 0x6
 4425 013b 40       		.uleb128 0x40
 4426 013c 18       		.uleb128 0x18
 4427 013d 9742     		.uleb128 0x2117
 4428 013f 19       		.uleb128 0x19
 4429 0140 01       		.uleb128 0x1
 4430 0141 13       		.uleb128 0x13
 4431 0142 00       		.byte	0
 4432 0143 00       		.byte	0
 4433 0144 16       		.uleb128 0x16
 4434 0145 2E       		.uleb128 0x2e
 4435 0146 00       		.byte	0
 4436 0147 3F       		.uleb128 0x3f
 4437 0148 19       		.uleb128 0x19
 4438 0149 03       		.uleb128 0x3
 4439 014a 0E       		.uleb128 0xe
 4440 014b 3A       		.uleb128 0x3a
 4441 014c 0B       		.uleb128 0xb
 4442 014d 3B       		.uleb128 0x3b
 4443 014e 05       		.uleb128 0x5
 4444 014f 27       		.uleb128 0x27
 4445 0150 19       		.uleb128 0x19
 4446 0151 11       		.uleb128 0x11
 4447 0152 01       		.uleb128 0x1
 4448 0153 12       		.uleb128 0x12
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 148


 4449 0154 06       		.uleb128 0x6
 4450 0155 40       		.uleb128 0x40
 4451 0156 18       		.uleb128 0x18
 4452 0157 9742     		.uleb128 0x2117
 4453 0159 19       		.uleb128 0x19
 4454 015a 00       		.byte	0
 4455 015b 00       		.byte	0
 4456 015c 17       		.uleb128 0x17
 4457 015d 2E       		.uleb128 0x2e
 4458 015e 01       		.byte	0x1
 4459 015f 31       		.uleb128 0x31
 4460 0160 13       		.uleb128 0x13
 4461 0161 11       		.uleb128 0x11
 4462 0162 01       		.uleb128 0x1
 4463 0163 12       		.uleb128 0x12
 4464 0164 06       		.uleb128 0x6
 4465 0165 40       		.uleb128 0x40
 4466 0166 18       		.uleb128 0x18
 4467 0167 9742     		.uleb128 0x2117
 4468 0169 19       		.uleb128 0x19
 4469 016a 01       		.uleb128 0x1
 4470 016b 13       		.uleb128 0x13
 4471 016c 00       		.byte	0
 4472 016d 00       		.byte	0
 4473 016e 18       		.uleb128 0x18
 4474 016f 34       		.uleb128 0x34
 4475 0170 00       		.byte	0
 4476 0171 31       		.uleb128 0x31
 4477 0172 13       		.uleb128 0x13
 4478 0173 02       		.uleb128 0x2
 4479 0174 17       		.uleb128 0x17
 4480 0175 00       		.byte	0
 4481 0176 00       		.byte	0
 4482 0177 19       		.uleb128 0x19
 4483 0178 2E       		.uleb128 0x2e
 4484 0179 00       		.byte	0
 4485 017a 3F       		.uleb128 0x3f
 4486 017b 19       		.uleb128 0x19
 4487 017c 03       		.uleb128 0x3
 4488 017d 0E       		.uleb128 0xe
 4489 017e 3A       		.uleb128 0x3a
 4490 017f 0B       		.uleb128 0xb
 4491 0180 3B       		.uleb128 0x3b
 4492 0181 05       		.uleb128 0x5
 4493 0182 27       		.uleb128 0x27
 4494 0183 19       		.uleb128 0x19
 4495 0184 49       		.uleb128 0x49
 4496 0185 13       		.uleb128 0x13
 4497 0186 11       		.uleb128 0x11
 4498 0187 01       		.uleb128 0x1
 4499 0188 12       		.uleb128 0x12
 4500 0189 06       		.uleb128 0x6
 4501 018a 40       		.uleb128 0x40
 4502 018b 18       		.uleb128 0x18
 4503 018c 9742     		.uleb128 0x2117
 4504 018e 19       		.uleb128 0x19
 4505 018f 00       		.byte	0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 149


 4506 0190 00       		.byte	0
 4507 0191 1A       		.uleb128 0x1a
 4508 0192 2E       		.uleb128 0x2e
 4509 0193 00       		.byte	0
 4510 0194 31       		.uleb128 0x31
 4511 0195 13       		.uleb128 0x13
 4512 0196 11       		.uleb128 0x11
 4513 0197 01       		.uleb128 0x1
 4514 0198 12       		.uleb128 0x12
 4515 0199 06       		.uleb128 0x6
 4516 019a 40       		.uleb128 0x40
 4517 019b 18       		.uleb128 0x18
 4518 019c 9742     		.uleb128 0x2117
 4519 019e 19       		.uleb128 0x19
 4520 019f 00       		.byte	0
 4521 01a0 00       		.byte	0
 4522 01a1 1B       		.uleb128 0x1b
 4523 01a2 34       		.uleb128 0x34
 4524 01a3 00       		.byte	0
 4525 01a4 03       		.uleb128 0x3
 4526 01a5 0E       		.uleb128 0xe
 4527 01a6 3A       		.uleb128 0x3a
 4528 01a7 0B       		.uleb128 0xb
 4529 01a8 3B       		.uleb128 0x3b
 4530 01a9 05       		.uleb128 0x5
 4531 01aa 49       		.uleb128 0x49
 4532 01ab 13       		.uleb128 0x13
 4533 01ac 02       		.uleb128 0x2
 4534 01ad 18       		.uleb128 0x18
 4535 01ae 00       		.byte	0
 4536 01af 00       		.byte	0
 4537 01b0 1C       		.uleb128 0x1c
 4538 01b1 05       		.uleb128 0x5
 4539 01b2 00       		.byte	0
 4540 01b3 31       		.uleb128 0x31
 4541 01b4 13       		.uleb128 0x13
 4542 01b5 02       		.uleb128 0x2
 4543 01b6 17       		.uleb128 0x17
 4544 01b7 00       		.byte	0
 4545 01b8 00       		.byte	0
 4546 01b9 1D       		.uleb128 0x1d
 4547 01ba 05       		.uleb128 0x5
 4548 01bb 00       		.byte	0
 4549 01bc 31       		.uleb128 0x31
 4550 01bd 13       		.uleb128 0x13
 4551 01be 02       		.uleb128 0x2
 4552 01bf 18       		.uleb128 0x18
 4553 01c0 00       		.byte	0
 4554 01c1 00       		.byte	0
 4555 01c2 1E       		.uleb128 0x1e
 4556 01c3 34       		.uleb128 0x34
 4557 01c4 00       		.byte	0
 4558 01c5 31       		.uleb128 0x31
 4559 01c6 13       		.uleb128 0x13
 4560 01c7 02       		.uleb128 0x2
 4561 01c8 18       		.uleb128 0x18
 4562 01c9 00       		.byte	0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 150


 4563 01ca 00       		.byte	0
 4564 01cb 1F       		.uleb128 0x1f
 4565 01cc 34       		.uleb128 0x34
 4566 01cd 00       		.byte	0
 4567 01ce 31       		.uleb128 0x31
 4568 01cf 13       		.uleb128 0x13
 4569 01d0 1C       		.uleb128 0x1c
 4570 01d1 06       		.uleb128 0x6
 4571 01d2 00       		.byte	0
 4572 01d3 00       		.byte	0
 4573 01d4 20       		.uleb128 0x20
 4574 01d5 34       		.uleb128 0x34
 4575 01d6 00       		.byte	0
 4576 01d7 03       		.uleb128 0x3
 4577 01d8 0E       		.uleb128 0xe
 4578 01d9 3A       		.uleb128 0x3a
 4579 01da 0B       		.uleb128 0xb
 4580 01db 3B       		.uleb128 0x3b
 4581 01dc 05       		.uleb128 0x5
 4582 01dd 49       		.uleb128 0x49
 4583 01de 13       		.uleb128 0x13
 4584 01df 1C       		.uleb128 0x1c
 4585 01e0 06       		.uleb128 0x6
 4586 01e1 00       		.byte	0
 4587 01e2 00       		.byte	0
 4588 01e3 21       		.uleb128 0x21
 4589 01e4 898201   		.uleb128 0x4109
 4590 01e7 01       		.byte	0x1
 4591 01e8 11       		.uleb128 0x11
 4592 01e9 01       		.uleb128 0x1
 4593 01ea 31       		.uleb128 0x31
 4594 01eb 13       		.uleb128 0x13
 4595 01ec 01       		.uleb128 0x1
 4596 01ed 13       		.uleb128 0x13
 4597 01ee 00       		.byte	0
 4598 01ef 00       		.byte	0
 4599 01f0 22       		.uleb128 0x22
 4600 01f1 8A8201   		.uleb128 0x410a
 4601 01f4 00       		.byte	0
 4602 01f5 02       		.uleb128 0x2
 4603 01f6 18       		.uleb128 0x18
 4604 01f7 9142     		.uleb128 0x2111
 4605 01f9 18       		.uleb128 0x18
 4606 01fa 00       		.byte	0
 4607 01fb 00       		.byte	0
 4608 01fc 23       		.uleb128 0x23
 4609 01fd 898201   		.uleb128 0x4109
 4610 0200 01       		.byte	0x1
 4611 0201 11       		.uleb128 0x11
 4612 0202 01       		.uleb128 0x1
 4613 0203 31       		.uleb128 0x31
 4614 0204 13       		.uleb128 0x13
 4615 0205 00       		.byte	0
 4616 0206 00       		.byte	0
 4617 0207 24       		.uleb128 0x24
 4618 0208 1D       		.uleb128 0x1d
 4619 0209 01       		.byte	0x1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 151


 4620 020a 31       		.uleb128 0x31
 4621 020b 13       		.uleb128 0x13
 4622 020c 11       		.uleb128 0x11
 4623 020d 01       		.uleb128 0x1
 4624 020e 12       		.uleb128 0x12
 4625 020f 06       		.uleb128 0x6
 4626 0210 58       		.uleb128 0x58
 4627 0211 0B       		.uleb128 0xb
 4628 0212 59       		.uleb128 0x59
 4629 0213 05       		.uleb128 0x5
 4630 0214 01       		.uleb128 0x1
 4631 0215 13       		.uleb128 0x13
 4632 0216 00       		.byte	0
 4633 0217 00       		.byte	0
 4634 0218 25       		.uleb128 0x25
 4635 0219 0B       		.uleb128 0xb
 4636 021a 01       		.byte	0x1
 4637 021b 11       		.uleb128 0x11
 4638 021c 01       		.uleb128 0x1
 4639 021d 12       		.uleb128 0x12
 4640 021e 06       		.uleb128 0x6
 4641 021f 00       		.byte	0
 4642 0220 00       		.byte	0
 4643 0221 26       		.uleb128 0x26
 4644 0222 34       		.uleb128 0x34
 4645 0223 00       		.byte	0
 4646 0224 31       		.uleb128 0x31
 4647 0225 13       		.uleb128 0x13
 4648 0226 00       		.byte	0
 4649 0227 00       		.byte	0
 4650 0228 27       		.uleb128 0x27
 4651 0229 1D       		.uleb128 0x1d
 4652 022a 00       		.byte	0
 4653 022b 31       		.uleb128 0x31
 4654 022c 13       		.uleb128 0x13
 4655 022d 52       		.uleb128 0x52
 4656 022e 01       		.uleb128 0x1
 4657 022f 55       		.uleb128 0x55
 4658 0230 17       		.uleb128 0x17
 4659 0231 58       		.uleb128 0x58
 4660 0232 0B       		.uleb128 0xb
 4661 0233 59       		.uleb128 0x59
 4662 0234 05       		.uleb128 0x5
 4663 0235 00       		.byte	0
 4664 0236 00       		.byte	0
 4665 0237 28       		.uleb128 0x28
 4666 0238 2E       		.uleb128 0x2e
 4667 0239 01       		.byte	0x1
 4668 023a 3F       		.uleb128 0x3f
 4669 023b 19       		.uleb128 0x19
 4670 023c 03       		.uleb128 0x3
 4671 023d 0E       		.uleb128 0xe
 4672 023e 3A       		.uleb128 0x3a
 4673 023f 0B       		.uleb128 0xb
 4674 0240 3B       		.uleb128 0x3b
 4675 0241 05       		.uleb128 0x5
 4676 0242 27       		.uleb128 0x27
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 152


 4677 0243 19       		.uleb128 0x19
 4678 0244 11       		.uleb128 0x11
 4679 0245 01       		.uleb128 0x1
 4680 0246 12       		.uleb128 0x12
 4681 0247 06       		.uleb128 0x6
 4682 0248 40       		.uleb128 0x40
 4683 0249 18       		.uleb128 0x18
 4684 024a 9642     		.uleb128 0x2116
 4685 024c 19       		.uleb128 0x19
 4686 024d 01       		.uleb128 0x1
 4687 024e 13       		.uleb128 0x13
 4688 024f 00       		.byte	0
 4689 0250 00       		.byte	0
 4690 0251 29       		.uleb128 0x29
 4691 0252 34       		.uleb128 0x34
 4692 0253 00       		.byte	0
 4693 0254 03       		.uleb128 0x3
 4694 0255 08       		.uleb128 0x8
 4695 0256 3A       		.uleb128 0x3a
 4696 0257 0B       		.uleb128 0xb
 4697 0258 3B       		.uleb128 0x3b
 4698 0259 05       		.uleb128 0x5
 4699 025a 49       		.uleb128 0x49
 4700 025b 13       		.uleb128 0x13
 4701 025c 02       		.uleb128 0x2
 4702 025d 17       		.uleb128 0x17
 4703 025e 00       		.byte	0
 4704 025f 00       		.byte	0
 4705 0260 2A       		.uleb128 0x2a
 4706 0261 1D       		.uleb128 0x1d
 4707 0262 01       		.byte	0x1
 4708 0263 31       		.uleb128 0x31
 4709 0264 13       		.uleb128 0x13
 4710 0265 52       		.uleb128 0x52
 4711 0266 01       		.uleb128 0x1
 4712 0267 55       		.uleb128 0x55
 4713 0268 17       		.uleb128 0x17
 4714 0269 58       		.uleb128 0x58
 4715 026a 0B       		.uleb128 0xb
 4716 026b 59       		.uleb128 0x59
 4717 026c 05       		.uleb128 0x5
 4718 026d 01       		.uleb128 0x1
 4719 026e 13       		.uleb128 0x13
 4720 026f 00       		.byte	0
 4721 0270 00       		.byte	0
 4722 0271 2B       		.uleb128 0x2b
 4723 0272 0B       		.uleb128 0xb
 4724 0273 01       		.byte	0x1
 4725 0274 55       		.uleb128 0x55
 4726 0275 17       		.uleb128 0x17
 4727 0276 00       		.byte	0
 4728 0277 00       		.byte	0
 4729 0278 2C       		.uleb128 0x2c
 4730 0279 1D       		.uleb128 0x1d
 4731 027a 00       		.byte	0
 4732 027b 31       		.uleb128 0x31
 4733 027c 13       		.uleb128 0x13
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 153


 4734 027d 11       		.uleb128 0x11
 4735 027e 01       		.uleb128 0x1
 4736 027f 12       		.uleb128 0x12
 4737 0280 06       		.uleb128 0x6
 4738 0281 58       		.uleb128 0x58
 4739 0282 0B       		.uleb128 0xb
 4740 0283 59       		.uleb128 0x59
 4741 0284 05       		.uleb128 0x5
 4742 0285 00       		.byte	0
 4743 0286 00       		.byte	0
 4744 0287 2D       		.uleb128 0x2d
 4745 0288 2E       		.uleb128 0x2e
 4746 0289 01       		.byte	0x1
 4747 028a 31       		.uleb128 0x31
 4748 028b 13       		.uleb128 0x13
 4749 028c 11       		.uleb128 0x11
 4750 028d 01       		.uleb128 0x1
 4751 028e 12       		.uleb128 0x12
 4752 028f 06       		.uleb128 0x6
 4753 0290 40       		.uleb128 0x40
 4754 0291 18       		.uleb128 0x18
 4755 0292 9642     		.uleb128 0x2116
 4756 0294 19       		.uleb128 0x19
 4757 0295 01       		.uleb128 0x1
 4758 0296 13       		.uleb128 0x13
 4759 0297 00       		.byte	0
 4760 0298 00       		.byte	0
 4761 0299 2E       		.uleb128 0x2e
 4762 029a 0B       		.uleb128 0xb
 4763 029b 01       		.byte	0x1
 4764 029c 11       		.uleb128 0x11
 4765 029d 01       		.uleb128 0x1
 4766 029e 12       		.uleb128 0x12
 4767 029f 06       		.uleb128 0x6
 4768 02a0 01       		.uleb128 0x1
 4769 02a1 13       		.uleb128 0x13
 4770 02a2 00       		.byte	0
 4771 02a3 00       		.byte	0
 4772 02a4 2F       		.uleb128 0x2f
 4773 02a5 01       		.uleb128 0x1
 4774 02a6 01       		.byte	0x1
 4775 02a7 49       		.uleb128 0x49
 4776 02a8 13       		.uleb128 0x13
 4777 02a9 01       		.uleb128 0x1
 4778 02aa 13       		.uleb128 0x13
 4779 02ab 00       		.byte	0
 4780 02ac 00       		.byte	0
 4781 02ad 30       		.uleb128 0x30
 4782 02ae 21       		.uleb128 0x21
 4783 02af 00       		.byte	0
 4784 02b0 49       		.uleb128 0x49
 4785 02b1 13       		.uleb128 0x13
 4786 02b2 2F       		.uleb128 0x2f
 4787 02b3 0B       		.uleb128 0xb
 4788 02b4 00       		.byte	0
 4789 02b5 00       		.byte	0
 4790 02b6 31       		.uleb128 0x31
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 154


 4791 02b7 34       		.uleb128 0x34
 4792 02b8 00       		.byte	0
 4793 02b9 03       		.uleb128 0x3
 4794 02ba 0E       		.uleb128 0xe
 4795 02bb 3A       		.uleb128 0x3a
 4796 02bc 0B       		.uleb128 0xb
 4797 02bd 3B       		.uleb128 0x3b
 4798 02be 0B       		.uleb128 0xb
 4799 02bf 49       		.uleb128 0x49
 4800 02c0 13       		.uleb128 0x13
 4801 02c1 02       		.uleb128 0x2
 4802 02c2 18       		.uleb128 0x18
 4803 02c3 00       		.byte	0
 4804 02c4 00       		.byte	0
 4805 02c5 32       		.uleb128 0x32
 4806 02c6 34       		.uleb128 0x34
 4807 02c7 00       		.byte	0
 4808 02c8 03       		.uleb128 0x3
 4809 02c9 0E       		.uleb128 0xe
 4810 02ca 3A       		.uleb128 0x3a
 4811 02cb 0B       		.uleb128 0xb
 4812 02cc 3B       		.uleb128 0x3b
 4813 02cd 0B       		.uleb128 0xb
 4814 02ce 49       		.uleb128 0x49
 4815 02cf 13       		.uleb128 0x13
 4816 02d0 3F       		.uleb128 0x3f
 4817 02d1 19       		.uleb128 0x19
 4818 02d2 02       		.uleb128 0x2
 4819 02d3 18       		.uleb128 0x18
 4820 02d4 00       		.byte	0
 4821 02d5 00       		.byte	0
 4822 02d6 33       		.uleb128 0x33
 4823 02d7 26       		.uleb128 0x26
 4824 02d8 00       		.byte	0
 4825 02d9 49       		.uleb128 0x49
 4826 02da 13       		.uleb128 0x13
 4827 02db 00       		.byte	0
 4828 02dc 00       		.byte	0
 4829 02dd 34       		.uleb128 0x34
 4830 02de 2E       		.uleb128 0x2e
 4831 02df 00       		.byte	0
 4832 02e0 3F       		.uleb128 0x3f
 4833 02e1 19       		.uleb128 0x19
 4834 02e2 3C       		.uleb128 0x3c
 4835 02e3 19       		.uleb128 0x19
 4836 02e4 6E       		.uleb128 0x6e
 4837 02e5 0E       		.uleb128 0xe
 4838 02e6 03       		.uleb128 0x3
 4839 02e7 0E       		.uleb128 0xe
 4840 02e8 3A       		.uleb128 0x3a
 4841 02e9 0B       		.uleb128 0xb
 4842 02ea 3B       		.uleb128 0x3b
 4843 02eb 0B       		.uleb128 0xb
 4844 02ec 00       		.byte	0
 4845 02ed 00       		.byte	0
 4846 02ee 00       		.byte	0
 4847              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 155


 4848              	.Ldebug_loc0:
 4849              	.LLST0:
 4850 0000 00000000 		.4byte	.LVL0
 4851 0004 07000000 		.4byte	.LVL1-1
 4852 0008 0100     		.2byte	0x1
 4853 000a 50       		.byte	0x50
 4854 000b 07000000 		.4byte	.LVL1-1
 4855 000f 1A000000 		.4byte	.LVL5
 4856 0013 0100     		.2byte	0x1
 4857 0015 54       		.byte	0x54
 4858 0016 1A000000 		.4byte	.LVL5
 4859 001a 20000000 		.4byte	.LFE4
 4860 001e 0400     		.2byte	0x4
 4861 0020 F3       		.byte	0xf3
 4862 0021 01       		.uleb128 0x1
 4863 0022 50       		.byte	0x50
 4864 0023 9F       		.byte	0x9f
 4865 0024 00000000 		.4byte	0
 4866 0028 00000000 		.4byte	0
 4867              	.LLST1:
 4868 002c 08000000 		.4byte	.LVL1
 4869 0030 19000000 		.4byte	.LVL4-1
 4870 0034 0100     		.2byte	0x1
 4871 0036 50       		.byte	0x50
 4872 0037 00000000 		.4byte	0
 4873 003b 00000000 		.4byte	0
 4874              	.LLST2:
 4875 003f 10000000 		.4byte	.LVL2
 4876 0043 14000000 		.4byte	.LVL3
 4877 0047 0100     		.2byte	0x1
 4878 0049 52       		.byte	0x52
 4879 004a 14000000 		.4byte	.LVL3
 4880 004e 19000000 		.4byte	.LVL4-1
 4881 0052 0100     		.2byte	0x1
 4882 0054 53       		.byte	0x53
 4883 0055 00000000 		.4byte	0
 4884 0059 00000000 		.4byte	0
 4885              	.LLST3:
 4886 005d 06000000 		.4byte	.LVL7
 4887 0061 0D000000 		.4byte	.LVL9-1
 4888 0065 0100     		.2byte	0x1
 4889 0067 50       		.byte	0x50
 4890 0068 00000000 		.4byte	0
 4891 006c 00000000 		.4byte	0
 4892              	.LLST4:
 4893 0070 0A000000 		.4byte	.LVL8
 4894 0074 12000000 		.4byte	.LVL10
 4895 0078 0500     		.2byte	0x5
 4896 007a 74       		.byte	0x74
 4897 007b 00       		.sleb128 0
 4898 007c 37       		.byte	0x37
 4899 007d 1A       		.byte	0x1a
 4900 007e 9F       		.byte	0x9f
 4901 007f 12000000 		.4byte	.LVL10
 4902 0083 18000000 		.4byte	.LFE6
 4903 0087 0100     		.2byte	0x1
 4904 0089 50       		.byte	0x50
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 156


 4905 008a 00000000 		.4byte	0
 4906 008e 00000000 		.4byte	0
 4907              	.LLST5:
 4908 0092 00000000 		.4byte	.LVL11
 4909 0096 07000000 		.4byte	.LVL12-1
 4910 009a 0100     		.2byte	0x1
 4911 009c 50       		.byte	0x50
 4912 009d 07000000 		.4byte	.LVL12-1
 4913 00a1 0C000000 		.4byte	.LVL13
 4914 00a5 0100     		.2byte	0x1
 4915 00a7 54       		.byte	0x54
 4916 00a8 0C000000 		.4byte	.LVL13
 4917 00ac 2C000000 		.4byte	.LFE7
 4918 00b0 0400     		.2byte	0x4
 4919 00b2 F3       		.byte	0xf3
 4920 00b3 01       		.uleb128 0x1
 4921 00b4 50       		.byte	0x50
 4922 00b5 9F       		.byte	0x9f
 4923 00b6 00000000 		.4byte	0
 4924 00ba 00000000 		.4byte	0
 4925              	.LLST6:
 4926 00be 08000000 		.4byte	.LVL12
 4927 00c2 21000000 		.4byte	.LVL14-1
 4928 00c6 0100     		.2byte	0x1
 4929 00c8 50       		.byte	0x50
 4930 00c9 00000000 		.4byte	0
 4931 00cd 00000000 		.4byte	0
 4932              	.LLST7:
 4933 00d1 04000000 		.4byte	.LVL15
 4934 00d5 08000000 		.4byte	.LVL16
 4935 00d9 0500     		.2byte	0x5
 4936 00db 70       		.byte	0x70
 4937 00dc 00       		.sleb128 0
 4938 00dd 31       		.byte	0x31
 4939 00de 1A       		.byte	0x1a
 4940 00df 9F       		.byte	0x9f
 4941 00e0 08000000 		.4byte	.LVL16
 4942 00e4 10000000 		.4byte	.LFE11
 4943 00e8 0100     		.2byte	0x1
 4944 00ea 50       		.byte	0x50
 4945 00eb 00000000 		.4byte	0
 4946 00ef 00000000 		.4byte	0
 4947              	.LLST8:
 4948 00f3 00000000 		.4byte	.LVL17
 4949 00f7 13000000 		.4byte	.LVL18-1
 4950 00fb 0100     		.2byte	0x1
 4951 00fd 50       		.byte	0x50
 4952 00fe 13000000 		.4byte	.LVL18-1
 4953 0102 1A000000 		.4byte	.LVL19
 4954 0106 0100     		.2byte	0x1
 4955 0108 54       		.byte	0x54
 4956 0109 1A000000 		.4byte	.LVL19
 4957 010d 30000000 		.4byte	.LFE12
 4958 0111 0400     		.2byte	0x4
 4959 0113 F3       		.byte	0xf3
 4960 0114 01       		.uleb128 0x1
 4961 0115 50       		.byte	0x50
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 157


 4962 0116 9F       		.byte	0x9f
 4963 0117 00000000 		.4byte	0
 4964 011b 00000000 		.4byte	0
 4965              	.LLST9:
 4966 011f 14000000 		.4byte	.LVL18
 4967 0123 25000000 		.4byte	.LVL20-1
 4968 0127 0100     		.2byte	0x1
 4969 0129 50       		.byte	0x50
 4970 012a 00000000 		.4byte	0
 4971 012e 00000000 		.4byte	0
 4972              	.LLST10:
 4973 0132 00000000 		.4byte	.LVL21
 4974 0136 08000000 		.4byte	.LVL22
 4975 013a 0100     		.2byte	0x1
 4976 013c 50       		.byte	0x50
 4977 013d 08000000 		.4byte	.LVL22
 4978 0141 14000000 		.4byte	.LFE17
 4979 0145 0100     		.2byte	0x1
 4980 0147 52       		.byte	0x52
 4981 0148 00000000 		.4byte	0
 4982 014c 00000000 		.4byte	0
 4983              	.LLST11:
 4984 0150 0A000000 		.4byte	.LVL23
 4985 0154 0C000000 		.4byte	.LVL24
 4986 0158 0500     		.2byte	0x5
 4987 015a 70       		.byte	0x70
 4988 015b 00       		.sleb128 0
 4989 015c 49       		.byte	0x49
 4990 015d 1A       		.byte	0x1a
 4991 015e 9F       		.byte	0x9f
 4992 015f 0C000000 		.4byte	.LVL24
 4993 0163 14000000 		.4byte	.LFE17
 4994 0167 0100     		.2byte	0x1
 4995 0169 50       		.byte	0x50
 4996 016a 00000000 		.4byte	0
 4997 016e 00000000 		.4byte	0
 4998              	.LLST12:
 4999 0172 00000000 		.4byte	.LVL27
 5000 0176 04000000 		.4byte	.LVL28
 5001 017a 0100     		.2byte	0x1
 5002 017c 50       		.byte	0x50
 5003 017d 04000000 		.4byte	.LVL28
 5004 0181 0E000000 		.4byte	.LFE20
 5005 0185 0400     		.2byte	0x4
 5006 0187 F3       		.byte	0xf3
 5007 0188 01       		.uleb128 0x1
 5008 0189 50       		.byte	0x50
 5009 018a 9F       		.byte	0x9f
 5010 018b 00000000 		.4byte	0
 5011 018f 00000000 		.4byte	0
 5012              	.LLST13:
 5013 0193 00000000 		.4byte	.LVL30
 5014 0197 04000000 		.4byte	.LVL31
 5015 019b 0100     		.2byte	0x1
 5016 019d 50       		.byte	0x50
 5017 019e 04000000 		.4byte	.LVL31
 5018 01a2 0C000000 		.4byte	.LFE21
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 158


 5019 01a6 0400     		.2byte	0x4
 5020 01a8 F3       		.byte	0xf3
 5021 01a9 01       		.uleb128 0x1
 5022 01aa 50       		.byte	0x50
 5023 01ab 9F       		.byte	0x9f
 5024 01ac 00000000 		.4byte	0
 5025 01b0 00000000 		.4byte	0
 5026              	.LLST14:
 5027 01b4 00000000 		.4byte	.LVL32
 5028 01b8 04000000 		.4byte	.LVL33
 5029 01bc 0100     		.2byte	0x1
 5030 01be 50       		.byte	0x50
 5031 01bf 04000000 		.4byte	.LVL33
 5032 01c3 10000000 		.4byte	.LFE22
 5033 01c7 0400     		.2byte	0x4
 5034 01c9 F3       		.byte	0xf3
 5035 01ca 01       		.uleb128 0x1
 5036 01cb 50       		.byte	0x50
 5037 01cc 9F       		.byte	0x9f
 5038 01cd 00000000 		.4byte	0
 5039 01d1 00000000 		.4byte	0
 5040              	.LLST15:
 5041 01d5 00000000 		.4byte	.LVL35
 5042 01d9 04000000 		.4byte	.LVL36
 5043 01dd 0100     		.2byte	0x1
 5044 01df 50       		.byte	0x50
 5045 01e0 04000000 		.4byte	.LVL36
 5046 01e4 10000000 		.4byte	.LFE23
 5047 01e8 0400     		.2byte	0x4
 5048 01ea F3       		.byte	0xf3
 5049 01eb 01       		.uleb128 0x1
 5050 01ec 50       		.byte	0x50
 5051 01ed 9F       		.byte	0x9f
 5052 01ee 00000000 		.4byte	0
 5053 01f2 00000000 		.4byte	0
 5054              	.LLST16:
 5055 01f6 00000000 		.4byte	.LVL37
 5056 01fa 17000000 		.4byte	.LVL39-1
 5057 01fe 0100     		.2byte	0x1
 5058 0200 50       		.byte	0x50
 5059 0201 17000000 		.4byte	.LVL39-1
 5060 0205 34000000 		.4byte	.LFE24
 5061 0209 0400     		.2byte	0x4
 5062 020b F3       		.byte	0xf3
 5063 020c 01       		.uleb128 0x1
 5064 020d 50       		.byte	0x50
 5065 020e 9F       		.byte	0x9f
 5066 020f 00000000 		.4byte	0
 5067 0213 00000000 		.4byte	0
 5068              	.LLST17:
 5069 0217 00000000 		.4byte	.LVL37
 5070 021b 17000000 		.4byte	.LVL39-1
 5071 021f 0100     		.2byte	0x1
 5072 0221 51       		.byte	0x51
 5073 0222 17000000 		.4byte	.LVL39-1
 5074 0226 34000000 		.4byte	.LFE24
 5075 022a 0400     		.2byte	0x4
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 159


 5076 022c F3       		.byte	0xf3
 5077 022d 01       		.uleb128 0x1
 5078 022e 51       		.byte	0x51
 5079 022f 9F       		.byte	0x9f
 5080 0230 00000000 		.4byte	0
 5081 0234 00000000 		.4byte	0
 5082              	.LLST18:
 5083 0238 18000000 		.4byte	.LVL39
 5084 023c 2B000000 		.4byte	.LVL43-1
 5085 0240 0100     		.2byte	0x1
 5086 0242 50       		.byte	0x50
 5087 0243 00000000 		.4byte	0
 5088 0247 00000000 		.4byte	0
 5089              	.LLST19:
 5090 024b 10000000 		.4byte	.LVL38
 5091 024f 2C000000 		.4byte	.LVL44
 5092 0253 0100     		.2byte	0x1
 5093 0255 55       		.byte	0x55
 5094 0256 00000000 		.4byte	0
 5095 025a 00000000 		.4byte	0
 5096              	.LLST20:
 5097 025e 22000000 		.4byte	.LVL40
 5098 0262 26000000 		.4byte	.LVL42
 5099 0266 0100     		.2byte	0x1
 5100 0268 53       		.byte	0x53
 5101 0269 26000000 		.4byte	.LVL42
 5102 026d 2C000000 		.4byte	.LVL45
 5103 0271 0100     		.2byte	0x1
 5104 0273 57       		.byte	0x57
 5105 0274 00000000 		.4byte	0
 5106 0278 00000000 		.4byte	0
 5107              	.LLST21:
 5108 027c 00000000 		.4byte	.LVL46
 5109 0280 18000000 		.4byte	.LVL49
 5110 0284 0100     		.2byte	0x1
 5111 0286 50       		.byte	0x50
 5112 0287 18000000 		.4byte	.LVL49
 5113 028b 20000000 		.4byte	.LFE25
 5114 028f 0400     		.2byte	0x4
 5115 0291 F3       		.byte	0xf3
 5116 0292 01       		.uleb128 0x1
 5117 0293 50       		.byte	0x50
 5118 0294 9F       		.byte	0x9f
 5119 0295 00000000 		.4byte	0
 5120 0299 00000000 		.4byte	0
 5121              	.LLST22:
 5122 029d 0A000000 		.4byte	.LVL47
 5123 02a1 16000000 		.4byte	.LVL48
 5124 02a5 0F00     		.2byte	0xf
 5125 02a7 71       		.byte	0x71
 5126 02a8 00       		.sleb128 0
 5127 02a9 70       		.byte	0x70
 5128 02aa 00       		.sleb128 0
 5129 02ab 33       		.byte	0x33
 5130 02ac 1A       		.byte	0x1a
 5131 02ad 08       		.byte	0x8
 5132 02ae FF       		.byte	0xff
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 160


 5133 02af 1A       		.byte	0x1a
 5134 02b0 33       		.byte	0x33
 5135 02b1 24       		.byte	0x24
 5136 02b2 23       		.byte	0x23
 5137 02b3 06       		.uleb128 0x6
 5138 02b4 25       		.byte	0x25
 5139 02b5 9F       		.byte	0x9f
 5140 02b6 00000000 		.4byte	0
 5141 02ba 00000000 		.4byte	0
 5142              	.LLST23:
 5143 02be 00000000 		.4byte	.LVL50
 5144 02c2 04000000 		.4byte	.LVL51
 5145 02c6 0100     		.2byte	0x1
 5146 02c8 50       		.byte	0x50
 5147 02c9 04000000 		.4byte	.LVL51
 5148 02cd 14000000 		.4byte	.LFE26
 5149 02d1 0400     		.2byte	0x4
 5150 02d3 F3       		.byte	0xf3
 5151 02d4 01       		.uleb128 0x1
 5152 02d5 50       		.byte	0x50
 5153 02d6 9F       		.byte	0x9f
 5154 02d7 00000000 		.4byte	0
 5155 02db 00000000 		.4byte	0
 5156              	.LLST24:
 5157 02df 00000000 		.4byte	.LVL52
 5158 02e3 06000000 		.4byte	.LVL53
 5159 02e7 0100     		.2byte	0x1
 5160 02e9 50       		.byte	0x50
 5161 02ea 06000000 		.4byte	.LVL53
 5162 02ee 18000000 		.4byte	.LFE27
 5163 02f2 0400     		.2byte	0x4
 5164 02f4 F3       		.byte	0xf3
 5165 02f5 01       		.uleb128 0x1
 5166 02f6 50       		.byte	0x50
 5167 02f7 9F       		.byte	0x9f
 5168 02f8 00000000 		.4byte	0
 5169 02fc 00000000 		.4byte	0
 5170              	.LLST25:
 5171 0300 00000000 		.4byte	.LVL54
 5172 0304 04000000 		.4byte	.LVL55
 5173 0308 0100     		.2byte	0x1
 5174 030a 50       		.byte	0x50
 5175 030b 04000000 		.4byte	.LVL55
 5176 030f 14000000 		.4byte	.LFE28
 5177 0313 0400     		.2byte	0x4
 5178 0315 F3       		.byte	0xf3
 5179 0316 01       		.uleb128 0x1
 5180 0317 50       		.byte	0x50
 5181 0318 9F       		.byte	0x9f
 5182 0319 00000000 		.4byte	0
 5183 031d 00000000 		.4byte	0
 5184              	.LLST26:
 5185 0321 00000000 		.4byte	.LVL56
 5186 0325 04000000 		.4byte	.LVL57
 5187 0329 0100     		.2byte	0x1
 5188 032b 50       		.byte	0x50
 5189 032c 04000000 		.4byte	.LVL57
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 161


 5190 0330 14000000 		.4byte	.LFE29
 5191 0334 0400     		.2byte	0x4
 5192 0336 F3       		.byte	0xf3
 5193 0337 01       		.uleb128 0x1
 5194 0338 50       		.byte	0x50
 5195 0339 9F       		.byte	0x9f
 5196 033a 00000000 		.4byte	0
 5197 033e 00000000 		.4byte	0
 5198              	.LLST27:
 5199 0342 00000000 		.4byte	.LVL58
 5200 0346 04000000 		.4byte	.LVL59
 5201 034a 0100     		.2byte	0x1
 5202 034c 50       		.byte	0x50
 5203 034d 04000000 		.4byte	.LVL59
 5204 0351 14000000 		.4byte	.LFE30
 5205 0355 0400     		.2byte	0x4
 5206 0357 F3       		.byte	0xf3
 5207 0358 01       		.uleb128 0x1
 5208 0359 50       		.byte	0x50
 5209 035a 9F       		.byte	0x9f
 5210 035b 00000000 		.4byte	0
 5211 035f 00000000 		.4byte	0
 5212              	.LLST28:
 5213 0363 00000000 		.4byte	.LVL61
 5214 0367 08000000 		.4byte	.LVL62
 5215 036b 0100     		.2byte	0x1
 5216 036d 50       		.byte	0x50
 5217 036e 08000000 		.4byte	.LVL62
 5218 0372 22000000 		.4byte	.LVL66
 5219 0376 0100     		.2byte	0x1
 5220 0378 54       		.byte	0x54
 5221 0379 00000000 		.4byte	0
 5222 037d 00000000 		.4byte	0
 5223              	.LLST29:
 5224 0381 00000000 		.4byte	.LVL67
 5225 0385 08000000 		.4byte	.LVL68
 5226 0389 0100     		.2byte	0x1
 5227 038b 50       		.byte	0x50
 5228 038c 08000000 		.4byte	.LVL68
 5229 0390 14000000 		.4byte	.LFE34
 5230 0394 0400     		.2byte	0x4
 5231 0396 F3       		.byte	0xf3
 5232 0397 01       		.uleb128 0x1
 5233 0398 50       		.byte	0x50
 5234 0399 9F       		.byte	0x9f
 5235 039a 00000000 		.4byte	0
 5236 039e 00000000 		.4byte	0
 5237              	.LLST30:
 5238 03a2 00000000 		.4byte	.LVL70
 5239 03a6 09000000 		.4byte	.LVL71-1
 5240 03aa 0100     		.2byte	0x1
 5241 03ac 50       		.byte	0x50
 5242 03ad 09000000 		.4byte	.LVL71-1
 5243 03b1 A2000000 		.4byte	.LVL87
 5244 03b5 0100     		.2byte	0x1
 5245 03b7 55       		.byte	0x55
 5246 03b8 A2000000 		.4byte	.LVL87
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 162


 5247 03bc CC000000 		.4byte	.LVL89
 5248 03c0 0700     		.2byte	0x7
 5249 03c2 75       		.byte	0x75
 5250 03c3 B3998080 		.sleb128 -268432205
 5250      7F
 5251 03c8 9F       		.byte	0x9f
 5252 03c9 CC000000 		.4byte	.LVL89
 5253 03cd 24010000 		.4byte	.LFE8
 5254 03d1 0600     		.2byte	0x6
 5255 03d3 91       		.byte	0x91
 5256 03d4 5C       		.sleb128 -36
 5257 03d5 06       		.byte	0x6
 5258 03d6 23       		.byte	0x23
 5259 03d7 03       		.uleb128 0x3
 5260 03d8 9F       		.byte	0x9f
 5261 03d9 00000000 		.4byte	0
 5262 03dd 00000000 		.4byte	0
 5263              	.LLST31:
 5264 03e1 24000000 		.4byte	.LVL73
 5265 03e5 26000000 		.4byte	.LVL74
 5266 03e9 0100     		.2byte	0x1
 5267 03eb 54       		.byte	0x54
 5268 03ec 36000000 		.4byte	.LVL75
 5269 03f0 38000000 		.4byte	.LVL76
 5270 03f4 0100     		.2byte	0x1
 5271 03f6 54       		.byte	0x54
 5272 03f7 48000000 		.4byte	.LVL77
 5273 03fb 4A000000 		.4byte	.LVL78
 5274 03ff 0100     		.2byte	0x1
 5275 0401 54       		.byte	0x54
 5276 0402 5A000000 		.4byte	.LVL79
 5277 0406 5C000000 		.4byte	.LVL80
 5278 040a 0100     		.2byte	0x1
 5279 040c 54       		.byte	0x54
 5280 040d 64000000 		.4byte	.LVL81
 5281 0411 CC000000 		.4byte	.LVL89
 5282 0415 0100     		.2byte	0x1
 5283 0417 54       		.byte	0x54
 5284 0418 00000000 		.4byte	0
 5285 041c 00000000 		.4byte	0
 5286              	.LLST32:
 5287 0420 6C000000 		.4byte	.LVL82
 5288 0424 CC000000 		.4byte	.LVL89
 5289 0428 0200     		.2byte	0x2
 5290 042a 91       		.byte	0x91
 5291 042b 54       		.sleb128 -44
 5292 042c 00000000 		.4byte	0
 5293 0430 00000000 		.4byte	0
 5294              	.LLST33:
 5295 0434 76000000 		.4byte	.LVL83
 5296 0438 CC000000 		.4byte	.LVL89
 5297 043c 0200     		.2byte	0x2
 5298 043e 91       		.byte	0x91
 5299 043f 58       		.sleb128 -40
 5300 0440 00000000 		.4byte	0
 5301 0444 00000000 		.4byte	0
 5302              	.LLST34:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 163


 5303 0448 8A000000 		.4byte	.LVL84
 5304 044c 96000000 		.4byte	.LVL85
 5305 0450 0100     		.2byte	0x1
 5306 0452 56       		.byte	0x56
 5307 0453 00000000 		.4byte	0
 5308 0457 00000000 		.4byte	0
 5309              	.LLST35:
 5310 045b 00000000 		.4byte	.LVL91
 5311 045f 08000000 		.4byte	.LVL92
 5312 0463 0100     		.2byte	0x1
 5313 0465 50       		.byte	0x50
 5314 0466 08000000 		.4byte	.LVL92
 5315 046a 40000000 		.4byte	.LVL96
 5316 046e 0100     		.2byte	0x1
 5317 0470 54       		.byte	0x54
 5318 0471 00000000 		.4byte	0
 5319 0475 00000000 		.4byte	0
 5320              	.LLST36:
 5321 0479 00000000 		.4byte	.LVL91
 5322 047d 40000000 		.4byte	.LVL95
 5323 0481 0200     		.2byte	0x2
 5324 0483 30       		.byte	0x30
 5325 0484 9F       		.byte	0x9f
 5326 0485 40000000 		.4byte	.LVL95
 5327 0489 58000000 		.4byte	.LFE9
 5328 048d 0100     		.2byte	0x1
 5329 048f 50       		.byte	0x50
 5330 0490 00000000 		.4byte	0
 5331 0494 00000000 		.4byte	0
 5332              	.LLST37:
 5333 0498 00000000 		.4byte	.LVL97
 5334 049c 0E000000 		.4byte	.LVL98
 5335 04a0 0100     		.2byte	0x1
 5336 04a2 50       		.byte	0x50
 5337 04a3 0E000000 		.4byte	.LVL98
 5338 04a7 44000000 		.4byte	.LFE13
 5339 04ab 0400     		.2byte	0x4
 5340 04ad F3       		.byte	0xf3
 5341 04ae 01       		.uleb128 0x1
 5342 04af 50       		.byte	0x50
 5343 04b0 9F       		.byte	0x9f
 5344 04b1 00000000 		.4byte	0
 5345 04b5 00000000 		.4byte	0
 5346              	.LLST38:
 5347 04b9 00000000 		.4byte	.LVL100
 5348 04bd 18000000 		.4byte	.LVL101
 5349 04c1 0100     		.2byte	0x1
 5350 04c3 50       		.byte	0x50
 5351 04c4 18000000 		.4byte	.LVL101
 5352 04c8 48000000 		.4byte	.LFE35
 5353 04cc 0400     		.2byte	0x4
 5354 04ce F3       		.byte	0xf3
 5355 04cf 01       		.uleb128 0x1
 5356 04d0 50       		.byte	0x50
 5357 04d1 9F       		.byte	0x9f
 5358 04d2 00000000 		.4byte	0
 5359 04d6 00000000 		.4byte	0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 164


 5360              	.LLST39:
 5361 04da 00000000 		.4byte	.LVL104
 5362 04de 0C000000 		.4byte	.LVL105
 5363 04e2 0200     		.2byte	0x2
 5364 04e4 30       		.byte	0x30
 5365 04e5 9F       		.byte	0x9f
 5366 04e6 0C000000 		.4byte	.LVL105
 5367 04ea 10000000 		.4byte	.LVL106
 5368 04ee 0200     		.2byte	0x2
 5369 04f0 31       		.byte	0x31
 5370 04f1 9F       		.byte	0x9f
 5371 04f2 10000000 		.4byte	.LVL106
 5372 04f6 12000000 		.4byte	.LVL107
 5373 04fa 0200     		.2byte	0x2
 5374 04fc 32       		.byte	0x32
 5375 04fd 9F       		.byte	0x9f
 5376 04fe 12000000 		.4byte	.LVL107
 5377 0502 14000000 		.4byte	.LVL108
 5378 0506 0200     		.2byte	0x2
 5379 0508 33       		.byte	0x33
 5380 0509 9F       		.byte	0x9f
 5381 050a 14000000 		.4byte	.LVL108
 5382 050e 54000000 		.4byte	.LFE37
 5383 0512 0200     		.2byte	0x2
 5384 0514 35       		.byte	0x35
 5385 0515 9F       		.byte	0x9f
 5386 0516 00000000 		.4byte	0
 5387 051a 00000000 		.4byte	0
 5388              	.LLST40:
 5389 051e 18000000 		.4byte	.LVL110
 5390 0522 22000000 		.4byte	.LVL111
 5391 0526 0200     		.2byte	0x2
 5392 0528 31       		.byte	0x31
 5393 0529 9F       		.byte	0x9f
 5394 052a 00000000 		.4byte	0
 5395 052e 00000000 		.4byte	0
 5396              	.LLST42:
 5397 0532 14000000 		.4byte	.LVL108
 5398 0536 18000000 		.4byte	.LVL110
 5399 053a 0600     		.2byte	0x6
 5400 053c 03       		.byte	0x3
 5401 053d 00000000 		.4byte	CySysTickServiceCallbacks
 5402 0541 9F       		.byte	0x9f
 5403 0542 00000000 		.4byte	0
 5404 0546 00000000 		.4byte	0
 5405              	.LLST43:
 5406 054a 14000000 		.4byte	.LVL108
 5407 054e 18000000 		.4byte	.LVL110
 5408 0552 0200     		.2byte	0x2
 5409 0554 3F       		.byte	0x3f
 5410 0555 9F       		.byte	0x9f
 5411 0556 00000000 		.4byte	0
 5412 055a 00000000 		.4byte	0
 5413              	.LLST44:
 5414 055e 14000000 		.4byte	.LVL108
 5415 0562 16000000 		.4byte	.LVL109
 5416 0566 0500     		.2byte	0x5
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 165


 5417 0568 0C       		.byte	0xc
 5418 0569 3C000020 		.4byte	0x2000003c
 5419 056d 16000000 		.4byte	.LVL109
 5420 0571 18000000 		.4byte	.LVL110
 5421 0575 0200     		.2byte	0x2
 5422 0577 73       		.byte	0x73
 5423 0578 00       		.sleb128 0
 5424 0579 00000000 		.4byte	0
 5425 057d 00000000 		.4byte	0
 5426              	.LLST45:
 5427 0581 2C000000 		.4byte	.LVL112
 5428 0585 30000000 		.4byte	.LVL113
 5429 0589 0100     		.2byte	0x1
 5430 058b 50       		.byte	0x50
 5431 058c 00000000 		.4byte	0
 5432 0590 00000000 		.4byte	0
 5433              	.LLST46:
 5434 0594 00000000 		.4byte	.LVL117
 5435 0598 04000000 		.4byte	.LVL118
 5436 059c 0100     		.2byte	0x1
 5437 059e 50       		.byte	0x50
 5438 059f 04000000 		.4byte	.LVL118
 5439 05a3 10000000 		.4byte	.LFE42
 5440 05a7 0400     		.2byte	0x4
 5441 05a9 F3       		.byte	0xf3
 5442 05aa 01       		.uleb128 0x1
 5443 05ab 50       		.byte	0x50
 5444 05ac 9F       		.byte	0x9f
 5445 05ad 00000000 		.4byte	0
 5446 05b1 00000000 		.4byte	0
 5447              	.LLST47:
 5448 05b5 0A000000 		.4byte	.LVL120
 5449 05b9 0E000000 		.4byte	.LVL121
 5450 05bd 0200     		.2byte	0x2
 5451 05bf 31       		.byte	0x31
 5452 05c0 9F       		.byte	0x9f
 5453 05c1 00000000 		.4byte	0
 5454 05c5 00000000 		.4byte	0
 5455              	.LLST48:
 5456 05c9 00000000 		.4byte	.LVL124
 5457 05cd 06000000 		.4byte	.LVL125
 5458 05d1 0100     		.2byte	0x1
 5459 05d3 50       		.byte	0x50
 5460 05d4 06000000 		.4byte	.LVL125
 5461 05d8 10000000 		.4byte	.LFE49
 5462 05dc 0400     		.2byte	0x4
 5463 05de F3       		.byte	0xf3
 5464 05df 01       		.uleb128 0x1
 5465 05e0 50       		.byte	0x50
 5466 05e1 9F       		.byte	0x9f
 5467 05e2 00000000 		.4byte	0
 5468 05e6 00000000 		.4byte	0
 5469              	.LLST49:
 5470 05ea 00000000 		.4byte	.LVL126
 5471 05ee 04000000 		.4byte	.LVL127
 5472 05f2 0100     		.2byte	0x1
 5473 05f4 50       		.byte	0x50
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 166


 5474 05f5 04000000 		.4byte	.LVL127
 5475 05f9 0C000000 		.4byte	.LFE50
 5476 05fd 0400     		.2byte	0x4
 5477 05ff F3       		.byte	0xf3
 5478 0600 01       		.uleb128 0x1
 5479 0601 50       		.byte	0x50
 5480 0602 9F       		.byte	0x9f
 5481 0603 00000000 		.4byte	0
 5482 0607 00000000 		.4byte	0
 5483              	.LLST50:
 5484 060b 00000000 		.4byte	.LVL129
 5485 060f 08000000 		.4byte	.LVL130
 5486 0613 0100     		.2byte	0x1
 5487 0615 50       		.byte	0x50
 5488 0616 08000000 		.4byte	.LVL130
 5489 061a 20000000 		.4byte	.LFE53
 5490 061e 0400     		.2byte	0x4
 5491 0620 F3       		.byte	0xf3
 5492 0621 01       		.uleb128 0x1
 5493 0622 50       		.byte	0x50
 5494 0623 9F       		.byte	0x9f
 5495 0624 00000000 		.4byte	0
 5496 0628 00000000 		.4byte	0
 5497              	.LLST51:
 5498 062c 0A000000 		.4byte	.LVL131
 5499 0630 12000000 		.4byte	.LVL132
 5500 0634 0100     		.2byte	0x1
 5501 0636 53       		.byte	0x53
 5502 0637 12000000 		.4byte	.LVL132
 5503 063b 20000000 		.4byte	.LFE53
 5504 063f 0100     		.2byte	0x1
 5505 0641 50       		.byte	0x50
 5506 0642 00000000 		.4byte	0
 5507 0646 00000000 		.4byte	0
 5508              	.LLST52:
 5509 064a 00000000 		.4byte	.LVL133
 5510 064e 08000000 		.4byte	.LVL134
 5511 0652 0100     		.2byte	0x1
 5512 0654 50       		.byte	0x50
 5513 0655 08000000 		.4byte	.LVL134
 5514 0659 20000000 		.4byte	.LFE54
 5515 065d 0400     		.2byte	0x4
 5516 065f F3       		.byte	0xf3
 5517 0660 01       		.uleb128 0x1
 5518 0661 50       		.byte	0x50
 5519 0662 9F       		.byte	0x9f
 5520 0663 00000000 		.4byte	0
 5521 0667 00000000 		.4byte	0
 5522              	.LLST53:
 5523 066b 0A000000 		.4byte	.LVL135
 5524 066f 12000000 		.4byte	.LVL136
 5525 0673 0100     		.2byte	0x1
 5526 0675 53       		.byte	0x53
 5527 0676 12000000 		.4byte	.LVL136
 5528 067a 20000000 		.4byte	.LFE54
 5529 067e 0100     		.2byte	0x1
 5530 0680 50       		.byte	0x50
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 167


 5531 0681 00000000 		.4byte	0
 5532 0685 00000000 		.4byte	0
 5533              	.LLST54:
 5534 0689 00000000 		.4byte	.LVL137
 5535 068d 08000000 		.4byte	.LVL138
 5536 0691 0100     		.2byte	0x1
 5537 0693 50       		.byte	0x50
 5538 0694 08000000 		.4byte	.LVL138
 5539 0698 20000000 		.4byte	.LFE55
 5540 069c 0400     		.2byte	0x4
 5541 069e F3       		.byte	0xf3
 5542 069f 01       		.uleb128 0x1
 5543 06a0 50       		.byte	0x50
 5544 06a1 9F       		.byte	0x9f
 5545 06a2 00000000 		.4byte	0
 5546 06a6 00000000 		.4byte	0
 5547              	.LLST55:
 5548 06aa 0A000000 		.4byte	.LVL139
 5549 06ae 12000000 		.4byte	.LVL140
 5550 06b2 0100     		.2byte	0x1
 5551 06b4 53       		.byte	0x53
 5552 06b5 12000000 		.4byte	.LVL140
 5553 06b9 20000000 		.4byte	.LFE55
 5554 06bd 0100     		.2byte	0x1
 5555 06bf 50       		.byte	0x50
 5556 06c0 00000000 		.4byte	0
 5557 06c4 00000000 		.4byte	0
 5558              	.LLST56:
 5559 06c8 00000000 		.4byte	.LVL141
 5560 06cc 06000000 		.4byte	.LVL142
 5561 06d0 0100     		.2byte	0x1
 5562 06d2 50       		.byte	0x50
 5563 06d3 06000000 		.4byte	.LVL142
 5564 06d7 08000000 		.4byte	.LVL143
 5565 06db 0400     		.2byte	0x4
 5566 06dd F3       		.byte	0xf3
 5567 06de 01       		.uleb128 0x1
 5568 06df 50       		.byte	0x50
 5569 06e0 9F       		.byte	0x9f
 5570 06e1 08000000 		.4byte	.LVL143
 5571 06e5 0E000000 		.4byte	.LVL144
 5572 06e9 0100     		.2byte	0x1
 5573 06eb 50       		.byte	0x50
 5574 06ec 0E000000 		.4byte	.LVL144
 5575 06f0 10000000 		.4byte	.LVL145
 5576 06f4 0400     		.2byte	0x4
 5577 06f6 F3       		.byte	0xf3
 5578 06f7 01       		.uleb128 0x1
 5579 06f8 50       		.byte	0x50
 5580 06f9 9F       		.byte	0x9f
 5581 06fa 10000000 		.4byte	.LVL145
 5582 06fe 16000000 		.4byte	.LVL146
 5583 0702 0100     		.2byte	0x1
 5584 0704 50       		.byte	0x50
 5585 0705 16000000 		.4byte	.LVL146
 5586 0709 3C000000 		.4byte	.LFE56
 5587 070d 0400     		.2byte	0x4
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 168


 5588 070f F3       		.byte	0xf3
 5589 0710 01       		.uleb128 0x1
 5590 0711 50       		.byte	0x50
 5591 0712 9F       		.byte	0x9f
 5592 0713 00000000 		.4byte	0
 5593 0717 00000000 		.4byte	0
 5594              	.LLST57:
 5595 071b 00000000 		.4byte	.LVL141
 5596 071f 1C000000 		.4byte	.LVL147
 5597 0723 0100     		.2byte	0x1
 5598 0725 51       		.byte	0x51
 5599 0726 1C000000 		.4byte	.LVL147
 5600 072a 3C000000 		.4byte	.LFE56
 5601 072e 0400     		.2byte	0x4
 5602 0730 F3       		.byte	0xf3
 5603 0731 01       		.uleb128 0x1
 5604 0732 51       		.byte	0x51
 5605 0733 9F       		.byte	0x9f
 5606 0734 00000000 		.4byte	0
 5607 0738 00000000 		.4byte	0
 5608              	.LLST58:
 5609 073c 1E000000 		.4byte	.LVL148
 5610 0740 26000000 		.4byte	.LVL149
 5611 0744 0100     		.2byte	0x1
 5612 0746 53       		.byte	0x53
 5613 0747 26000000 		.4byte	.LVL149
 5614 074b 28000000 		.4byte	.LVL150
 5615 074f 0100     		.2byte	0x1
 5616 0751 51       		.byte	0x51
 5617 0752 00000000 		.4byte	0
 5618 0756 00000000 		.4byte	0
 5619              		.section	.debug_aranges,"",%progbits
 5620 0000 CC010000 		.4byte	0x1cc
 5621 0004 0200     		.2byte	0x2
 5622 0006 00000000 		.4byte	.Ldebug_info0
 5623 000a 04       		.byte	0x4
 5624 000b 00       		.byte	0
 5625 000c 0000     		.2byte	0
 5626 000e 0000     		.2byte	0
 5627 0010 00000000 		.4byte	.LFB2
 5628 0014 14000000 		.4byte	.LFE2-.LFB2
 5629 0018 00000000 		.4byte	.LFB3
 5630 001c 10000000 		.4byte	.LFE3-.LFB3
 5631 0020 00000000 		.4byte	.LFB4
 5632 0024 20000000 		.4byte	.LFE4-.LFB4
 5633 0028 00000000 		.4byte	.LFB5
 5634 002c 34000000 		.4byte	.LFE5-.LFB5
 5635 0030 00000000 		.4byte	.LFB6
 5636 0034 18000000 		.4byte	.LFE6-.LFB6
 5637 0038 00000000 		.4byte	.LFB7
 5638 003c 2C000000 		.4byte	.LFE7-.LFB7
 5639 0040 00000000 		.4byte	.LFB10
 5640 0044 24000000 		.4byte	.LFE10-.LFB10
 5641 0048 00000000 		.4byte	.LFB11
 5642 004c 10000000 		.4byte	.LFE11-.LFB11
 5643 0050 00000000 		.4byte	.LFB12
 5644 0054 30000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 169


 5645 0058 00000000 		.4byte	.LFB14
 5646 005c 20000000 		.4byte	.LFE14-.LFB14
 5647 0060 00000000 		.4byte	.LFB15
 5648 0064 10000000 		.4byte	.LFE15-.LFB15
 5649 0068 00000000 		.4byte	.LFB16
 5650 006c 0C000000 		.4byte	.LFE16-.LFB16
 5651 0070 00000000 		.4byte	.LFB17
 5652 0074 14000000 		.4byte	.LFE17-.LFB17
 5653 0078 00000000 		.4byte	.LFB18
 5654 007c 10000000 		.4byte	.LFE18-.LFB18
 5655 0080 00000000 		.4byte	.LFB19
 5656 0084 0C000000 		.4byte	.LFE19-.LFB19
 5657 0088 00000000 		.4byte	.LFB20
 5658 008c 0E000000 		.4byte	.LFE20-.LFB20
 5659 0090 00000000 		.4byte	.LFB21
 5660 0094 0C000000 		.4byte	.LFE21-.LFB21
 5661 0098 00000000 		.4byte	.LFB22
 5662 009c 10000000 		.4byte	.LFE22-.LFB22
 5663 00a0 00000000 		.4byte	.LFB23
 5664 00a4 10000000 		.4byte	.LFE23-.LFB23
 5665 00a8 00000000 		.4byte	.LFB24
 5666 00ac 34000000 		.4byte	.LFE24-.LFB24
 5667 00b0 00000000 		.4byte	.LFB25
 5668 00b4 20000000 		.4byte	.LFE25-.LFB25
 5669 00b8 00000000 		.4byte	.LFB26
 5670 00bc 14000000 		.4byte	.LFE26-.LFB26
 5671 00c0 00000000 		.4byte	.LFB27
 5672 00c4 18000000 		.4byte	.LFE27-.LFB27
 5673 00c8 00000000 		.4byte	.LFB28
 5674 00cc 14000000 		.4byte	.LFE28-.LFB28
 5675 00d0 00000000 		.4byte	.LFB29
 5676 00d4 14000000 		.4byte	.LFE29-.LFB29
 5677 00d8 00000000 		.4byte	.LFB30
 5678 00dc 14000000 		.4byte	.LFE30-.LFB30
 5679 00e0 00000000 		.4byte	.LFB31
 5680 00e4 04000000 		.4byte	.LFE31-.LFB31
 5681 00e8 00000000 		.4byte	.LFB32
 5682 00ec 18000000 		.4byte	.LFE32-.LFB32
 5683 00f0 00000000 		.4byte	.LFB33
 5684 00f4 2C000000 		.4byte	.LFE33-.LFB33
 5685 00f8 00000000 		.4byte	.LFB34
 5686 00fc 14000000 		.4byte	.LFE34-.LFB34
 5687 0100 00000000 		.4byte	.LFB8
 5688 0104 24010000 		.4byte	.LFE8-.LFB8
 5689 0108 00000000 		.4byte	.LFB9
 5690 010c 58000000 		.4byte	.LFE9-.LFB9
 5691 0110 00000000 		.4byte	.LFB13
 5692 0114 44000000 		.4byte	.LFE13-.LFB13
 5693 0118 00000000 		.4byte	.LFB35
 5694 011c 48000000 		.4byte	.LFE35-.LFB35
 5695 0120 00000000 		.4byte	.LFB37
 5696 0124 54000000 		.4byte	.LFE37-.LFB37
 5697 0128 00000000 		.4byte	.LFB39
 5698 012c 10000000 		.4byte	.LFE39-.LFB39
 5699 0130 00000000 		.4byte	.LFB40
 5700 0134 10000000 		.4byte	.LFE40-.LFB40
 5701 0138 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 170


 5702 013c 18000000 		.4byte	.LFE38-.LFB38
 5703 0140 00000000 		.4byte	.LFB36
 5704 0144 1C000000 		.4byte	.LFE36-.LFB36
 5705 0148 00000000 		.4byte	.LFB41
 5706 014c 10000000 		.4byte	.LFE41-.LFB41
 5707 0150 00000000 		.4byte	.LFB42
 5708 0154 10000000 		.4byte	.LFE42-.LFB42
 5709 0158 00000000 		.4byte	.LFB43
 5710 015c 10000000 		.4byte	.LFE43-.LFB43
 5711 0160 00000000 		.4byte	.LFB44
 5712 0164 10000000 		.4byte	.LFE44-.LFB44
 5713 0168 00000000 		.4byte	.LFB45
 5714 016c 18000000 		.4byte	.LFE45-.LFB45
 5715 0170 00000000 		.4byte	.LFB46
 5716 0174 10000000 		.4byte	.LFE46-.LFB46
 5717 0178 00000000 		.4byte	.LFB47
 5718 017c 10000000 		.4byte	.LFE47-.LFB47
 5719 0180 00000000 		.4byte	.LFB51
 5720 0184 24000000 		.4byte	.LFE51-.LFB51
 5721 0188 00000000 		.4byte	.LFB48
 5722 018c 0C000000 		.4byte	.LFE48-.LFB48
 5723 0190 00000000 		.4byte	.LFB49
 5724 0194 10000000 		.4byte	.LFE49-.LFB49
 5725 0198 00000000 		.4byte	.LFB50
 5726 019c 0C000000 		.4byte	.LFE50-.LFB50
 5727 01a0 00000000 		.4byte	.LFB52
 5728 01a4 74000000 		.4byte	.LFE52-.LFB52
 5729 01a8 00000000 		.4byte	.LFB53
 5730 01ac 20000000 		.4byte	.LFE53-.LFB53
 5731 01b0 00000000 		.4byte	.LFB54
 5732 01b4 20000000 		.4byte	.LFE54-.LFB54
 5733 01b8 00000000 		.4byte	.LFB55
 5734 01bc 20000000 		.4byte	.LFE55-.LFB55
 5735 01c0 00000000 		.4byte	.LFB56
 5736 01c4 3C000000 		.4byte	.LFE56-.LFB56
 5737 01c8 00000000 		.4byte	0
 5738 01cc 00000000 		.4byte	0
 5739              		.section	.debug_ranges,"",%progbits
 5740              	.Ldebug_ranges0:
 5741 0000 2C000000 		.4byte	.LBB16
 5742 0004 2E000000 		.4byte	.LBE16
 5743 0008 2E000000 		.4byte	.LBB19
 5744 000c 30000000 		.4byte	.LBE19
 5745 0010 00000000 		.4byte	0
 5746 0014 00000000 		.4byte	0
 5747 0018 04000000 		.4byte	.LBB30
 5748 001c 06000000 		.4byte	.LBE30
 5749 0020 18000000 		.4byte	.LBB43
 5750 0024 1E000000 		.4byte	.LBE43
 5751 0028 20000000 		.4byte	.LBB44
 5752 002c 22000000 		.4byte	.LBE44
 5753 0030 00000000 		.4byte	0
 5754 0034 00000000 		.4byte	0
 5755 0038 08000000 		.4byte	.LBB37
 5756 003c 0A000000 		.4byte	.LBE37
 5757 0040 14000000 		.4byte	.LBB41
 5758 0044 16000000 		.4byte	.LBE41
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 171


 5759 0048 16000000 		.4byte	.LBB42
 5760 004c 18000000 		.4byte	.LBE42
 5761 0050 00000000 		.4byte	0
 5762 0054 00000000 		.4byte	0
 5763 0058 04000000 		.4byte	.LBB51
 5764 005c 06000000 		.4byte	.LBE51
 5765 0060 0A000000 		.4byte	.LBB54
 5766 0064 0E000000 		.4byte	.LBE54
 5767 0068 00000000 		.4byte	0
 5768 006c 00000000 		.4byte	0
 5769 0070 00000000 		.4byte	.LFB2
 5770 0074 14000000 		.4byte	.LFE2
 5771 0078 00000000 		.4byte	.LFB3
 5772 007c 10000000 		.4byte	.LFE3
 5773 0080 00000000 		.4byte	.LFB4
 5774 0084 20000000 		.4byte	.LFE4
 5775 0088 00000000 		.4byte	.LFB5
 5776 008c 34000000 		.4byte	.LFE5
 5777 0090 00000000 		.4byte	.LFB6
 5778 0094 18000000 		.4byte	.LFE6
 5779 0098 00000000 		.4byte	.LFB7
 5780 009c 2C000000 		.4byte	.LFE7
 5781 00a0 00000000 		.4byte	.LFB10
 5782 00a4 24000000 		.4byte	.LFE10
 5783 00a8 00000000 		.4byte	.LFB11
 5784 00ac 10000000 		.4byte	.LFE11
 5785 00b0 00000000 		.4byte	.LFB12
 5786 00b4 30000000 		.4byte	.LFE12
 5787 00b8 00000000 		.4byte	.LFB14
 5788 00bc 20000000 		.4byte	.LFE14
 5789 00c0 00000000 		.4byte	.LFB15
 5790 00c4 10000000 		.4byte	.LFE15
 5791 00c8 00000000 		.4byte	.LFB16
 5792 00cc 0C000000 		.4byte	.LFE16
 5793 00d0 00000000 		.4byte	.LFB17
 5794 00d4 14000000 		.4byte	.LFE17
 5795 00d8 00000000 		.4byte	.LFB18
 5796 00dc 10000000 		.4byte	.LFE18
 5797 00e0 00000000 		.4byte	.LFB19
 5798 00e4 0C000000 		.4byte	.LFE19
 5799 00e8 00000000 		.4byte	.LFB20
 5800 00ec 0E000000 		.4byte	.LFE20
 5801 00f0 00000000 		.4byte	.LFB21
 5802 00f4 0C000000 		.4byte	.LFE21
 5803 00f8 00000000 		.4byte	.LFB22
 5804 00fc 10000000 		.4byte	.LFE22
 5805 0100 00000000 		.4byte	.LFB23
 5806 0104 10000000 		.4byte	.LFE23
 5807 0108 00000000 		.4byte	.LFB24
 5808 010c 34000000 		.4byte	.LFE24
 5809 0110 00000000 		.4byte	.LFB25
 5810 0114 20000000 		.4byte	.LFE25
 5811 0118 00000000 		.4byte	.LFB26
 5812 011c 14000000 		.4byte	.LFE26
 5813 0120 00000000 		.4byte	.LFB27
 5814 0124 18000000 		.4byte	.LFE27
 5815 0128 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 172


 5816 012c 14000000 		.4byte	.LFE28
 5817 0130 00000000 		.4byte	.LFB29
 5818 0134 14000000 		.4byte	.LFE29
 5819 0138 00000000 		.4byte	.LFB30
 5820 013c 14000000 		.4byte	.LFE30
 5821 0140 00000000 		.4byte	.LFB31
 5822 0144 04000000 		.4byte	.LFE31
 5823 0148 00000000 		.4byte	.LFB32
 5824 014c 18000000 		.4byte	.LFE32
 5825 0150 00000000 		.4byte	.LFB33
 5826 0154 2C000000 		.4byte	.LFE33
 5827 0158 00000000 		.4byte	.LFB34
 5828 015c 14000000 		.4byte	.LFE34
 5829 0160 00000000 		.4byte	.LFB8
 5830 0164 24010000 		.4byte	.LFE8
 5831 0168 00000000 		.4byte	.LFB9
 5832 016c 58000000 		.4byte	.LFE9
 5833 0170 00000000 		.4byte	.LFB13
 5834 0174 44000000 		.4byte	.LFE13
 5835 0178 00000000 		.4byte	.LFB35
 5836 017c 48000000 		.4byte	.LFE35
 5837 0180 00000000 		.4byte	.LFB37
 5838 0184 54000000 		.4byte	.LFE37
 5839 0188 00000000 		.4byte	.LFB39
 5840 018c 10000000 		.4byte	.LFE39
 5841 0190 00000000 		.4byte	.LFB40
 5842 0194 10000000 		.4byte	.LFE40
 5843 0198 00000000 		.4byte	.LFB38
 5844 019c 18000000 		.4byte	.LFE38
 5845 01a0 00000000 		.4byte	.LFB36
 5846 01a4 1C000000 		.4byte	.LFE36
 5847 01a8 00000000 		.4byte	.LFB41
 5848 01ac 10000000 		.4byte	.LFE41
 5849 01b0 00000000 		.4byte	.LFB42
 5850 01b4 10000000 		.4byte	.LFE42
 5851 01b8 00000000 		.4byte	.LFB43
 5852 01bc 10000000 		.4byte	.LFE43
 5853 01c0 00000000 		.4byte	.LFB44
 5854 01c4 10000000 		.4byte	.LFE44
 5855 01c8 00000000 		.4byte	.LFB45
 5856 01cc 18000000 		.4byte	.LFE45
 5857 01d0 00000000 		.4byte	.LFB46
 5858 01d4 10000000 		.4byte	.LFE46
 5859 01d8 00000000 		.4byte	.LFB47
 5860 01dc 10000000 		.4byte	.LFE47
 5861 01e0 00000000 		.4byte	.LFB51
 5862 01e4 24000000 		.4byte	.LFE51
 5863 01e8 00000000 		.4byte	.LFB48
 5864 01ec 0C000000 		.4byte	.LFE48
 5865 01f0 00000000 		.4byte	.LFB49
 5866 01f4 10000000 		.4byte	.LFE49
 5867 01f8 00000000 		.4byte	.LFB50
 5868 01fc 0C000000 		.4byte	.LFE50
 5869 0200 00000000 		.4byte	.LFB52
 5870 0204 74000000 		.4byte	.LFE52
 5871 0208 00000000 		.4byte	.LFB53
 5872 020c 20000000 		.4byte	.LFE53
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 173


 5873 0210 00000000 		.4byte	.LFB54
 5874 0214 20000000 		.4byte	.LFE54
 5875 0218 00000000 		.4byte	.LFB55
 5876 021c 20000000 		.4byte	.LFE55
 5877 0220 00000000 		.4byte	.LFB56
 5878 0224 3C000000 		.4byte	.LFE56
 5879 0228 00000000 		.4byte	0
 5880 022c 00000000 		.4byte	0
 5881              		.section	.debug_line,"",%progbits
 5882              	.Ldebug_line0:
 5883 0000 D3050000 		.section	.debug_str,"MS",%progbits,1
 5883      02004D00 
 5883      00000201 
 5883      FB0E0D00 
 5883      01010101 
 5884              	.LASF34:
 5885 0000 72616D56 		.ascii	"ramVectorTable\000"
 5885      6563746F 
 5885      72546162 
 5885      6C6500
 5886              	.LASF77:
 5887 000f 62675472 		.ascii	"bgTrim4\000"
 5887      696D3400 
 5888              	.LASF10:
 5889 0017 75696E74 		.ascii	"uint16\000"
 5889      313600
 5890              	.LASF54:
 5891 001e 696E7453 		.ascii	"intState\000"
 5891      74617465 
 5891      00
 5892              	.LASF39:
 5893 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5893      73436C6B 
 5893      57726974 
 5893      65486663 
 5893      6C6B4469 
 5894              	.LASF117:
 5895 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 5895      73436C6B 
 5895      50756D70 
 5895      436F6E66 
 5895      696700
 5896              	.LASF33:
 5897 0053 6F6C6449 		.ascii	"oldIsr\000"
 5897      737200
 5898              	.LASF99:
 5899 005a 72657456 		.ascii	"retVal\000"
 5899      616C00
 5900              	.LASF53:
 5901 0061 43794469 		.ascii	"CyDisableInts\000"
 5901      7361626C 
 5901      65496E74 
 5901      7300
 5902              	.LASF80:
 5903 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 5903      656E7449 
 5903      6D6F5472 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 174


 5903      696D3256 
 5903      616C7565 
 5904              	.LASF7:
 5905 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 5905      206C6F6E 
 5905      6720756E 
 5905      7369676E 
 5905      65642069 
 5906              	.LASF115:
 5907 009b 43795379 		.ascii	"CySysTickInitVar\000"
 5907      73546963 
 5907      6B496E69 
 5907      74566172 
 5907      00
 5908              	.LASF55:
 5909 00ac 4379456E 		.ascii	"CyEnableInts\000"
 5909      61626C65 
 5909      496E7473 
 5909      00
 5910              	.LASF109:
 5911 00b9 696E7465 		.ascii	"interfaceNumber\000"
 5911      72666163 
 5911      654E756D 
 5911      62657200 
 5912              	.LASF70:
 5913 00c9 4379536F 		.ascii	"CySoftwareReset\000"
 5913      66747761 
 5913      72655265 
 5913      73657400 
 5914              	.LASF88:
 5915 00d9 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5915      73546963 
 5915      6B456E61 
 5915      626C6549 
 5915      6E746572 
 5916              	.LASF65:
 5917 00f2 4379496E 		.ascii	"CyIntGetState\000"
 5917      74476574 
 5917      53746174 
 5917      6500
 5918              	.LASF6:
 5919 0100 6C6F6E67 		.ascii	"long long int\000"
 5919      206C6F6E 
 5919      6720696E 
 5919      7400
 5920              	.LASF0:
 5921 010e 7369676E 		.ascii	"signed char\000"
 5921      65642063 
 5921      68617200 
 5922              	.LASF76:
 5923 011a 66726571 		.ascii	"freq\000"
 5923      00
 5924              	.LASF85:
 5925 011f 43794465 		.ascii	"CyDelayFreq\000"
 5925      6C617946 
 5925      72657100 
 5926              	.LASF37:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 175


 5927 012b 696E7465 		.ascii	"interruptState\000"
 5927      72727570 
 5927      74537461 
 5927      746500
 5928              	.LASF93:
 5929 013a 43795379 		.ascii	"CySysTickGetReload\000"
 5929      73546963 
 5929      6B476574 
 5929      52656C6F 
 5929      616400
 5930              	.LASF4:
 5931 014d 6C6F6E67 		.ascii	"long int\000"
 5931      20696E74 
 5931      00
 5932              	.LASF66:
 5933 0156 4379496E 		.ascii	"CyIntDisable\000"
 5933      74446973 
 5933      61626C65 
 5933      00
 5934              	.LASF100:
 5935 0163 43795379 		.ascii	"CySysTickGetCallback\000"
 5935      73546963 
 5935      6B476574 
 5935      43616C6C 
 5935      6261636B 
 5936              	.LASF9:
 5937 0178 75696E74 		.ascii	"uint8\000"
 5937      3800
 5938              	.LASF112:
 5939 017e 63796465 		.ascii	"cydelayFreqKhz\000"
 5939      6C617946 
 5939      7265714B 
 5939      687A00
 5940              	.LASF42:
 5941 018d 656E6162 		.ascii	"enable\000"
 5941      6C6500
 5942              	.LASF13:
 5943 0194 646F7562 		.ascii	"double\000"
 5943      6C6500
 5944              	.LASF62:
 5945 019b 73686966 		.ascii	"shift\000"
 5945      7400
 5946              	.LASF23:
 5947 01a1 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5947      734C7664 
 5947      436C6561 
 5947      72496E74 
 5947      65727275 
 5948              	.LASF11:
 5949 01b8 75696E74 		.ascii	"uint32\000"
 5949      333200
 5950              	.LASF29:
 5951 01bf 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5951      73436C6B 
 5951      45636F52 
 5951      65616453 
 5951      74617475 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 176


 5952              	.LASF56:
 5953 01d5 6D61736B 		.ascii	"mask\000"
 5953      00
 5954              	.LASF49:
 5955 01da 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5955      73436C6B 
 5955      47657453 
 5955      7973636C 
 5955      6B536F75 
 5956              	.LASF63:
 5957 01f2 4379496E 		.ascii	"CyIntGetPriority\000"
 5957      74476574 
 5957      5072696F 
 5957      72697479 
 5957      00
 5958              	.LASF114:
 5959 0203 63796465 		.ascii	"cydelay32kMs\000"
 5959      6C617933 
 5959      326B4D73 
 5959      00
 5960              	.LASF86:
 5961 0210 43795379 		.ascii	"CySysTickInit\000"
 5961      73546963 
 5961      6B496E69 
 5961      7400
 5962              	.LASF28:
 5963 021e 76616C75 		.ascii	"value\000"
 5963      6500
 5964              	.LASF27:
 5965 0224 636C6F63 		.ascii	"clockSource\000"
 5965      6B536F75 
 5965      72636500 
 5966              	.LASF101:
 5967 0230 43794765 		.ascii	"CyGetUniqueId\000"
 5967      74556E69 
 5967      71756549 
 5967      6400
 5968              	.LASF96:
 5969 023e 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5969      73546963 
 5969      6B476574 
 5969      436F756E 
 5969      74466C61 
 5970              	.LASF8:
 5971 0254 756E7369 		.ascii	"unsigned int\000"
 5971      676E6564 
 5971      20696E74 
 5971      00
 5972              	.LASF24:
 5973 0261 43795379 		.ascii	"CySysTickClear\000"
 5973      73546963 
 5973      6B436C65 
 5973      617200
 5974              	.LASF5:
 5975 0270 6C6F6E67 		.ascii	"long unsigned int\000"
 5975      20756E73 
 5975      69676E65 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 177


 5975      6420696E 
 5975      7400
 5976              	.LASF92:
 5977 0282 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5977      734C7664 
 5977      47657449 
 5977      6E746572 
 5977      72757074 
 5978              	.LASF36:
 5979 029d 43795379 		.ascii	"CySysClkImoStop\000"
 5979      73436C6B 
 5979      496D6F53 
 5979      746F7000 
 5980              	.LASF118:
 5981 02ad 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5981      74657243 
 5981      72697469 
 5981      63616C53 
 5981      65637469 
 5982              	.LASF67:
 5983 02c4 4379496E 		.ascii	"CyIntSetPending\000"
 5983      74536574 
 5983      50656E64 
 5983      696E6700 
 5984              	.LASF50:
 5985 02d4 43795379 		.ascii	"CySysGetResetReason\000"
 5985      73476574 
 5985      52657365 
 5985      74526561 
 5985      736F6E00 
 5986              	.LASF3:
 5987 02e8 73686F72 		.ascii	"short unsigned int\000"
 5987      7420756E 
 5987      7369676E 
 5987      65642069 
 5987      6E7400
 5988              	.LASF105:
 5989 02fb 72656754 		.ascii	"regTmp\000"
 5989      6D7000
 5990              	.LASF25:
 5991 0302 43795379 		.ascii	"CySysTickSetClockSource\000"
 5991      73546963 
 5991      6B536574 
 5991      436C6F63 
 5991      6B536F75 
 5992              	.LASF58:
 5993 031a 4379496E 		.ascii	"CyIntSetVector\000"
 5993      74536574 
 5993      56656374 
 5993      6F7200
 5994              	.LASF31:
 5995 0329 6E756D62 		.ascii	"number\000"
 5995      657200
 5996              	.LASF61:
 5997 0330 7072696F 		.ascii	"priority\000"
 5997      72697479 
 5997      00
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 178


 5998              	.LASF75:
 5999 0339 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5999      73436C6B 
 5999      57726974 
 5999      65496D6F 
 5999      46726571 
 6000              	.LASF106:
 6001 034e 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 6001      73536574 
 6001      466C6173 
 6001      68416363 
 6001      65737341 
 6002              	.LASF30:
 6003 036d 4379496E 		.ascii	"CyIntSetSysVector\000"
 6003      74536574 
 6003      53797356 
 6003      6563746F 
 6003      7200
 6004              	.LASF40:
 6005 037f 43795379 		.ascii	"CySysEnablePumpClock\000"
 6005      73456E61 
 6005      626C6550 
 6005      756D7043 
 6005      6C6F636B 
 6006              	.LASF17:
 6007 0394 72656733 		.ascii	"reg32\000"
 6007      3200
 6008              	.LASF90:
 6009 039a 43795379 		.ascii	"CySysTickStart\000"
 6009      73546963 
 6009      6B537461 
 6009      727400
 6010              	.LASF52:
 6011 03a9 72657475 		.ascii	"returnStatus\000"
 6011      726E5374 
 6011      61747573 
 6011      00
 6012              	.LASF104:
 6013 03b6 736F7572 		.ascii	"source\000"
 6013      636500
 6014              	.LASF20:
 6015 03bd 73697A65 		.ascii	"sizetype\000"
 6015      74797065 
 6015      00
 6016              	.LASF108:
 6017 03c6 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 6017      73536574 
 6017      50657269 
 6017      70686572 
 6017      616C4163 
 6018              	.LASF68:
 6019 03ea 4379496E 		.ascii	"CyIntClearPending\000"
 6019      74436C65 
 6019      61725065 
 6019      6E64696E 
 6019      6700
 6020              	.LASF19:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 179


 6021 03fc 6C6F6E67 		.ascii	"long double\000"
 6021      20646F75 
 6021      626C6500 
 6022              	.LASF32:
 6023 0408 61646472 		.ascii	"address\000"
 6023      65737300 
 6024              	.LASF121:
 6025 0410 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6025      43313120 
 6025      352E342E 
 6025      31203230 
 6025      31363036 
 6026 0443 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6026      20726576 
 6026      6973696F 
 6026      6E203233 
 6026      37373135 
 6027 0476 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 6027      66756E63 
 6027      74696F6E 
 6027      2D736563 
 6027      74696F6E 
 6028              	.LASF78:
 6029 049e 62675472 		.ascii	"bgTrim5\000"
 6029      696D3500 
 6030              	.LASF43:
 6031 04a6 73797363 		.ascii	"sysclkSource\000"
 6031      6C6B536F 
 6031      75726365 
 6031      00
 6032              	.LASF98:
 6033 04b3 66756E63 		.ascii	"function\000"
 6033      74696F6E 
 6033      00
 6034              	.LASF116:
 6035 04bc 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 6035      6F467265 
 6035      714D687A 
 6035      32526567 
 6035      00
 6036              	.LASF94:
 6037 04cd 43795379 		.ascii	"CySysTickGetValue\000"
 6037      73546963 
 6037      6B476574 
 6037      56616C75 
 6037      6500
 6038              	.LASF111:
 6039 04df 63796465 		.ascii	"cydelayFreqHz\000"
 6039      6C617946 
 6039      72657148 
 6039      7A00
 6040              	.LASF60:
 6041 04ed 4379496E 		.ascii	"CyIntSetPriority\000"
 6041      74536574 
 6041      5072696F 
 6041      72697479 
 6041      00
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 180


 6042              	.LASF12:
 6043 04fe 666C6F61 		.ascii	"float\000"
 6043      7400
 6044              	.LASF119:
 6045 0504 43794578 		.ascii	"CyExitCriticalSection\000"
 6045      69744372 
 6045      69746963 
 6045      616C5365 
 6045      6374696F 
 6046              	.LASF83:
 6047 051a 43795379 		.ascii	"CySysLvdEnable\000"
 6047      734C7664 
 6047      456E6162 
 6047      6C6500
 6048              	.LASF21:
 6049 0529 63795379 		.ascii	"cySysTickCallback\000"
 6049      73546963 
 6049      6B43616C 
 6049      6C626163 
 6049      6B00
 6050              	.LASF59:
 6051 053b 4379496E 		.ascii	"CyIntGetVector\000"
 6051      74476574 
 6051      56656374 
 6051      6F7200
 6052              	.LASF72:
 6053 054a 6D696C6C 		.ascii	"milliseconds\000"
 6053      69736563 
 6053      6F6E6473 
 6053      00
 6054              	.LASF120:
 6055 0557 43794465 		.ascii	"CyDelayCycles\000"
 6055      6C617943 
 6055      79636C65 
 6055      7300
 6056              	.LASF16:
 6057 0565 72656738 		.ascii	"reg8\000"
 6057      00
 6058              	.LASF84:
 6059 056a 74687265 		.ascii	"threshold\000"
 6059      73686F6C 
 6059      6400
 6060              	.LASF69:
 6061 0574 43794861 		.ascii	"CyHalt\000"
 6061      6C7400
 6062              	.LASF103:
 6063 057b 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 6063      73536574 
 6063      52616D41 
 6063      63636573 
 6063      73417262 
 6064              	.LASF1:
 6065 0598 756E7369 		.ascii	"unsigned char\000"
 6065      676E6564 
 6065      20636861 
 6065      7200
 6066              	.LASF51:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 181


 6067 05a6 72656173 		.ascii	"reason\000"
 6067      6F6E00
 6068              	.LASF2:
 6069 05ad 73686F72 		.ascii	"short int\000"
 6069      7420696E 
 6069      7400
 6070              	.LASF64:
 6071 05b7 4379496E 		.ascii	"CyIntEnable\000"
 6071      74456E61 
 6071      626C6500 
 6072              	.LASF57:
 6073 05c3 4379496E 		.ascii	"CyIntGetSysVector\000"
 6073      74476574 
 6073      53797356 
 6073      6563746F 
 6073      7200
 6074              	.LASF41:
 6075 05d5 636C6B53 		.ascii	"clkSelect\000"
 6075      656C6563 
 6075      7400
 6076              	.LASF81:
 6077 05df 43795379 		.ascii	"CySysClkEcoStart\000"
 6077      73436C6B 
 6077      45636F53 
 6077      74617274 
 6077      00
 6078              	.LASF73:
 6079 05f0 43794465 		.ascii	"CyDelayUs\000"
 6079      6C617955 
 6079      7300
 6080              	.LASF124:
 6081 05fa 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 6081      73546963 
 6081      6B536572 
 6081      76696365 
 6081      43616C6C 
 6082              	.LASF14:
 6083 0614 63686172 		.ascii	"char\000"
 6083      00
 6084              	.LASF18:
 6085 0619 63796973 		.ascii	"cyisraddress\000"
 6085      72616464 
 6085      72657373 
 6085      00
 6086              	.LASF89:
 6087 0626 43795379 		.ascii	"CySysTickEnable\000"
 6087      73546963 
 6087      6B456E61 
 6087      626C6500 
 6088              	.LASF44:
 6089 0636 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 6089      73436C6B 
 6089      57726974 
 6089      65537973 
 6089      636C6B44 
 6090              	.LASF97:
 6091 064d 43795379 		.ascii	"CySysTickSetCallback\000"
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 182


 6091      73546963 
 6091      6B536574 
 6091      43616C6C 
 6091      6261636B 
 6092              	.LASF110:
 6093 0662 43795379 		.ascii	"CySysTickCallbacks\000"
 6093      73546963 
 6093      6B43616C 
 6093      6C626163 
 6093      6B7300
 6094              	.LASF102:
 6095 0675 756E6971 		.ascii	"uniqueId\000"
 6095      75654964 
 6095      00
 6096              	.LASF123:
 6097 067e 433A5C55 		.ascii	"C:\\Users\\user\\Desktop\\__Testy 740G\\BLE projekt"
 6097      73657273 
 6097      5C757365 
 6097      725C4465 
 6097      736B746F 
 6098 06ac 5C424C45 		.ascii	"\\BLE_Continuous_Glucose_Monitoring_Sensor01\\BLE_C"
 6098      5F436F6E 
 6098      74696E75 
 6098      6F75735F 
 6098      476C7563 
 6099 06dd 6F6E7469 		.ascii	"ontinuous_Glucose_Monitoring_Sensor01.cydsn\000"
 6099      6E756F75 
 6099      735F476C 
 6099      75636F73 
 6099      655F4D6F 
 6100              	.LASF71:
 6101 0709 43794465 		.ascii	"CyDelay\000"
 6101      6C617900 
 6102              	.LASF95:
 6103 0711 43795379 		.ascii	"CySysTickGetClockSource\000"
 6103      73546963 
 6103      6B476574 
 6103      436C6F63 
 6103      6B536F75 
 6104              	.LASF91:
 6105 0729 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 6105      73546963 
 6105      6B446973 
 6105      61626C65 
 6105      496E7465 
 6106              	.LASF48:
 6107 0743 43795379 		.ascii	"CySysLvdDisable\000"
 6107      734C7664 
 6107      44697361 
 6107      626C6500 
 6108              	.LASF113:
 6109 0753 63796465 		.ascii	"cydelayFreqMhz\000"
 6109      6C617946 
 6109      7265714D 
 6109      687A00
 6110              	.LASF46:
 6111 0762 43795379 		.ascii	"CySysClkEcoStop\000"
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 183


 6111      73436C6B 
 6111      45636F53 
 6111      746F7000 
 6112              	.LASF107:
 6113 0772 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 6113      73536574 
 6113      446D6163 
 6113      41636365 
 6113      73734172 
 6114              	.LASF87:
 6115 0790 43795379 		.ascii	"CySysTickStop\000"
 6115      73546963 
 6115      6B53746F 
 6115      7000
 6116              	.LASF82:
 6117 079e 74696D65 		.ascii	"timeoutUs\000"
 6117      6F757455 
 6117      7300
 6118              	.LASF45:
 6119 07a8 64697669 		.ascii	"divider\000"
 6119      64657200 
 6120              	.LASF47:
 6121 07b0 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 6121      73436C6B 
 6121      57726974 
 6121      6545636F 
 6121      44697600 
 6122              	.LASF15:
 6123 07c4 63797374 		.ascii	"cystatus\000"
 6123      61747573 
 6123      00
 6124              	.LASF35:
 6125 07cd 43795379 		.ascii	"CySysClkImoStart\000"
 6125      73436C6B 
 6125      496D6F53 
 6125      74617274 
 6125      00
 6126              	.LASF79:
 6127 07de 6E657749 		.ascii	"newImoTrim2Value\000"
 6127      6D6F5472 
 6127      696D3256 
 6127      616C7565 
 6127      00
 6128              	.LASF122:
 6129 07ef 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 6129      72617465 
 6129      645F536F 
 6129      75726365 
 6129      5C50536F 
 6130              	.LASF74:
 6131 080e 6D696372 		.ascii	"microseconds\000"
 6131      6F736563 
 6131      6F6E6473 
 6131      00
 6132              	.LASF38:
 6133 081b 746D7052 		.ascii	"tmpReg\000"
 6133      656700
ARM GAS  C:\Users\user\AppData\Local\Temp\ccSUqmVB.s 			page 184


 6134              	.LASF26:
 6135 0822 43795379 		.ascii	"CySysTickSetReload\000"
 6135      73546963 
 6135      6B536574 
 6135      52656C6F 
 6135      616400
 6136              	.LASF22:
 6137 0835 72657475 		.ascii	"returnValue\000"
 6137      726E5661 
 6137      6C756500 
 6138              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
